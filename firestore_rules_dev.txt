// üîß R√àGLES FIRESTORE POUR LE D√âVELOPPEMENT
// ‚ö†Ô∏è √Ä utiliser UNIQUEMENT en d√©veloppement !

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // üß™ R√®gles permissives pour le d√©veloppement
    // Permet la lecture et l'√©criture pour tous les utilisateurs authentifi√©s
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // üìù Alternative : R√®gles compl√®tement ouvertes (TR√àS DANGEREUX)
    // D√©commentez SEULEMENT si l'authentification ne fonctionne pas
    /*
    match /{document=**} {
      allow read, write: if true;
    }
    */
  }
}

// üìã INSTRUCTIONS D'UTILISATION :
// 
// 1. Allez sur : https://console.firebase.google.com/project/constattunisiemail-462921/firestore/rules
// 2. Copiez-collez les r√®gles ci-dessus
// 3. Cliquez sur "Publier"
// 4. Testez votre application
// 
// ‚ö†Ô∏è IMPORTANT : 
// - Ces r√®gles sont UNIQUEMENT pour le d√©veloppement
// - En production, utilisez des r√®gles s√©curis√©es
// - N'oubliez pas de remettre les vraies r√®gles apr√®s les tests

// üîí R√àGLES DE PRODUCTION (√† remettre apr√®s les tests) :
/*
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction d'authentification
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Fonction pour v√©rifier le r√¥le
    function hasRole(role) {
      return isAuthenticated() && 
             resource.data.role == role && 
             request.auth.uid == resource.id;
    }
    
    // Collection des utilisateurs
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Collection des v√©hicules
    match /vehicules/{vehiculeId} {
      allow read, write: if isAuthenticated();
    }
    
    // Collection des constats
    match /constats/{constatId} {
      allow read, write: if isAuthenticated();
    }
    
    // Collections d'assurance
    match /assureurs_compagnies/{companyId} {
      allow read: if isAuthenticated();
      allow write: if hasRole('assureur');
    }
    
    match /vehicules_assures/{vehiculeId} {
      allow read, write: if isAuthenticated();
    }
    
    match /clients_assurance/{clientId} {
      allow read, write: if isAuthenticated();
    }
    
    match /analytics/{docId} {
      allow read: if isAuthenticated();
      allow write: if hasRole('assureur') || hasRole('expert');
    }
  }
}
*/
