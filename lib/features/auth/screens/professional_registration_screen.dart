import 'package:flutter/material.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:image_picker/image_picker.dart';import 'package:firebase_auth/firebase_auth.dart';import 'dart:io';import '../models/notification_model.dart';import '../services/notification_service.dart';import '../../../core/config/app_routes.dart';/// üè¢ √âcran d';  final String userType; // 'assureur' ou 'expert';    'Tunis', 'Ariana', 'Ben Arous', 'Manouba', 'Nabeul', 'Zaghouan';    'Bizerte', 'B√©ja', 'Jendouba', 'Kef', 'Siliana', 'Sousse';    'Monastir', 'Mahdia', 'Sfax', 'Kairouan', 'Kasserine', 'Sidi Bouzid';    'Gab√®s', 'M√©denine', 'Tataouine', 'Gafsa', 'Tozeur', 'K√©bili';        title: Text(widget.userType == 'assureur';            ? 'Inscription Agent d\'Assurance';            : 'Inscription Expert';      case 0: return 'Infos personnelles';      case 1: return 'Infos professionnelles';      case 2: return 'Documents';      case 3: return 'V√©rification';      default: return '';              'üë§ Informations Personnelles';              'Veuillez renseigner vos informations personnelles';                labelText: 'Email professionnel *';                  return 'Veuillez saisir votre email';                if (!RegExp(r'^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$';                  return 'Format d\'email invalide';                labelText: 'Mot de passe *';                  return 'Veuillez saisir un mot de passe';                  return 'Le mot de passe doit contenir au moins 6 caract√®res';                labelText: 'Confirmer le mot de passe *';                  return 'Les mots de passe ne correspondent pas';                      labelText: 'Nom *';                        return 'Requis';                      labelText: 'Pr√©nom *';                        return 'Requis';                labelText: 'T√©l√©phone *';                  return 'Veuillez saisir votre num√©ro de t√©l√©phone';                labelText: 'Adresse';            widget.userType == 'assureur' ? 'üè¢ Informations Assurance' : 'üîç Informations Expert';            widget.userType == 'assureur';                ? 'Renseignez vos informations d\'agent d\'assurance';                : 'Renseignez vos informations d\'expert';          if (widget.userType == 'assureur';          if (widget.userType == 'expert';            'üìÑ Documents Justificatifs';            'Ajoutez les documents n√©cessaires pour valider votre demande';          // Zone d';              labelText: 'Lettre de motivation (optionnel)';              hintText: 'Expliquez pourquoi vous souhaitez rejoindre notre plateforme...';            '‚úÖ V√©rification';            'V√©rifiez vos informations avant de soumettre votre demande';                        'Information importante';                  'Votre demande sera examin√©e par nos administrateurs. Vous recevrez une notification par email une fois votre compte valid√©.';      // Compagnie d';          labelText: 'Compagnie d\'assurance *';            return 'Veuillez saisir votre compagnie';          labelText: 'Matricule agent *';            return 'Veuillez saisir votre matricule';          labelText: 'Gouvernorat *';            return 'Veuillez s√©lectionner un gouvernorat';          labelText: 'Agence pr√©f√©r√©e';          hintText: 'Ex: Agence Tunis Centre';      // Cabinet d';          labelText: 'Cabinet d\'expertise *';            return 'Veuillez saisir votre cabinet';      // Num√©ro d';          labelText: 'Num√©ro d\'agr√©ment *';            return 'Veuillez saisir votre num√©ro d\'agr√©ment';          labelText: 'Sp√©cialit√©s';          hintText: 'Ex: Expertise automobile, Dommages corporels...';  /// üìÑ Zone d';            'Ajoutez vos documents justificatifs';            'CIN, Dipl√¥mes, Certificats professionnels...';                label: const Text('Cam√©ra';                label: const Text('Galerie';          'Documents ajout√©s (${_selectedDocuments.length})';                    file.path.split('/';            _buildSummaryRow('Email';            _buildSummaryRow('Nom complet', '${_prenomController.text} ${_nomController.text}';            _buildSummaryRow('T√©l√©phone';            if (widget.userType == 'assureur';              _buildSummaryRow('Compagnie';              _buildSummaryRow('Matricule';              _buildSummaryRow('Gouvernorat', _selectedGouvernorat ?? '';            if (widget.userType == 'expert';              _buildSummaryRow('Cabinet';              _buildSummaryRow('Agr√©ment';            _buildSummaryRow('Documents', '${_selectedDocuments.length} fichier(s)';              '$label:';            child: Text(value.isEmpty ? 'Non renseign√©';                child: const Text('Pr√©c√©dent';                  : Text(_currentStep == 3 ? 'Soumettre la demande' : 'Suivant';  /// ‚úÖ Valider l';        if (widget.userType == 'assureur';          SnackBar(content: Text('Erreur lors de la s√©lection: $e';    print('üîç DEBUG: D√©but de _submitRequest()';      print('üîç DEBUG: Utilisateur actuel: ${currentUser?.uid ?? 'null'}';      print('üîç DEBUG: Email utilisateur: ${currentUser?.email ?? 'null'}';      print('üîç DEBUG: Utilisateur authentifi√©: ${currentUser != null}';      // Si pas d';        print('üîç DEBUG: Pas d\'utilisateur connect√©, connexion anonyme...';          print('‚úÖ DEBUG: Connexion anonyme r√©ussie: ${userCredential.user?.uid}';          print('‚ùå DEBUG: Erreur connexion anonyme: $e';        id: '';        userId: currentUser?.uid ?? 'temp_${DateTime.now().millisecondsSinceEpoch}';        compagnie: widget.userType == 'assureur';        matricule: widget.userType == 'assureur';        cabinet: widget.userType == 'expert';        agrement: widget.userType == 'expert';        specialites: widget.userType == 'expert';      print('üîç DEBUG: Objet request cr√©√© - Email: ${request.email}, UserType: ${request.userType}';      print('üîç DEBUG: Appel de ProfessionalAccountService.createAccountRequest()';      print('‚úÖ DEBUG: createAccountRequest() termin√© avec succ√®s';            title: const Text('Demande soumise !';              'Votre demande de compte professionnel a √©t√© soumise avec succ√®s. ';              'Vous recevrez une notification par email une fois votre compte valid√© par nos administrateurs.';                child: const Text('Retour au choix du type';      print('‚ùå DEBUG: Erreur dans _submitRequest(): $e';      print('‚ùå DEBUG: Type d\'erreur: ${e.runtimeType}';        print('‚ùå DEBUG: Exception d√©tails: ${e.toString()}';        String errorMessage = 'Erreur lors de la soumission: $e';        if (e.toString().contains('email existe d√©j√†';            e.toString().contains('demande est en cours';          errorMessage = '‚ö†Ô∏è Un compte avec cet email existe d√©j√† ou une demande est en cours de traitement.\n\nVeuillez utiliser un autre email ou v√©rifier le statut de votre demande pr√©c√©dente.';