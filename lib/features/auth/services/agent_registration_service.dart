import 'package:cloud_firestore/cloud_firestore.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/foundation.dart';import '../models/agent_registration_model.dart';import '../../../core/services/debug_email_service.dart';/// 🏢 Service d'inscription et d'approbation des agents d';  /// 📝 Soumettre une demande d'inscription d';      debugPrint('[AgentRegistration] 📝 Début inscription agent: $email';      // Vérifier si l';          .collection('professional_account_requests';          .where('email';        throw Exception('Une demande existe déjà pour cet email';      // Créer la demande d';        id: '';        status: 'pending';          .collection('professional_account_requests';      debugPrint('[AgentRegistration] ✅ Demande créée: ${docRef.id}';      // Envoyer notification à l';      debugPrint('[AgentRegistration] ❌ Erreur inscription: $e';  /// 📧 Envoyer notification à l';      await _firestore.collection('notifications';        'type': 'new_agent_request';        'title': 'Nouvelle demande d\'agent';        'message': 'Demande d\'inscription de ${registration.prenom} ${registration.nom} (${registration.compagnie})';        'requestId';        'userId': 'admin';        'isRead';        'createdAt';        'data';          'applicantName': '${registration.prenom} ${registration.nom}';          'company';          'email';      // Envoyer email à l';      debugPrint('[AgentRegistration] 📧 Envoi email admin avec débuggage...';        to: 'constat.tunisie.app@gmail.com';        subject: '🏢 Nouvelle demande d\'agent d\'assurance';        htmlBody: ''';          <h2 style="color: #2196F3;">🏢 Nouvelle demande d'agent d';            <p>Connectez-vous à l';            Cette demande nécessite votre approbation avant que l';        ''';      // Analyser le résultat de l';      debugPrint('[AgentRegistration] 📊 Résultat email admin:';      debugPrint('[AgentRegistration] - Succès: ${emailResult['success']}';      debugPrint('[AgentRegistration] - Méthode: ${emailResult['method']}';      debugPrint('[AgentRegistration] - Étapes: ${emailResult['steps'].length}';      debugPrint('[AgentRegistration] - Erreurs: ${emailResult['errors'].length}';      if (emailResult['success';        debugPrint('[AgentRegistration] ✅ Notification admin envoyée via ${emailResult['method']}';        debugPrint('[AgentRegistration] ⚠️ Notification admin échouée, mais inscription continue';      debugPrint('[AgentRegistration] ⚠️ Erreur notification admin: $e';      // Ne pas faire échouer l';      debugPrint('[AgentRegistration] 📧 Envoi email confirmation avec débuggage...';        subject: '📝 Demande d\'inscription reçue - Constat Tunisie';        htmlBody: ''';          <h2 style="color: #2196F3;">📝 Demande d';          <p>Nous avons bien reçu votre demande d'inscription en tant qu'agent d';              <li>Votre demande est en cours d';              <li>Vous pourrez alors vous connecter à l';          <p><strong>L';        ''';      // Analyser le résultat de l';      debugPrint('[AgentRegistration] 📊 Résultat email confirmation:';      debugPrint('[AgentRegistration] - Succès: ${emailResult['success']}';      debugPrint('[AgentRegistration] - Méthode: ${emailResult['method']}';      debugPrint('[AgentRegistration] - Étapes: ${emailResult['steps'].length}';      debugPrint('[AgentRegistration] - Erreurs: ${emailResult['errors'].length}';      if (emailResult['success';        debugPrint('[AgentRegistration] ✅ Email confirmation envoyé via ${emailResult['method']}';        debugPrint('[AgentRegistration] ⚠️ Email confirmation échoué, mais inscription continue';      debugPrint('[AgentRegistration] ⚠️ Erreur email confirmation: $e';      // Ne pas faire échouer l'inscription si l';  /// ✅ Approuver une demande d';      debugPrint('[AgentRegistration] ✅ Approbation demande: $requestId';          .collection('professional_account_requests';        throw Exception('Demande non trouvée';      debugPrint('[AgentRegistration] ✅ Compte Firebase créé: ${userCredential.user?.uid}';      await _firestore.collection('users';        'email';        'userType': 'assureur';        'role': 'assureur';        'accountStatus': 'active';        'createdAt';        'approvedAt';        'approvedBy';      await _firestore.collection('assureurs';        'uid';        'email';        'prenom';        'nom';        'telephone';        'compagnie';        'agence';        'gouvernorat';        'poste';        'numeroAgent';        'carteIdRecto';        'carteIdVerso';        'permisRecto';        'permisVerso';        'isActive';        'createdAt';        'approvedAt';        'approvedBy';      await _firestore.collection('professional_account_requests';        'status': 'approved';        'reviewedAt';        'reviewedBy';        'agentUid';      // Envoyer email d';      debugPrint('[AgentRegistration] ✅ Agent approuvé avec succès';      debugPrint('[AgentRegistration] ❌ Erreur approbation: $e';  /// 📧 Envoyer email d';      debugPrint('[AgentRegistration] 📧 Envoi email approbation avec débuggage...';        subject: '🎉 Compte agent approuvé - Constat Tunisie';        htmlBody: ''';          <p>Excellente nouvelle ! Votre demande d'inscription en tant qu'agent d';            <p><strong>Vous pouvez maintenant vous connecter à l';              <li>Gestion des contrats d';              <li>Rapports d';          <p>Bienvenue dans l';          <p><strong>L';        ''';      // Analyser le résultat de l';      debugPrint('[AgentRegistration] 📊 Résultat email approbation:';      debugPrint('[AgentRegistration] - Succès: ${emailResult['success']}';      debugPrint('[AgentRegistration] - Méthode: ${emailResult['method']}';      debugPrint('[AgentRegistration] - Étapes: ${emailResult['steps'].length}';      debugPrint('[AgentRegistration] - Erreurs: ${emailResult['errors'].length}';      if (emailResult['success';        debugPrint('[AgentRegistration] ✅ Email approbation envoyé via ${emailResult['method']}';        debugPrint('[AgentRegistration] ⚠️ Email approbation échoué';      debugPrint('[AgentRegistration] ⚠️ Erreur email approbation: $e';  /// ❌ Rejeter une demande d';      debugPrint('[AgentRegistration] ❌ Rejet demande: $requestId';          .collection('professional_account_requests';        throw Exception('Demande non trouvée';      await _firestore.collection('professional_account_requests';        'status': 'rejected';        'reviewedAt';        'reviewedBy';        'rejectionReason';      debugPrint('[AgentRegistration] ✅ Demande rejetée';      debugPrint('[AgentRegistration] ❌ Erreur rejet: $e';      debugPrint('[AgentRegistration] 📧 Envoi email rejet avec débuggage...';        subject: '❌ Demande d\'inscription non approuvée - Constat Tunisie';        htmlBody: ''';          <p>Nous vous remercions pour votre demande d'inscription en tant qu'agent d';            <p>Si vous pensez qu';          <p><strong>L';        ''';      // Analyser le résultat de l';      debugPrint('[AgentRegistration] 📊 Résultat email rejet:';      debugPrint('[AgentRegistration] - Succès: ${emailResult['success']}';      debugPrint('[AgentRegistration] - Méthode: ${emailResult['method']}';      debugPrint('[AgentRegistration] - Étapes: ${emailResult['steps'].length}';      debugPrint('[AgentRegistration] - Erreurs: ${emailResult['errors'].length}';      if (emailResult['success';        debugPrint('[AgentRegistration] ✅ Email rejet envoyé via ${emailResult['method']}';        debugPrint('[AgentRegistration] ⚠️ Email rejet échoué';      debugPrint('[AgentRegistration] ⚠️ Erreur email rejet: $e';          .collection('professional_account_requests';          .where('status', isEqualTo: 'pending';          .orderBy('submittedAt';      debugPrint('[AgentRegistration] ❌ Erreur récupération demandes: $e';          .collection('professional_account_requests';        'total';        'pending';        'approved';        'rejected';        final status = doc.data()['status'] as String? ?? 'pending';        stats['total'] = (stats['total';      debugPrint('[AgentRegistration] ❌ Erreur statistiques: $e';      return {'total': 0, 'pending': 0, 'approved': 0, 'rejected';