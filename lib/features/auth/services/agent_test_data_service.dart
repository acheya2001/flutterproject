import 'package:cloud_firestore/cloud_firestore.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/foundation.dart';/// 🧪 Service pour créer les données de test pour l';  /// 🏗️ Créer toutes les données de test nécessaires pour l';      debugPrint('[AgentTestData] 🏗️ Début création données de test...';      // 1. Créer le compte Firebase Auth pour l';      // 2. Créer la compagnie d';      // 3. Créer l';      debugPrint('[AgentTestData] ✅ Toutes les données de test créées avec succès';      debugPrint('[AgentTestData] ❌ Erreur création données: $e';      debugPrint('[AgentTestData] 👤 Création compte Firebase Auth...';      final testEmail = 'agent.test.$timestamp@constat-tunisie.app';      const testPassword = 'TestAgent123!';      debugPrint('[AgentTestData] 📧 Email de test: $testEmail';      if (existingUser?.email?.contains('agent.test';        debugPrint('[AgentTestData] ✅ Compte de test déjà connecté';        debugPrint('[AgentTestData] ✅ Compte Firebase créé: ${userCredential.user?.uid}';        debugPrint('[AgentTestData] ⚠️ Erreur création (probablement type casting): $createError';        // Vérifier si l'utilisateur a été créé malgré l';          debugPrint('[AgentTestData] ✅ Compte créé malgré erreur de type casting';          debugPrint('[AgentTestData] 🔄 Tentative avec compte existant...';              email: 'hammami123rahma@gmail.com';              password: 'Acheya123';            _testEmail = 'hammami123rahma@gmail.com';            _testPassword = 'Acheya123';            debugPrint('[AgentTestData] ✅ Connexion compte existant réussie';            debugPrint('[AgentTestData] ❌ Échec connexion compte existant: $signInError';            _testEmail = 'hammami123rahma@gmail.com';            _testPassword = 'Acheya123';            debugPrint('[AgentTestData] ⚠️ Utilisation identifiants par défaut';      debugPrint('[AgentTestData] ❌ Erreur création compte: $e';      // En cas d';      _testEmail = 'hammami123rahma@gmail.com';      _testPassword = 'Acheya123';      debugPrint('[AgentTestData] ⚠️ Fallback vers identifiants par défaut';        'email';        'password';  /// 🏢 Créer la compagnie d';      debugPrint('[AgentTestData] 🏢 Création compagnie STAR...';      await _firestore.collection('insurance_companies').doc('star';        'nom': 'STAR Assurances';        'code': 'STAR';        'statut': 'active';        'adresse': 'Avenue Habib Bourguiba, Tunis';        'telephone': '+216 71 123 456';        'email': 'contact@star.tn';        'site_web': 'www.star.com.tn';        'logo_url': 'https://example.com/star-logo.png';        'date_creation';        'createdAt';        'updatedAt';      debugPrint('[AgentTestData] ✅ Compagnie STAR créée';      debugPrint('[AgentTestData] ❌ Erreur création compagnie: $e';  /// 🏪 Créer l';      debugPrint('[AgentTestData] 🏪 Création agence STAR Tunis...';      await _firestore.collection('agences').doc('star_tunis_01';        'nom': 'STAR Tunis Centre';        'compagnie': 'STAR';        'gouvernorat': 'Tunis';        'ville': 'Tunis';        'adresse': 'Avenue Habib Bourguiba, Tunis 1000';        'telephone': '+216 71 234 567';        'email': 'tunis@star.tn';        'responsable': 'Ahmed Ben Ali';        'nombreAgents';        'statut': 'active';        'createdAt';        'updatedAt';      debugPrint('[AgentTestData] ✅ Agence STAR Tunis créée';      debugPrint('[AgentTestData] ❌ Erreur création agence: $e';      debugPrint('[AgentTestData] 👨‍💼 Création profil assureur...';        throw Exception('Aucun utilisateur connecté';      final userEmail = user.email ?? _testEmail ?? 'agent.test@constat-tunisie.app';      await _firestore.collection('assureurs';        'email';        'nom': 'Agent';        'prenom': 'Test';        'telephone': '+216 20 123 456';        'compagnie': 'STAR';        'matricule': 'STAR001';        'agence': 'star_tunis_01';        'agenceNom': 'STAR Tunis Centre';        'gouvernorat': 'Tunis';        'poste': 'Agent Commercial';        'permissions': ['view_contracts', 'create_contracts', 'manage_clients';        'dossierIds';        'date_embauche';        'statut': 'actif';        'adresse': 'Tunis, Tunisie';        'createdAt';        'updatedAt';        'derniere_connexion';      debugPrint('[AgentTestData] ✅ Profil assureur créé pour: $userEmail';      debugPrint('[AgentTestData] ❌ Erreur création profil: $e';      debugPrint('[AgentTestData] 📄 Création document users...';        throw Exception('Aucun utilisateur connecté';      final userEmail = user.email ?? _testEmail ?? 'agent.test@constat-tunisie.app';      await _firestore.collection('users';        'email';        'userType': 'assureur';        'accountStatus': 'active';        'nom': 'Agent';        'prenom': 'Test';        'telephone': '+216 20 123 456';        'createdAt';        'updatedAt';      debugPrint('[AgentTestData] ✅ Document users créé pour: $userEmail';      debugPrint('[AgentTestData] ❌ Erreur création document users: $e';      debugPrint('[AgentTestData] 🧹 Nettoyage données de test...';        await _firestore.collection('assureurs';        await _firestore.collection('users';      await _firestore.collection('agences').doc('star_tunis_01';      await _firestore.collection('insurance_companies').doc('star';      debugPrint('[AgentTestData] ✅ Nettoyage terminé';      debugPrint('[AgentTestData] ❌ Erreur nettoyage: $e';      final assureurDoc = await _firestore.collection('assureurs';      final companyDoc = await _firestore.collection('insurance_companies').doc('star';      final agencyDoc = await _firestore.collection('agences').doc('star_tunis_01';      debugPrint('[AgentTestData] ❌ Erreur vérification: $e';