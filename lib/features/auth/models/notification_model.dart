import 'package:cloud_firestore/cloud_firestore.dart';import 'user_model.dart';  final String recipientId; // ID de l';  final String? senderId; // ID de l';      recipientId: data['recipientId'] ?? '';      senderId: data['senderId';      type: _getNotificationTypeFromString(data['type'] ?? '';      title: data['title'] ?? '';      message: data['message'] ?? '';      data: Map<String, dynamic>.from(data['data';      isRead: data['isRead';      createdAt: (data['createdAt';      readAt: data['readAt'] != null ? (data['readAt';      'recipientId';      'senderId';      'type': type.toString().split('.';      'title';      'message';      'data';      'isRead';      'createdAt';      'readAt';      case 'accountPending';      case 'accountApproved';      case 'accountRejected';      case 'accountSuspended';      case 'permissionChanged';  /// Obtenir l';        return '⏳';        return '✅';        return '❌';        return '⚠️';        return '🔧';        return '#FFA726';        return '#66BB6A';        return '#EF5350';        return '#FF7043';        return '#42A5F5';    return 'NotificationModel(id: $id, type: $type, title: $title, isRead: $isRead)';  final String userType; // 'assureur' ou 'expert';      userId: data['userId'] ?? '';      email: data['email'] ?? '';      nom: data['nom'] ?? '';      prenom: data['prenom'] ?? '';      telephone: data['telephone'] ?? '';      adresse: data['adresse';      userType: data['userType'] ?? '';      compagnie: data['compagnie';      matricule: data['matricule';      gouvernorat: data['gouvernorat';      agencePreferee: data['agencePreferee';      cabinet: data['cabinet';      agrement: data['agrement';      specialites: data['specialites';      documentsUrls: List<String>.from(data['documentsUrls';      motivationLetter: data['motivationLetter';      status: _getAccountStatusFromString(data['status'] ?? 'pending';      rejectionReason: data['rejectionReason';      reviewedAt: data['reviewedAt'] != null ? (data['reviewedAt';      reviewedBy: data['reviewedBy';      createdAt: (data['createdAt';    print('🔍 DEBUG: ProfessionalAccountRequest.toFirestore() - Début';    print('🔍 DEBUG: userId: $userId';    print('🔍 DEBUG: email: $email';    print('🔍 DEBUG: userType: $userType';        'userId';        'email';        'nom';        'prenom';        'telephone';        'adresse';        'userType';        'compagnie';        'matricule';        'gouvernorat';        'agencePreferee';        'cabinet';        'agrement';        'specialites';        'documentsUrls';        'motivationLetter';        'status': status.toString().split('.';        'rejectionReason';        'reviewedAt';        'reviewedBy';        'createdAt';      print('✅ DEBUG: toFirestore() terminé avec succès';      print('❌ DEBUG: Erreur dans toFirestore(): $e';      case 'pending';      case 'approved';      case 'rejected';      case 'suspended';      case 'active';    return 'ProfessionalAccountRequest(id: $id, email: $email, userType: $userType, status: $status)';