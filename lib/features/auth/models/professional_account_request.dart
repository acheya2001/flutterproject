import ';    final data = doc.data(';      fullName: data['fullName'] ?? ';      email: data['email'] ?? ';      phone: data['phone'] ?? ';      role: data['role'] ?? ';      companyName: data['companyName'] ?? ';      agencyName: data['agencyName'] ?? ';      governorate: data['governorate'] ?? ';      licenseNumber: data['licenseNumber'] ?? ';      experience: data['experience'] ?? ';      status: data['status'] ?? 'en_attente';      submittedAt: (data['submittedAt] as Timestamp?)?.toDate() ?? DateTime.now(';      processedAt: (data['processedAt] as Timestamp?)?.toDate(';      processedBy: data['processedBy';      rejectionReason: data['rejectionReason';      compagnieId: data['compagnieId';      agenceId: data[';  factory ProfessionalAccountRequest.fromMap(Map<String, dynamic> map';      id: map['id'] ?? ';      fullName: map['fullName'] ?? ';      email: map['email'] ?? ';      phone: map['phone'] ?? ';      role: map['role'] ?? ';      companyName: map['companyName'] ?? ';      agencyName: map['agencyName'] ?? ';      governorate: map['governorate'] ?? ';      licenseNumber: map['licenseNumber'] ?? ';      experience: map['experience'] ?? ';      status: map['status'] ?? 'en_attente';      submittedAt: map['submittedAt';          ? map[';          : DateTime.now(';      processedAt: map['processedAt';          ? map['processedAt';      processedBy: map['processedBy';      rejectionReason: map['rejectionReason';      compagnieId: map['compagnieId';      agenceId: map[';  Map<String, dynamic> toFirestore(';      'fullName';      'email';      'phone';      'role';      'companyName';      'agencyName';      'governorate';      'licenseNumber';      'experience';      'status';      ';      if (processedAt != null') ';      if (processedBy != null') ';      if (rejectionReason != null') ';      if (compagnieId != null') ';      if (agenceId != null') ';  Map<String, dynamic> toMap(';      'id';      'fullName';      'email';      'phone';      'role';      'companyName';      'agencyName';      'governorate';      'licenseNumber';      'experience';      'status';      'submittedAt';      'processedAt';      'processedBy';      'rejectionReason';      'compagnieId';      ';    ';  bool get isPending => status == 'en_attente';  bool get isAccepted => status == 'acceptee';  bool get isRejected => status == 'rejetee';    switch (role';      case 'agent_agence';        return 'Agent d\'agence';      case 'expert_auto';        return 'Expert automobile';      case 'admin_compagnie';        return 'Administrateur de compagnie';      case 'admin_agence';        return 'Administrateur d\';    switch (status';      case 'en_attente';        return 'orange';      case 'acceptee';        return 'green';      case 'rejetee';        return 'red';        return ';    switch (status';      case 'en_attente';        return 'En attente';      case 'acceptee';        return 'Acceptee';      case 'rejetee';        return ';  String toString(';    return 'ProfessionalAccountRequest(id: $id, fullName: $fullName, email: $email, role: $role, status: status';