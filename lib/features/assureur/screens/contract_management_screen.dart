import 'package:flutter/material.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../../../core/widgets/custom_app_bar.dart';  String _searchQuery = '';        title: 'Gestion des Contrats';            label: 'Tableau de Bord';            label: 'Contrats';            label: 'Conducteurs';            label: 'Statistiques';                    'Informations Agent';                    _buildInfoRow('Nom', '${_agentData!['prenom']} ${_agentData!['nom']}';                    _buildInfoRow('Email', _agentData!['email';                    _buildInfoRow('Compagnie', _agentData!['compagnie';                    _buildInfoRow('Agence', _agentData!['agence';                    _buildInfoRow('Gouvernorat', _agentData!['gouvernorat';                    _buildInfoRow('Poste', _agentData!['poste';                  'Contrats';                  '${_contracts.length}';                  'Conducteurs';                  '${_conducteurs.length}';                  'Actifs';                  '${_contracts.where((c) => c['statut'] == 'actif').length}';                  'En attente';                  '${_contracts.where((c) => c['statut'] == 'en_attente').length}';      String contractNumber = contract['numero_contrat']?.toString().toLowerCase() ?? '';      String conducteurNom = '${contract['conducteur']?['prenom'] ?? ''} ${contract['conducteur']?['nom'] ?? ''}';      String vehicule = '${contract['vehicule']?['marque'] ?? ''} ${contract['vehicule']?['modele'] ?? ''}';      String immatriculation = contract['vehicule']?['immatriculation']?.toString().toLowerCase() ?? '';              hintText: 'Rechercher un contrat...';            'Contrats (${filteredContracts.length})';                          _searchQuery.isEmpty ? 'Aucun contrat trouv√©' : 'Aucun r√©sultat pour "$_searchQuery"';                            backgroundColor: _getStatusColor(contract['statut';                              _getStatusIcon(contract['statut';                            'Contrat ${contract['numero_contrat'] ?? 'N/A'}';                              Text('Conducteur: ${contract['conducteur']?['prenom'] ?? ''} ${contract['conducteur']?['nom'] ?? ''}';                              Text('V√©hicule: ${contract['vehicule']?['marque'] ?? ''} ${contract['vehicule']?['modele'] ?? ''} (${contract['vehicule']?['annee'] ?? ''})';                              Text('Immatriculation: ${contract['vehicule']?['immatriculation'] ?? 'N/A'}';                              Text('Prime: ${contract['assurance']?['prime_annuelle'] ?? 'N/A'} DT/an';                              color: _getStatusColor(contract['statut';                              contract['statut'] ?? 'N/A';            'Conducteurs (${_conducteurs.length})';                      'Aucun conducteur trouv√©';                              '${conducteur['prenom']?[0] ?? ''}${conducteur['nom']?[0] ?? ''}';                            '${conducteur['prenom'] ?? ''} ${conducteur['nom'] ?? ''}';                              Text('CIN: ${conducteur['cin'] ?? 'N/A'}';                              Text('T√©l√©phone: ${conducteur['telephone'] ?? 'N/A'}';                              Text('Profession: ${conducteur['profession'] ?? 'N/A'}';                              Text('Permis: ${conducteur['permis_numero'] ?? 'N/A'} (${conducteur['permis_categorie'] ?? 'N/A'})';                              color: conducteur['statut'] == 'actif';                              conducteur['statut'] ?? 'N/A';      String compagnie = contract['compagnie']?['code'] ?? 'Inconnue';      String status = contract['statut'] ?? 'Inconnu';              'Statistiques D√©taill√©es';                      'R√©partition par Compagnie';                              '${entry.value}';                      'R√©partition par Statut';                              '${entry.value}';              '$label:';            child: Text(value?.toString() ?? 'N/A';      case 'actif';      case 'en_attente';      case 'suspendu';      case 'expire';      case 'actif';      case 'en_attente';      case 'suspendu';      case 'expire';      QuerySnapshot agentsSnapshot = await _firestore.collection('assureurs';            .collection('contracts';            .where('createdBy';            .collection('conducteurs';        print('üìä Agent connect√©: ${_agentData!['prenom']} ${_agentData!['nom']}';        print('üìÑ Contrats: ${_contracts.length}';        print('üë• Conducteurs: ${_conducteurs.length}';      print('‚ùå Erreur lors du chargement des donn√©es: $e';          const SnackBar(content: Text('Erreur lors du chargement des donn√©es';          title: const Text('D√©tails du Contrat';                _buildDetailRow('Num√©ro', contract['numero_contrat';                _buildDetailRow('Compagnie', contract['compagnie']?['nom';                _buildDetailRow('Statut', contract['statut';                const Text('Conducteur:';                _buildDetailRow('Nom', '${contract['conducteur']?['prenom']} ${contract['conducteur']?['nom']}';                _buildDetailRow('CIN', contract['conducteur']?['cin';                _buildDetailRow('T√©l√©phone', contract['conducteur']?['telephone';                const Text('V√©hicule:';                _buildDetailRow('Marque/Mod√®le', '${contract['vehicule']?['marque']} ${contract['vehicule']?['modele']}';                _buildDetailRow('Ann√©e', contract['vehicule']?['annee';                _buildDetailRow('Immatriculation', contract['vehicule']?['immatriculation';                _buildDetailRow('Couleur', contract['vehicule']?['couleur';                _buildDetailRow('Carburant', contract['vehicule']?['carburant';                const Text('Assurance:';                _buildDetailRow('Type', contract['assurance']?['type_couverture';                _buildDetailRow('Prime annuelle', '${contract['assurance']?['prime_annuelle']} DT';                _buildDetailRow('Franchise', '${contract['assurance']?['franchise']} DT';                _buildDetailRow('Bonus/Malus', contract['assurance']?['bonus_malus';              child: const Text('Fermer';              '$label:';            child: Text(value?.toString() ?? 'N/A';