import 'package:flutter/material.dart';import 'package:firebase_auth/firebase_auth.dart';import '../../insurance/services/contract_service.dart';  final String conducteurId = FirebaseAuth.instance.currentUser?.uid ?? '';          '🚗 Mes Véhicules';    final assurance = vehicle['assurance';    final isInsured = assurance != null && assurance['status'] == 'active';                        vehicle['immatriculation'] ?? 'N/A';                        '${vehicle['marque'] ?? ''} ${vehicle['modele'] ?? ''}';                _buildDetailRow('🎨 Couleur', vehicle['couleur'] ?? 'Non spécifiée';                _buildDetailRow('📅 Année', vehicle['annee']?.toString() ?? 'N/A';                _buildDetailRow('⚡ Énergie', vehicle['energie'] ?? 'N/A';                _buildDetailRow('🔧 Puissance', '${vehicle['puissance'] ?? 'N/A'} CV';                'Assurance Active';          _buildDetailRow('🏢 Compagnie', assurance['compagnie'] ?? 'N/A';          _buildDetailRow('📋 Contrat', assurance['numeroContrat'] ?? 'N/A';          _buildDetailRow('🏪 Agence', assurance['agence'] ?? 'N/A';          _buildDetailRow('👤 Agent', assurance['agent'] ?? 'N/A';          _buildDetailRow('📅 Expire le', _formatDate(assurance['dateFin';                      'Votre assurance expire bientôt ! Contactez votre agent.';  /// 🎯 Boutons d';            label: const Text('Voir les détails';              label: const Text('Contacter';      text = 'Non assuré';      text = 'Expire bientôt';      text = 'Assuré';  /// ❌ État d';            'Erreur de chargement';            'Impossible de charger vos véhicules';            label: const Text('Réessayer';            'Aucun véhicule assuré';            'Vos véhicules assurés apparaîtront ici';                  'Comment obtenir une assurance ?';                  'Contactez un agent d\'assurance qui créera un contrat pour votre véhicule. Vous recevrez une notification une fois le contrat activé.';    if (assurance == null || assurance['dateFin';      final endDate = assurance['dateFin';    if (timestamp == null) return 'N/A';      return '${date.day.toString().padLeft(2, '0')}/${date.month.toString().padLeft(2, '0')}/${date.year}';      return 'N/A';        title: Text('Détails - ${vehicle['immatriculation']}';              _buildInfoSection('🚗 Véhicule';                'Immatriculation: ${vehicle['immatriculation'] ?? 'N/A'}';                'Marque: ${vehicle['marque'] ?? 'N/A'}';                'Modèle: ${vehicle['modele'] ?? 'N/A'}';                'Année: ${vehicle['annee']?.toString() ?? 'N/A'}';                'Couleur: ${vehicle['couleur'] ?? 'N/A'}';                'Énergie: ${vehicle['energie'] ?? 'N/A'}';                'Puissance: ${vehicle['puissance']?.toString() ?? 'N/A'} CV';                'Usage: ${vehicle['usage'] ?? 'N/A'}';              if (vehicle['assurance';                _buildInfoSection('🛡️ Assurance';                  'Compagnie: ${vehicle['assurance']['compagnie'] ?? 'N/A'}';                  'Contrat: ${vehicle['assurance']['numeroContrat'] ?? 'N/A'}';                  'Agence: ${vehicle['assurance']['agence'] ?? 'N/A'}';                  'Agent: ${vehicle['assurance']['agent'] ?? 'N/A'}';                  'Début: ${_formatDate(vehicle['assurance']['dateDebut'])}';                  'Fin: ${_formatDate(vehicle['assurance']['dateFin'])}';                  'Statut: ${vehicle['assurance']['status'] ?? 'N/A'}';            child: const Text('Fermer';            '• $item';    final assurance = vehicle['assurance';        title: const Text('Contacter l\'agent';              'Agent: ${assurance['agent'] ?? 'N/A'}';            Text('Agence: ${assurance['agence'] ?? 'N/A'}';            Text('Compagnie: ${assurance['compagnie'] ?? 'N/A'}';              'Vous pouvez contacter votre agent pour:';            const Text('• Renouveler votre contrat';            const Text('• Modifier vos garanties';            const Text('• Déclarer un sinistre';            const Text('• Poser des questions';            child: const Text('Fermer';              // TODO: Implémenter l'appel ou l'envoi d';                  content: Text('Fonctionnalité de contact à implémenter';            label: const Text('Appeler';