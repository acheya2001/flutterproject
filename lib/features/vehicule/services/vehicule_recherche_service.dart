import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';import '../models/vehicule_recherche_model.dart';import '../models/vehicule_assure_model.dart';      debugPrint('🔍 Recherche véhicule avec critères: ${criteres.description}';      Query query = _firestore.collection('vehicules_assures';        query = query.where('assureur_id';        query = query.where('numero_contrat';        query = query.where('vehicule.immatriculation';      debugPrint('✅ Recherche terminée: ${resultats.length} résultats en ${stopwatch.elapsedMilliseconds}ms';      debugPrint('❌ Erreur recherche véhicule: $e';  /// 📝 Enregistrer une recherche dans l';      final rechercheId = _firestore.collection('vehicules_recherches';          .collection('vehicules_recherches';      debugPrint('📝 Recherche enregistrée: $rechercheId';      debugPrint('❌ Erreur enregistrement recherche: $e';      debugPrint('🔍 Recherche rapide par immatriculation: $immatriculation';          .collection('vehicules_assures';          .where('vehicule.immatriculation';        debugPrint('ℹ️ Aucun véhicule trouvé pour cette immatriculation';      debugPrint('✅ Véhicule trouvé: ${vehicule.vehicule.marque} ${vehicule.vehicule.modele}';      debugPrint('❌ Erreur recherche par immatriculation: $e';      debugPrint('🔍 Recherche rapide par contrat: $numeroContrat';          .collection('vehicules_assures';          .where('numero_contrat';        debugPrint('ℹ️ Aucun véhicule trouvé pour ce contrat';      debugPrint('✅ Véhicule trouvé: ${vehicule.vehicule.marque} ${vehicule.vehicule.modele}';      debugPrint('❌ Erreur recherche par contrat: $e';  /// 📋 Obtenir l'historique des recherches d';          .collection('vehicules_recherches';          .where('conducteur_rechercheur';          .orderBy('date_recherche';      debugPrint('❌ Erreur récupération historique recherches: $e';      Query query = _firestore.collection('vehicules_recherches';        query = query.where('conducteur_rechercheur';        query = query.where('date_recherche';        query = query.where('date_recherche';        final assurance = recherche.criteres.assurance ?? 'Non spécifiée';      debugPrint('❌ Erreur statistiques recherche: $e';  /// 🔍 Suggestions de recherche basées sur l';          .collection('vehicules_recherches';          .where('conducteur_rechercheur';          .where('resultat_trouve';          .orderBy('date_recherche';        final critereKey = '${recherche.criteres.assurance}_${recherche.criteres.immatriculation}';      debugPrint('❌ Erreur suggestions recherche: $e';          .collection('vehicules_recherches';          .where('date_recherche';        debugPrint('ℹ️ Aucune ancienne recherche à nettoyer';      debugPrint('🧹 ${snapshot.docs.length} anciennes recherches supprimées';      debugPrint('❌ Erreur nettoyage anciennes recherches: $e';