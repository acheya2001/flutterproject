import 'package:cloud_firestore/cloud_firestore.dart';import '../../vehicule/models/vehicule_model.dart';  // Informations d';      vehiculeId: data['vehicule_id'] ?? '';      contratId: data['contrat_id'] ?? '';      compagnieId: data['compagnie_id'] ?? '';      agenceId: data['agence_id'] ?? '';      conducteurId: data['conducteur_id'] ?? '';      dateCreation: (data['date_creation';      dateModification: (data['date_modification';      actif: data['actif';      numeroContrat: data['numero_contrat'] ?? '';      numeroQuittance: data['numero_quittance'] ?? '';      dateDebutCouverture: (data['date_debut_couverture';      dateFinCouverture: (data['date_fin_couverture';      valeurAssuree: (data['valeur_assuree';      formule: data['formule'] ?? '';      garanties: List<String>.from(data['garanties';      franchise: (data['franchise';      conditions: Map<String, dynamic>.from(data['conditions';      'vehicule_id';      'contrat_id';      'compagnie_id';      'agence_id';      'conducteur_id';      'date_creation';      'date_modification';      'actif';      'numero_contrat';      'numero_quittance';      'date_debut_couverture';      'date_fin_couverture';      'valeur_assuree';      'formule';      'garanties';      'franchise';      'conditions';  /// V√©rifier si l';  /// V√©rifier si l';    return 'VehiculeAssureModel(id: $id, contrat: $numeroContrat, valide: $estAssuranceValide)';/// üöó Mod√®le combin√© v√©hicule + assurance pour l';  /// Obtenir le statut d';    if (assurance == null) return 'Non assur√©';    if (!assurance!.actif) return 'Assurance suspendue';    if (!assurance!.estAssuranceValide) return 'Assurance expir√©e';    if (assurance!.expireBientot) return 'Expire bient√¥t';    return 'Assur√©';    if (assurance == null) return 'red';    if (!assurance!.actif) return 'orange';    if (!assurance!.estAssuranceValide) return 'red';    if (assurance!.expireBientot) return 'orange';    return 'green';  /// Obtenir les informations d'assurance pour l';        'compagnie': 'Aucune';        'contrat': 'Aucun';        'validite': 'Non assur√©';        'formule': 'Aucune';      'compagnie': compagnieNom ?? 'Inconnue';      'contrat';      'validite': '${assurance!.dateDebutCouverture.day}/${assurance!.dateDebutCouverture.month}/${assurance!.dateDebutCouverture.year} - ${assurance!.dateFinCouverture.day}/${assurance!.dateFinCouverture.month}/${assurance!.dateFinCouverture.year}';      'formule';      'agence': agenceNom ?? 'Inconnue';      'quittance';    return 'VehiculeAvecAssuranceModel(vehicule: ${vehicule.nomComplet}, assure: $estAssure)';  String get nomComplet => '$marque $modele';  /// Obtenir l';      return '${immatriculation.substring(0, 3)} TN ${immatriculation.substring(3)}';  /// V√©rifier si l';  /// Obtenir les informations d';      'compagnie';      'contrat';      'agence';      'quittance';      'validite';          ? '${dateDebutValidite?.day}/${dateDebutValidite?.month}/${dateDebutValidite?.year} - ${dateFinValidite!.day}/${dateFinValidite!.month}/${dateFinValidite!.year}';          : 'Non d√©finie';