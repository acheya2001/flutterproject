import 'package:cloud_firestore/cloud_firestore.dart';/// ðŸ“„ ModÃ¨le pour un contrat d';      id: id ?? data['id'] ?? '';      numeroContrat: data['numeroContrat'] ?? '';      compagnieId: data['compagnieId'] ?? '';      agenceId: data['agenceId'] ?? '';      agentId: data['agentId'] ?? '';      conducteurId: data['conducteurId'] ?? '';      vehiculeId: data['vehiculeId'] ?? '';      typeContrat: data['typeContrat'] ?? 'responsabilite_civile';      dateDebut: (data['dateDebut';      dateFin: (data['dateFin';      dateCreation: (data['dateCreation';      statut: data['statut'] ?? 'actif';      prime: Map<String, dynamic>.from(data['prime';        'montantAnnuel';        'montantMensuel';        'devise': 'TND';      couvertures: List<String>.from(data['couvertures';      franchises: Map<String, dynamic>.from(data['franchises';      documents: List<String>.from(data['documents';        (data['historiquePaiements';      notes: data['notes';      'numeroContrat';      'compagnieId';      'agenceId';      'agentId';      'conducteurId';      'vehiculeId';      'typeContrat';      'dateDebut';      'dateFin';      'dateCreation';      'statut';      'prime';      'couvertures';      'franchises';      'documents';      'historiquePaiements';      'notes';  bool get isActif => statut == 'actif';      case 'mensuel';      case 'mensuelle';        return (prime['montantMensuel';      case 'annuel';      case 'annuelle';        return (prime['montantAnnuel';        return (prime['montantAnnuel';    return 'ContratAssuranceModel(id: $id, numeroContrat: $numeroContrat, statut: $statut)';      id: id ?? data['id'] ?? '';      conducteurId: data['conducteurId'] ?? '';      contratId: data['contratId';      immatriculation: data['immatriculation'] ?? '';      marque: data['marque'] ?? '';      modele: data['modele'] ?? '';      annee: data['annee';      couleur: data['couleur'] ?? '';      numeroSerie: data['numeroSerie'] ?? '';      typeVehicule: data['typeVehicule'] ?? 'voiture';      carburant: data['carburant'] ?? 'essence';      puissance: data['puissance';      nombrePlaces: data['nombrePlaces';      valeurVehicule: (data['valeurVehicule';      dateAchat: (data['dateAchat';      kilometrage: data['kilometrage';      photos: List<String>.from(data['photos';      documents: List<String>.from(data['documents';      dateCreation: (data['dateCreation';      statut: data['statut'] ?? 'actif';      'conducteurId';      'contratId';      'immatriculation';      'marque';      'modele';      'annee';      'couleur';      'numeroSerie';      'typeVehicule';      'carburant';      'puissance';      'nombrePlaces';      'valeurVehicule';      'dateAchat';      'kilometrage';      'photos';      'documents';      'dateCreation';      'statut';  bool get isAssure => contratId != null && statut == 'actif';  /// Obtenir l';    return 'VehiculeAssureModel(id: $id, immatriculation: $immatriculation, marque: $marque $modele)';