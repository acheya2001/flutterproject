import 'package:cloud_firestore/cloud_firestore.dart';      nom: map['nom'] ?? '';      prenom: map['prenom'] ?? '';      cin: map['cin'] ?? '';      telephone: map['telephone'] ?? '';      adresse: map['adresse'] ?? '';      dateNaissance: (map['date_naissance';      'nom';      'prenom';      'cin';      'telephone';      'adresse';      'date_naissance';  String get nomComplet => '$prenom $nom';/// ðŸ“„ ModÃ¨le de contrat d';      numeroContrat: map['numero_contrat'] ?? '';      compagnieId: map['compagnie_id'] ?? '';      agenceId: map['agence_id'] ?? '';      agentGestionnaire: map['agent_gestionnaire'] ?? '';      typeCouverture: map['type_couverture'] ?? '';      dateDebut: (map['date_debut';      dateFin: (map['date_fin';      primeAnnuelle: (map['prime_annuelle';      franchise: (map['franchise';      statut: map['statut'] ?? 'actif';      'numero_contrat';      'compagnie_id';      'agence_id';      'agent_gestionnaire';      'type_couverture';      'date_debut';      'date_fin';      'prime_annuelle';      'franchise';      'statut';    return statut == 'actif';  final String? conducteurId; // Rempli quand il s';      conducteurEmail: map['conducteur_email'] ?? '';      conducteurId: map['conducteur_id';      relation: map['relation'] ?? '';      dateAutorisation: (map['date_autorisation';      permisNumero: map['permis_numero'] ?? '';      permisDateObtention: (map['permis_date_obtention';      droits: List<String>.from(map['droits';      'conducteur_email';      'conducteur_id';      'relation';      'date_autorisation';      'permis_numero';      'permis_date_obtention';      'droits';  bool get peutConduire => droits.contains('conduire';  bool get peutDeclarerSinistre => droits.contains('declarer_sinistre';      immatriculation: data['immatriculation'] ?? '';      marque: data['marque'] ?? '';      modele: data['modele'] ?? '';      annee: data['annee';      couleur: data['couleur'] ?? '';      numeroChassis: data['numero_chassis'] ?? '';      puissanceFiscale: data['puissance_fiscale';      typeCarburant: data['type_carburant'] ?? '';      nombrePlaces: data['nombre_places';      proprietaire: ProprietaireVehiculeModel.fromMap(data['proprietaire';      contrat: ContratAssuranceCompletModel.fromMap(data['contrat';      conducteursAutorises: (data['conducteurs_autorises';      historiqueSinistres: List<String>.from(data['historique_sinistres';      derniereMiseAJour: (data['derniere_mise_a_jour';      createdAt: (data['createdAt';      updatedAt: (data['updatedAt';      'immatriculation';      'marque';      'modele';      'annee';      'couleur';      'numero_chassis';      'puissance_fiscale';      'type_carburant';      'nombre_places';      'proprietaire';      'contrat';      'conducteurs_autorises';      'historique_sinistres';      'derniere_mise_a_jour';      'createdAt';      'updatedAt';  String get descriptionVehicule => '$marque $modele ($annee)';  /// Obtenir le nom de la compagnie d';      case 'STAR';        return 'STAR Assurances';      case 'MAGHREBIA';        return 'Maghrebia Assurances';      case 'LLOYD';        return 'Lloyd Tunisien';      case 'GAT';        return 'GAT Assurances';      case 'AST';        return 'Assurances Salim';  /// Obtenir les droits d';        conducteurEmail: '';        relation: '';        permisNumero: '';    return 'VehiculeCompletModel(id: $id, vehicule: $descriptionVehicule, contrat: ${contrat.numeroContrat})';