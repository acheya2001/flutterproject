import 'package:flutter/material.dart';import 'package:cloud_firestore/cloud_firestore.dart';import 'package:firebase_auth/firebase_auth.dart';/// 🧪 Script pour créer des utilisateurs de test pour le système d';  /// 👨‍💼 Créer un agent d';      const email = 'agent.test@star.tn';      const password = 'Test123456';      // Vérifier si l';          .collection('users';          .where('email';          'success';          'message': 'Agent existant trouvé: $userId';          'email';          'userId';          'existing';      userId = _firestore.collection('users';      await _firestore.collection('users';        'email';        'nom': 'Trabelsi';        'prenom': 'Ahmed';        'telephone': '+216 98 123 456';        'adresse': 'Tunis, Tunisie';        'createdAt';        'updatedAt';      await _firestore.collection('user_types';        'type': 'assureur';        'createdAt';      await _firestore.collection('assureurs';        'compagnie': 'STAR Assurances';        'agence': 'Tunis Centre';        'matricule': 'AGT001';        'zonesGeographiques': ['Tunis', 'Ariana', 'Manouba';        'specialites': ['Auto', 'Habitation';        'dateEmbauche';        'status': 'actif';        'createdAt';        'updatedAt';        'success';        'message': 'Agent de test créé avec succès';        'email';        'password';        'userId';      print('❌ Erreur détaillée création agent: $e';      print('📍 Stack trace: $stackTrace';        'success';        'message': 'Erreur création agent: $e';        'error';        'stackTrace';      const email = 'conducteur.test@email.com';      const password = 'Test123456';      // Vérifier si l';          .collection('users';          .where('email';          'success';          'message': 'Conducteur existant trouvé: $userId';          'email';          'userId';          'existing';      userId = _firestore.collection('users';      await _firestore.collection('users';        'email';        'nom': 'Ben Ali';        'prenom': 'Mohamed';        'telephone': '+216 22 987 654';        'adresse': 'Sfax, Tunisie';        'createdAt';        'updatedAt';      await _firestore.collection('user_types';        'type': 'conducteur';        'createdAt';      await _firestore.collection('conducteurs';        'dateNaissance': '1990-05-15';        'lieuNaissance': 'Sfax';        'numeroPermis': 'P123456789';        'dateObtentionPermis': '2010-03-20';        'categoriePermis': ['B';        'profession': 'Ingénieur';        'situationFamiliale': 'Marié';        'nombreEnfants';        'createdAt';        'updatedAt';        'success';        'message': 'Conducteur de test créé avec succès';        'email';        'password';        'userId';        'success';        'message': 'Erreur création conducteur: $e';      // Vérifier l';          .collection('users';          .where('email', isEqualTo: 'agent.test@star.tn';          .collection('users';          .where('email', isEqualTo: 'conducteur.test@email.com';        'agent';        'conducteur';      return {'agent': false, 'conducteur';      // Supprimer l';          .collection('users';          .where('email', isEqualTo: 'agent.test@star.tn';        await _firestore.collection('users';        await _firestore.collection('user_types';        await _firestore.collection('assureurs';          .collection('users';          .where('email', isEqualTo: 'conducteur.test@email.com';        await _firestore.collection('users';        await _firestore.collection('user_types';        await _firestore.collection('conducteurs';        'success';        'message': '$deletedCount utilisateurs supprimés';        'deletedCount';        'success';        'message': 'Erreur suppression: $e';  String _result = '';        title: const Text('🧪 Configuration Utilisateurs Test';              '🎯 Gestion des Comptes de Test';            // Boutons d';            const Text('📊 État des Comptes';                  _existingUsers['agent';                  color: _existingUsers['agent';                const Text('Agent: agent.test@star.tn';                  _existingUsers['conducteur';                  color: _existingUsers['conducteur';                const Text('Conducteur: conducteur.test@email.com';            label: const Text('Créer Agent de Test';            label: const Text('Créer Conducteur de Test';            label: const Text('Supprimer Utilisateurs Test';            const Text('📋 Résultat';      _result = '';      _result = result['message';      _result = '';      _result = result['message';      _result = '';      _result = result['message';