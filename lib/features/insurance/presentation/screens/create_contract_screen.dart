import 'package:flutter/material.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../../../../core/theme/app_theme.dart';import '../../../auth/models/user_model.dart';import '../../models/contrat_assurance_model.dart';import '../../models/vehicule_assure_model.dart';import '../../services/insurance_contract_service.dart';/// üìã √âcran de cr√©ation de contrat d';  String _typeAssurance = 'tiers';    final timestamp = '${now.year}${now.month.toString().padLeft(2, '0')}${now.day.toString().padLeft(2, '0')}';    final random = (DateTime.now().millisecondsSinceEpoch % 1000).toString().padLeft(3, '0';    _numeroContratController.text = '$companyCode-$agencyCode-$timestamp-$random';        'Nouveau Contrat';                // Cercle d';            _buildStepTitle('üìã Informations du Contrat', 'Renseignez les d√©tails du contrat';              label: 'Num√©ro de Contrat';            // Type d';                    label: 'Date de d√©but';                    label: 'Date de fin';                    label: 'Prime (TND)';                      if (value?.isEmpty ?? true) return 'Champ requis';                      if (double.tryParse(value!) == null) return 'Montant invalide';                    label: 'Franchise (TND)';                      if (value?.isEmpty ?? true) return 'Champ requis';                      if (double.tryParse(value!) == null) return 'Montant invalide';                    label: 'N¬∞ Quittance';                      if (value?.isEmpty ?? true) return 'Champ requis';                    label: 'Date quittance';  /// Titre d';  /// S√©lecteur de type d';      {'value': 'tiers', 'label': 'Responsabilit√© Civile', 'icon';      {'value': 'tiers_vol_incendie', 'label': 'Tiers + Vol/Incendie', 'icon';      {'value': 'tous_risques', 'label': 'Tous Risques', 'icon';          'Type d\'assurance';              color: _typeAssurance == type['value';              width: _typeAssurance == type['value';            color: _typeAssurance == type['value';            value: type['value';                  type['icon';                  color: _typeAssurance == type['value';                  type['label';                    color: _typeAssurance == type['value';              '${value.day.toString().padLeft(2, '0')}/${value.month.toString().padLeft(2, '0')}/${value.year}';        'S√©lection du conducteur\n(√Ä impl√©menter)';        'S√©lection du v√©hicule\n(√Ä impl√©menter)';        'Confirmation du contrat\n(√Ä impl√©menter)';                  'Pr√©c√©dent';                      _currentStep == 3 ? 'Cr√©er le Contrat' : 'Suivant';  /// G√©rer l';            content: Text('Contrat cr√©√© avec succ√®s!';            content: Text('Erreur: $e';