import 'dart:math';import 'package:cloud_firestore/cloud_firestore.dart';import '../models/compagnie_assurance_model.dart';import '../models/agence_model.dart';import '../models/agent_assurance_model.dart';/// 🏭 Générateur de données de test pour le secteur de l';  /// 🏢 Compagnies d';      'id': 'STAR';      'nom': 'STAR Assurances';      'siret': '1234567890123';      'adresse': 'Avenue Habib Bourguiba, 1000 Tunis';      'telephone': '+216 71 123 456';      'email': 'contact@star.tn';      'id': 'MAGHREBIA';      'nom': 'Maghrebia Assurances';      'siret': '2345678901234';      'adresse': 'Rue de la Liberté, 1002 Tunis';      'telephone': '+216 71 234 567';      'email': 'info@maghrebia.tn';      'id': 'LLOYD';      'nom': 'Lloyd Tunisien';      'siret': '3456789012345';      'adresse': 'Avenue Mohamed V, 1001 Tunis';      'telephone': '+216 71 345 678';      'email': 'contact@lloyd.tn';      'id': 'GAT';      'nom': 'GAT Assurances';      'siret': '4567890123456';      'adresse': 'Rue Ibn Khaldoun, 1003 Tunis';      'telephone': '+216 71 456 789';      'email': 'info@gat.tn';      'id': 'AST';      'nom': 'Assurances Salim';      'siret': '5678901234567';      'adresse': 'Avenue de la République, 1004 Tunis';      'telephone': '+216 71 567 890';      'email': 'contact@ast.tn';  /// 🏪 Modèles d';    'Tunis';      {'nom': 'Centre Ville', 'code': 'TC', 'adresse': 'Avenue Habib Bourguiba';      {'nom': 'Bab Bhar', 'code': 'TB', 'adresse': 'Place Bab Bhar';      {'nom': 'Menzah', 'code': 'TM', 'adresse': 'Centre Commercial Menzah';    'Sfax';      {'nom': 'Sfax Centre', 'code': 'SC', 'adresse': 'Avenue Hedi Chaker';      {'nom': 'Sfax Nord', 'code': 'SN', 'adresse': 'Route de Tunis';    'Sousse';      {'nom': 'Sousse Medina', 'code': 'SM', 'adresse': 'Avenue Bourguiba';      {'nom': 'Sousse Kantaoui', 'code': 'SK', 'adresse': 'Port El Kantaoui';    'Monastir';      {'nom': 'Monastir Centre', 'code': 'MC', 'adresse': 'Avenue de l\'Indépendance';    'Nabeul';      {'nom': 'Nabeul Centre', 'code': 'NC', 'adresse': 'Avenue Taieb Mehiri';      {'nom': 'Hammamet', 'code': 'NH', 'adresse': 'Avenue de la Paix';    'Mohamed', 'Ahmed', 'Ali', 'Mahmoud', 'Omar', 'Youssef', 'Karim', 'Sami';    'Fatma', 'Aisha', 'Khadija', 'Maryam', 'Salma', 'Nour', 'Rahma', 'Ines';    'Ben Ali', 'Trabelsi', 'Bouazizi', 'Chedly', 'Hammami', 'Jebali';    'Marzouki', 'Essebsi', 'Karoui', 'Belhaj', 'Sfar', 'Gharbi';  /// 🎯 Spécialités d';    'automobile', 'habitation', 'vie', 'santé', 'voyage', 'responsabilité_civile';    print('🚀 Génération des données de test...';      print('✅ Génération terminée avec succès !';      print('❌ Erreur lors de la génération: $e';  /// 🏢 Générer les compagnies d';    print('📊 Génération des compagnies...';        id: compagnieData['id';        nom: compagnieData['nom';        siret: compagnieData['siret';        adresseSiege: compagnieData['adresse';        telephone: compagnieData['telephone';        email: compagnieData['email';      final docRef = _firestore.collection('compagnies_assurance';    print('✅ ${_compagnies.length} compagnies créées';    print('🏪 Génération des agences...';      final compagnieId = compagnieData['id';        final agenceId = '${compagnieId.toLowerCase()}_${gouvernorat.toLowerCase()}';          nom: '${compagnieData['nom']} ${agenceTemplate['nom']}';          codeAgence: '${agenceTemplate['code']}${_random.nextInt(100).toString().padLeft(2, '0')}';          adresse: '${agenceTemplate['adresse']}, $gouvernorat';          telephone: '+216 ${70 + _random.nextInt(9)} ${_random.nextInt(900) + 100} ${_random.nextInt(900) + 100}';          email: '${gouvernorat.toLowerCase()}@${compagnieId.toLowerCase()}.tn';            telephone: '+216 ${90 + _random.nextInt(9)} ${_random.nextInt(900) + 100} ${_random.nextInt(900) + 100}';        await _firestore.collection('agences';      await _firestore.collection('compagnies_assurance';        'agences';    print('✅ $agenceCount agences créées';  /// 👨‍💼 Générer les agents d';    print('👨‍💼 Génération des agents...';    final agencesSnapshot = await _firestore.collection('agences';        final agentId = '${agence.id}_agent_${i + 1}';          userId: 'user_$agentId';          matriculeAgent: '${agence.codeAgence}${(i + 1).toString().padLeft(3, '0')}';        await _firestore.collection('agents_assurance';      // Mettre à jour l';      await _firestore.collection('agences';        'agents';    print('✅ $agentCount agents créés';    print('🗑️ Suppression des données de test...';    final agentsSnapshot = await _firestore.collection('agents_assurance';    final agencesSnapshot = await _firestore.collection('agences';    final compagniesSnapshot = await _firestore.collection('compagnies_assurance';    print('✅ Données supprimées';