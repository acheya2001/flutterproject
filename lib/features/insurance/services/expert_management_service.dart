import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';import '../models/insurance_system_models.dart';  }';      // Verifier si l';          'success';          'error': 'Un expert avec ce CIN ou cet email existe deja';        id: ';      await _updateCompaniesExpertCount(compagnieIds, increment: true';        'success';        'expertId';        'message': ';    } catch (e';      debugPrint('‚ùå Erreur lors de la creation du profil expert:  + e.toString()';        'success';        'error': 'Erreur technique: ';          .collection(FirebaseCollections.experts';          .where('compagnieIds, arrayContains: compagnieId';          .where('gouvernoratsIntervention, arrayContains: gouvernorat';          .where('statut', isEqualTo: ';      if (specialite != null';        query = query.where(';    } catch (e';      debugPrint('‚ùå Erreur lors de la recherche d\'experts:  + e.toString()';  /// üìã Obtenir tous les experts d';          .where('compagnieIds, arrayContains: compagnieId';          .orderBy(';    } catch (e';      debugPrint(';      if (!expertDoc.exists';          'success';          'error': ';      if (expert.compagnieIds.contains(compagnieId)';          'success';          'error': 'L\';          .doc(expertId';        'compagnieIds: FieldValue.arrayUnion([compagnieId';        ';      await _updateCompaniesExpertCount([compagnieId], increment: true';        'success';        'message': ';    } catch (e';      debugPrint('‚ùå Erreur lors de l\'ajout de la compagnie:  + e.toString()';        'success';        'error': 'Erreur technique: 'e';      if (!expertDoc.exists';          'success';          'error': ';          .doc(expertId';        'compagnieIds: FieldValue.arrayRemove([compagnieId';        ';      await _updateCompaniesExpertCount([compagnieId], increment: false';        'success';        'message': ';    } catch (e';      debugPrint('‚ùå Erreur lors du retrait de la compagnie:  + e.toString()';        'success';        'error': 'Erreur technique: 'e';          .collection(FirebaseCollections.constats';          .where(';          .where((doc) => doc.data(')['statut'] == ';          .where((doc) => doc.data(')['statut'] == 'clos';        'constatsTraites';        'constatsEnCours';        'constatsClos';        'compagniesPartenaires';        'gouvernoratsIntervention';        'specialite';        ';    } catch (e';      debugPrint(';    } catch (e';      debugPrint('‚ùå Erreur lors de la recuperation de l\';  }';      // Verifier que l';          'success';          'error': ';          .doc(constatId';        'expertId';        'statut': 'expertise';        'dateAssignationExpert: Timestamp.now(';        'notesAssignation';        ';      }';      // Mettre a jour la liste des constats de l';        'constatIds: FieldValue.arrayUnion([constatId';        ';      }';        'success';        'message': ';    } catch (e';      debugPrint('‚ùå Erreur lors de l\'assignation de l\'expert:  + e.toString()';        'success';        'error': 'Erreur technique: 'e';          .doc(constatId';        'evaluation';        'photosExpertise';        'documentsExpertise';        'conclusionExpert';        'dateFinExpertise: Timestamp.now(';        'statut': 'clos';        ';      }';        'success';        'message': 'Rapport d\';    } catch (e';      debugPrint('‚ùå Erreur lors de la soumission du rapport:  + e.toString()';        'success';        'error': 'Erreur technique: ';          .collection(FirebaseCollections.experts';          .where(';          .collection(FirebaseCollections.experts';          .where(';    } catch (e';      debugPrint('‚ùå Erreur lors de la recherche de l\'expert:  + e.toString()';  /// üìä Mettre a jour le nombre d';          'statistiques.nombreExperts: FieldValue.increment(increment ? 1 : -1';          ';    } catch (e';      debugPrint(';          .collection(FirebaseCollections.experts';          .orderBy(';    } catch (e';      debugPrint('‚ùå Erreur lors de la recuperation des experts:  + e.toString()';  /// üìã Obtenir les constats en attente d';          .where('statut', isEqualTo: 'en_attente_expertise';          .orderBy(';    } catch (e';      debugPrint('‚ùå Erreur lors de la recuperation des constats: ';