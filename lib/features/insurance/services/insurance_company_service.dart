import 'package:flutter/foundation.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../models/compagnie_model.dart';import '../models/agent_model.dart';/// 🏢 Service de gestion des compagnies d';  static const String _compagniesCollection = 'compagnies_assurance';  static const String _agencesCollection = 'agences_assurance';  static const String _agentsCollection = 'agents_assurance';  static const String _expertsCollection = 'experts_assurance';  /// 🏢 Créer les compagnies d';    debugPrint('[InsuranceService] 🏢 Initialisation des compagnies principales...';        'nom': 'STAR Assurances';        'logo': 'https://example.com/star-logo.png';        'adresse_siege': 'Avenue Habib Bourguiba, Tunis';        'telephone': '+216 71 340 000';        'email': 'contact@star.com.tn';        'site_web': 'https://www.star.com.tn';        'numero_agrement': 'AGR-STAR-001';        'types_assurance': ['Automobile', 'Habitation', 'Vie', 'Santé';        'nom': 'Maghrebia Assurances';        'logo': 'https://example.com/maghrebia-logo.png';        'adresse_siege': 'Rue de la Liberté, Tunis';        'telephone': '+216 71 250 000';        'email': 'contact@maghrebia.com.tn';        'site_web': 'https://www.maghrebia.com.tn';        'numero_agrement': 'AGR-MAGH-001';        'types_assurance': ['Automobile', 'Habitation', 'Vie';        'nom': 'Assurances Salim';        'logo': 'https://example.com/salim-logo.png';        'adresse_siege': 'Avenue Mohamed V, Tunis';        'telephone': '+216 71 180 000';        'email': 'contact@salim.com.tn';        'site_web': 'https://www.salim.com.tn';        'numero_agrement': 'AGR-SALIM-001';        'types_assurance': ['Automobile', 'Habitation';        'nom': 'GAT Assurances';        'logo': 'https://example.com/gat-logo.png';        'adresse_siege': 'Rue Ibn Khaldoun, Tunis';        'telephone': '+216 71 290 000';        'email': 'contact@gat.com.tn';        'site_web': 'https://www.gat.com.tn';        'numero_agrement': 'AGR-GAT-001';        'types_assurance': ['Automobile', 'Transport';            .where('nom', isEqualTo: companyData['nom';            id: '';            nom: companyData['nom';            logo: companyData['logo';            adresseSiege: companyData['adresse_siege';            telephone: companyData['telephone';            email: companyData['email';            siteWeb: companyData['site_web';            numeroAgrement: companyData['numero_agrement';            typesAssurance: List<String>.from(companyData['types_assurance';              'nombre_agences';              'nombre_agents';              'nombre_clients';              'nombre_contrats';          debugPrint('[InsuranceService] ✅ Compagnie créée: ${companyData['nom']} (${docRef.id})';          debugPrint('[InsuranceService] ⚠️ Compagnie existe déjà: ${companyData['nom']}';        debugPrint('[InsuranceService] ❌ Erreur création ${companyData['nom']}: $e';    debugPrint('[InsuranceService] 🏪 Création des agences...';      'Tunis', 'Ariana', 'Ben Arous', 'Manouba';      'Sfax', 'Sousse', 'Monastir', 'Mahdia';      'Bizerte', 'Nabeul', 'Zaghouan', 'Siliana';      'Kairouan', 'Kasserine', 'Sidi Bouzid';      'Gafsa', 'Tozeur', 'Kebili', 'Gabes';      'Medenine', 'Tataouine', 'Le Kef', 'Jendouba', 'Beja';      final compagnieNom = companyDoc.data()['nom';          // Vérifier si l';              .where('compagnie_id';              .where('gouvernorat';              id: '';              nom: '$compagnieNom - Agence $gouvernorat';              adresse: 'Avenue Principale, $gouvernorat';              codePostal: '${1000 + i}';              telephone: '+216 ${70 + i} ${100 + i} ${200 + i}';              email: '${gouvernorat.toLowerCase()}@${compagnieNom.toLowerCase().replaceAll(' ', '')}.tn';              responsable: 'Responsable $gouvernorat';                'nombre_agents';                'nombre_clients';                'nombre_contrats';            debugPrint('[InsuranceService] ✅ Agence créée: ${agence.nom} (${docRef.id})';          debugPrint('[InsuranceService] ❌ Erreur création agence $gouvernorat pour $compagnieNom: $e';          .where('active';          .orderBy('nom';      debugPrint('[InsuranceService] ❌ Erreur récupération compagnies: $e';  /// 🏪 Obtenir les agences d';          .where('compagnie_id';          .where('active';          .orderBy('nom';      debugPrint('[InsuranceService] ❌ Erreur récupération agences: $e';  /// 👨‍💼 Obtenir les agents d';          .where('agence_id';          .where('account_status', isEqualTo: 'active';          .orderBy('nom';      debugPrint('[InsuranceService] ❌ Erreur récupération agents: $e';  /// 📈 Mettre à jour les statistiques d';          .where('compagnie_id';          .where('active';          .where('compagnie_id';          .where('account_status', isEqualTo: 'active';        'statistiques.nombre_agences';        'statistiques.nombre_agents';        'date_modification';      debugPrint('[InsuranceService] ✅ Statistiques mises à jour pour: $compagnieId';      debugPrint('[InsuranceService] ❌ Erreur mise à jour statistiques: $e';  /// 🔄 Initialisation complète du système d';    debugPrint('[InsuranceService] 🚀 Initialisation complète du système...';      'compagnies_created';      'agences_created';      'errors';      results['compagnies_created';      debugPrint('[InsuranceService] 🎉 Système d\'assurance initialisé avec succès';      debugPrint('[InsuranceService] ❌ Erreur initialisation système: $e';      (results['errors'] as List<String>).add('Erreur générale: $e';