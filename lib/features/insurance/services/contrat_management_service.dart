import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';import '../models/vehicule_complet_model.dart';/// 📋 Service de gestion des contrats d';  /// ✅ Créer un nouveau contrat d';      debugPrint('📋 Création nouveau contrat: ${vehicule.contrat.numeroContrat}';      // 1. Vérifier que le numéro de contrat n';          .collection('vehicules_complets';          .where('contrat.numero_contrat';        throw Exception('Un contrat avec ce numéro existe déjà';      // 2. Vérifier que l'immatriculation n';          .collection('vehicules_complets';          .where('immatriculation';        throw Exception('Un véhicule avec cette immatriculation existe déjà';      final vehiculeRef = _firestore.collection('vehicules_complets';      // 4. Enregistrer l';        action: 'creation';          'vehicule': '${vehicule.marque} ${vehicule.modele}';          'immatriculation';          'proprietaire';          'type_couverture';          'prime_annuelle';      // 5. Mettre à jour les statistiques de l';      debugPrint('✅ Contrat créé avec succès: ${vehiculeRef.id}';      debugPrint('❌ Erreur création contrat: $e';  /// 📊 Obtenir les contrats d';          .collection('vehicules_complets';          .where('contrat.agent_gestionnaire';          .orderBy('createdAt';      debugPrint('❌ Erreur récupération contrats agent: $e';  /// 📊 Obtenir les contrats d';          .collection('vehicules_complets';          .where('contrat.agence_id';          .orderBy('createdAt';      debugPrint('❌ Erreur récupération contrats agence: $e';  /// 📊 Obtenir les contrats d';          .collection('vehicules_complets';          .where('contrat.compagnie_id';          .orderBy('createdAt';      debugPrint('❌ Erreur récupération contrats compagnie: $e';          .collection('vehicules_complets';          .where('contrat.numero_contrat';      debugPrint('❌ Erreur recherche contrat: $e';      await _firestore.collection('vehicules_complets';        'contrat.date_fin';        'contrat.statut': 'actif';        'updatedAt';      debugPrint('✅ Contrat renouvelé: $vehiculeId';      debugPrint('❌ Erreur renouvellement contrat: $e';      await _firestore.collection('vehicules_complets';        'contrat.statut': 'suspendu';        'contrat.raison_suspension';        'updatedAt';      debugPrint('✅ Contrat suspendu: $vehiculeId';      debugPrint('❌ Erreur suspension contrat: $e';      Query query = _firestore.collection('vehicules_complets';        query = query.where('contrat.agent_gestionnaire';        query = query.where('contrat.agence_id';        query = query.where('contrat.compagnie_id';        query = query.where('createdAt';        query = query.where('createdAt';        final contratData = data['contrat';        final statut = contratData['statut';          case 'actif';          case 'suspendu';          case 'expire';        primeTotal += (contratData['prime_annuelle';        final typeCouverture = contratData['type_couverture';        final marque = data['marque';        'total_contrats';        'contrats_actifs';        'contrats_suspendus';        'contrats_expires';        'prime_totale';        'prime_moyenne';        'contrats_par_type';        'contrats_par_marque';        'taux_activite';      debugPrint('❌ Erreur statistiques contrats: $e';      final activityId = _firestore.collection('contrats_activites';      await _firestore.collection('contrats_activites';        'id';        'contract_id';        'contract_number';        'action';        'agent_id';        'details';        'timestamp';        'createdAt';      debugPrint('📝 Activité contrat enregistrée: $action';      debugPrint('❌ Erreur enregistrement activité: $e';      // Ne pas faire échouer l';  /// 📊 Mettre à jour les statistiques d';      final agenceRef = _firestore.collection('agences';          final currentContracts = currentStats['contrats_actifs';          final currentVehicules = currentStats['vehicules_geres';            'contrats_actifs';            'vehicules_geres';            'updatedAt';      debugPrint('📊 Statistiques agence mises à jour: $agenceId';      debugPrint('❌ Erreur mise à jour stats agence: $e';      // Ne pas faire échouer l';