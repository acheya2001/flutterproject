import 'package:flutter/foundation.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../models/contrat_model.dart';import '../models/vehicule_assure_model.dart';import '../../vehicule/models/vehicule_model.dart';import '../models/compagnie_model.dart';/// 📄 Service de gestion des contrats d';  static const String _contratsCollection = 'contrats_assurance';  static const String _vehiculesAssuresCollection = 'vehicules_assures';  static const String _vehiculesCollection = 'vehicules';  static const String _compagniesCollection = 'compagnies_assurance';  static const String _agencesCollection = 'agences_assurance';  /// 📄 Créer un nouveau contrat d';      debugPrint('[ContratService] 📄 Création d\'un nouveau contrat...';        id: '';      debugPrint('[ContratService] ✅ Contrat créé: ${docRef.id}';      // Créer l';        numeroQuittance: numeroQuittance ?? '';      debugPrint('[ContratService] ❌ Erreur création contrat: $e';  /// 🚗 Créer l';      id: '';    debugPrint('[ContratService] ✅ Véhicule assuré créé pour contrat: $contratId';      String codeCompagnie = 'ASS';        final nom = compagnieDoc.data()!['nom';        if (nom.contains('STAR') codeCompagnie = 'STAR';        else if (nom.contains('Maghrebia') codeCompagnie = 'MAGH';        else if (nom.contains('Salim') codeCompagnie = 'SALIM';        else if (nom.contains('GAT') codeCompagnie = 'GAT';          .where('compagnie_id';      final numeroSequentiel = (contratsSnapshot.docs.length + 1).toString().padLeft(6, '0';      return '$codeCompagnie-$annee-$numeroSequentiel';      debugPrint('[ContratService] ❌ Erreur génération numéro: $e';      return 'ASS-${DateTime.now().year}-${DateTime.now().millisecondsSinceEpoch.toString().substring(7)}';  /// 🚗 Obtenir les véhicules assurés d';      debugPrint('[ContratService] 🚗 Récupération véhicules pour: $conducteurId';          .where('proprietaireId';        // Chercher l';            .where('vehicule_id';            .where('conducteur_id';            .where('actif';            compagnieNom = compagnieDoc.data()!['nom';          // Récupérer le nom de l';            agenceNom = agenceDoc.data()!['nom';      debugPrint('[ContratService] ✅ ${vehiculesAvecAssurance.length} véhicules récupérés';      debugPrint('[ContratService] ❌ Erreur récupération véhicules: $e';  /// 📄 Obtenir les contrats d';          .where('conducteur_id';          .orderBy('date_creation';      debugPrint('[ContratService] ❌ Erreur récupération contrats: $e';  /// 📄 Obtenir les contrats d';          .where('agence_id';          .orderBy('date_creation';      debugPrint('[ContratService] ❌ Erreur récupération contrats agence: $e';        'date_fin';        'date_modification';        'status';          .where('contrat_id';          'date_fin_couverture';          'date_modification';          'actif';      debugPrint('[ContratService] ✅ Contrat renouvelé: $contratId';      debugPrint('[ContratService] ❌ Erreur renouvellement: $e';        'status';        'date_modification';        'conditions.motif_resiliation';          .where('contrat_id';          'actif';          'date_modification';      debugPrint('[ContratService] ✅ Contrat résilié: $contratId';      debugPrint('[ContratService] ❌ Erreur résiliation: $e';