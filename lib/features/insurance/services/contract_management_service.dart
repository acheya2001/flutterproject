import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';import '../models/insurance_system_models.dart';import 'insurance_system_service.dart';      if (client == null';          'success';          'error': 'Client non trouve. Veuillez d\'abord creer le profil client.';          ';      if (vehicule == null';          'success';          'error': 'Vehicule non trouve. Veuillez d\'abord enregistrer le vehicule.';          ';      if (vehicule.proprietaireId != client.id';          'success';          'error': 'Le vehicule n\';      final numeroContrat = await _generateContractNumber(compagnieId';        id: ';        dateCreation: DateTime.now(';        statut: ';        await _sendContractNotification(client, vehicule, contrat.copyWith(id: contratId)';          'success';          'contratId';          'numeroContrat';          'message': 'Contrat cree avec succes';          'success';          'error': ';    } catch (e';      debugPrint('‚ùå Erreur lors de la creation du contrat:  + e.toString()';        'success';        'error': 'Erreur technique: ';      if (existingClient != null';          'success';          'error': 'Un client avec ce CIN existe deja';        id: ';      if (clientId != null';          'success';          'clientId';          'message': 'Profil client cree avec succes';          'success';          'error': ';    } catch (e';      debugPrint('‚ùå Erreur lors de la creation du profil client:  + e.toString()';        'success';        'error': 'Erreur technique: ';      if (existingVehicule != null';          'success';          'error': 'Un vehicule avec cette immatriculation existe deja';        id: ';      if (vehiculeId != null';          'success';          'vehiculeId';          'message': 'Vehicule cree avec succes';          'success';          'error': ';    } catch (e';      debugPrint('‚ùå Erreur lors de la creation du vehicule:  + e.toString()';        'success';        'error': 'Erreur technique: ';          .collection(FirebaseCollections.contrats';          .where('agentId, isEqualTo: agentId';          .orderBy(';    } catch (e';      debugPrint('‚ùå Erreur lors de la recuperation des contrats:  + e.toString()';  /// üìä Obtenir les statistiques d';        'totalContrats';        'contratsActifs';        'contratsExpires';        'chiffreAffaires';        ';    } catch (e';      debugPrint(';      final compagnieCode = compagnieDoc.data(')?['code'] ?? ';      final timestamp = DateTime.now().millisecondsSinceEpoch.toString().substring(8';      return '$compagnieCode$year';    } catch (e';      debugPrint('‚ùå Erreur lors de la generation du numero de contrat:  + e.toString()';      return 'CTR{DateTime.now(').millisecondsSinceEpoch}';      debugPrint('üìß Notification envoyee a ${client.email} pour le contrat ';    } catch (e';      debugPrint('‚ùå Erreur lors de l\'envoi de la notification: ';