import 'package:flutter/material.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import '../services/auto_fill_service.dart';import '../models/insurance_system_models.dart';  final _degatsController = TextEditingController(';  // Variables d';    'Collision frontale';    'Collision arriere';    'Collision laterale';    'Sortie de route';    'Choc avec obstacle fixe';    'Renversement';    'Incendie';    'Vol/Vandalisme';    'Bris de glace';    ';      if (widget.preFilledData != null';        _conducteurData = widget.preFilledData!['conducteur';        _vehiculeData = widget.preFilledData!['vehicule';        _assuranceData = widget.preFilledData!['assurance';        // Charger les donnees via le service d';        final autoFillData = await AutoFillService.getConducteurDataForAutoFill(widget.conducteurId ?? ';            dateAccident: DateTime.now(';            lieuAccident: ';          ';          _conducteurData = preFilledData['conducteur';          _vehiculeData = preFilledData['vehicule';          _assuranceData = preFilledData['assurance';      final now = DateTime.now(';      _dateController.text = '{now.day.toString(').padLeft(2, '0')}/'{now.month.toString().padLeft(2, '0')}/'{now.year}';      _heureController.text = '{now.hour.toString(').padLeft(2, '0')}:'{now.minute.toString().padLeft(2, '0')}';      _showErrorSnackBar(';          _buildStepConnector(0';          _buildStepIndicator(1, ';          _buildStepConnector(1';          _buildStepIndicator(2, ';          _buildStepConnector(2';          _buildStepIndicator(3, ';          const SizedBox(height: 20';          _buildPreFilledSection(';          const SizedBox(height: 20';          _buildPreFilledSection(';          const SizedBox(height: 20';          _buildPreFilledSection(';                  ';                    child:  ?? ';    ';  /// ðŸš¨ Ã‰tape 2: Details de l';              label: 'Lieu de l\'accident';              hint: ';                if (value?.isEmpty ?? true';                  return ';            const SizedBox(height: 20';                    label: 'Date';                    hint: ';                const SizedBox(width: 15';                    label: 'Heure';                    hint: ';            const SizedBox(height: 20';              label: 'Description de l\'accident';              hint: 'Decrivez les circonstances de l\';                if (value?.isEmpty ?? true';                  return ';            const SizedBox(height: 20';              label: 'Description des degÃ¢ts';              hint: ';              }';            nextLabel: ';      ';          _buildSummaryRow('Lieu:, _lieuController.text';          _buildSummaryRow('Date:, _dateController.text';          _buildSummaryRow('Heure:, _heureController.text';          _buildSummaryRow('Description:, _descriptionController.text';          _buildSummaryRow('DegÃ¢ts:, _degatsController.text';          _buildSummaryRow('Circonstances:', _selectedCirconstances.join(';              ';                ';                  ';                : const Text(nextLabel ?? ';      setState((';        _dateController.text = '{picked.day.toString(').padLeft(2, '0')}/'{picked.month.toString().padLeft(2, '0')}/';      setState((';        _heureController.text = '{picked.hour.toString(').padLeft(2, '0')}:'{picked.minute.toString().padLeft(2, '0')}';    } catch (e';      _showErrorDialog('Erreur lors de l\';              Navigator.of(context).pop(';            child: const Text(';            onPressed: () => Navigator.of(context).pop(')')';            child: const Text(';')')