import 'package:cloud_firestore/cloud_firestore.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';import 'dart:math';import '../models/professional_request_model_final.dart';  static const String _collection = 'professional_account_requests';      debugPrint('[PROFESSIONAL_REQUEST] üìã R√©cup√©ration de toutes les demandes...';          .orderBy('dateCreation';      debugPrint('[PROFESSIONAL_REQUEST] ‚úÖ ${requests.length} demandes r√©cup√©r√©es';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Erreur r√©cup√©ration demandes: $e';      debugPrint('[PROFESSIONAL_REQUEST] üìã R√©cup√©ration demandes statut: $status';          .where('statut';          .orderBy('dateCreation';      debugPrint('[PROFESSIONAL_REQUEST] ‚úÖ ${requests.length} demandes trouv√©es';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Erreur r√©cup√©ration par statut: $e';    return await getRequestsByStatus('en_attente';        .orderBy('dateCreation';        .where('statut', isEqualTo: 'en_attente';        .orderBy('dateCreation';      debugPrint('[PROFESSIONAL_REQUEST] ‚úÖ Approbation demande: $requestId';        'statut': 'approuvee';        'adminId';        'dateTraitement';        'commentaireAdmin';      debugPrint('[PROFESSIONAL_REQUEST] ‚úÖ Demande approuv√©e avec succ√®s';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Erreur approbation: $e';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Rejet demande: $requestId';        'statut': 'rejetee';        'adminId';        'dateTraitement';        'commentaireAdmin';      debugPrint('[PROFESSIONAL_REQUEST] ‚úÖ Demande rejet√©e avec succ√®s';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Erreur rejet: $e';      debugPrint('[PROFESSIONAL_REQUEST] üë§ Cr√©ation compte pour: ${request.email}';        throw Exception('Erreur lors de la cr√©ation du compte Firebase Auth';        'uid';        'email';        'nomComplet';        'nom';        'prenom';        'telephone';        'cin';        'role';        'compagnieAssurance': request.compagnie ?? '';        'agence': request.nomAgence ?? '';        'zoneIntervention': request.zoneIntervention ?? '';        'numAgrement': request.numAgrement ?? '';        'adresseAgence': request.adresseAgence ?? '';        'fonction': request.fonction ?? '';        'ville': request.ville ?? '';        'dateCreation';        'isActive';        'isVerified';        'requestId';        'mustChangePassword';        case 'agent_agence';          collection = 'agents_assurance';        case 'expert_auto';          collection = 'experts';        case 'admin_compagnie';          collection = 'admin_compagnies';        case 'admin_agence';          collection = 'admin_agences';          collection = 'users';      debugPrint('[PROFESSIONAL_REQUEST] ‚úÖ Compte cr√©√© avec succ√®s';        'success';        'uid';        'email';        'temporaryPassword';        'collection';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Erreur cr√©ation compte: $e';        'success';        'error';    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#\$%^&*';    String password = '';    // S'assurer qu';    if (!password.contains(RegExp(r'[A-Z]';      password = password.replaceRange(0, 1, 'A';    if (!password.contains(RegExp(r'[a-z]';      password = password.replaceRange(1, 2, 'a';    if (!password.contains(RegExp(r'[0-9]';      password = password.replaceRange(2, 3, '1';    if (!password.contains(RegExp(r'[!@#\$%^&*]';      password = password.replaceRange(3, 4, '!';      debugPrint('[PROFESSIONAL_REQUEST] üìä R√©cup√©ration statistiques...';        _firestore.collection(_collection).where('statut', isEqualTo: 'en_attente';        _firestore.collection(_collection).where('statut', isEqualTo: 'approuvee';        _firestore.collection(_collection).where('statut', isEqualTo: 'rejetee';        _firestore.collection(_collection).where('typeCompte', isEqualTo: 'agent';        _firestore.collection(_collection).where('typeCompte', isEqualTo: 'expert';        'en_attente';        'approuvees';        'rejetees';        'agents';        'experts';        'total';      debugPrint('[PROFESSIONAL_REQUEST] ‚úÖ Statistiques: $stats';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Erreur statistiques: $e';        'en_attente';        'approuvees';        'rejetees';        'agents';        'experts';        'total';      debugPrint('[PROFESSIONAL_REQUEST] üîç Recherche: $query';          .orderBy('dateCreation';      debugPrint('[PROFESSIONAL_REQUEST] ‚úÖ ${filteredRequests.length} r√©sultats trouv√©s';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Erreur recherche: $e';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Erreur r√©cup√©ration demande: $e';      debugPrint('[PROFESSIONAL_REQUEST] ‚úÖ Demande supprim√©e: $requestId';      debugPrint('[PROFESSIONAL_REQUEST] ‚ùå Erreur suppression: $e';