import 'package:cloud_firestore/cloud_firestore.dart';    print('🧪 === TEST DU SYSTÈME COMPLET ===';      print('✅ === TOUS LES TESTS RÉUSSIS ===';      print('❌ Erreur lors des tests: $e';    print('\n🏢 Test des compagnies...';    final snapshot = await _firestore.collection('compagnies_assurance';    print('📊 Nombre de compagnies: ${snapshot.docs.length}';      print('  • ${data['nom']} (${data['secteur']}) - Fondée en ${data['fondee']}';      print('✅ Compagnies OK - ${snapshot.docs.length} compagnies trouvées';      print('⚠️ Peu de compagnies trouvées: ${snapshot.docs.length}';    print('\n📋 Test des demandes...';    final snapshot = await _firestore.collection('demandes_agents';    print('📊 Nombre de demandes: ${snapshot.docs.length}';      print('  • ${data['prenom']} ${data['nom']} - ${data['compagnieNom']} - ${data['statut']}';      if (data.containsKey('agenceNom';        print('    Agence: ${data['agenceNom']} (${data['agenceVille']})';      if (data.containsKey('justificatifTravailFourni';        print('    Justificatif: ${data['justificatifTravailFourni'] ? '✅' : '❌'}';    print('✅ Demandes OK';    print('\n👨‍💼 Test des admins...';    final snapshot = await _firestore.collection('admins_users';    print('📊 Nombre d\'admins: ${snapshot.docs.length}';      final type = data['type';      print('  • ${data['prenom']} ${data['nom']} (${data['email']}) - Type: $type';    print('\n📊 Répartition par type:';      print('  • $type: $count';    print('✅ Admins OK';    print('\n🔍 Test demande spécifique: $demandeId';      final doc = await _firestore.collection('demandes_agents';        print('✅ Demande trouvée:';        print('  • Nom: ${data['prenom']} ${data['nom']}';        print('  • Email: ${data['email']}';        print('  • Compagnie: ${data['compagnieNom']}';        print('  • Agence: ${data['agenceNom']} (${data['agenceVille']})';        print('  • Statut: ${data['statut']}';        print('  • Justificatif: ${data['justificatifTravailFourni'] ?? false}';        if (data.containsKey('agenceNouvelle';          print('  • Nouvelle agence: ${data['agenceNouvelle']}';        print('❌ Demande non trouvée';      print('❌ Erreur: $e';    print('\n📈 === STATISTIQUES GLOBALES ===';      final compagniesSnapshot = await _firestore.collection('compagnies_assurance';      print('🏢 Compagnies: ${compagniesSnapshot.docs.length}';      final agencesSnapshot = await _firestore.collection('agences_assurance';      print('🏪 Agences: ${agencesSnapshot.docs.length}';      final demandesSnapshot = await _firestore.collection('demandes_agents';      print('📋 Demandes: ${demandesSnapshot.docs.length}';          .where((doc) => doc.data()['statut'] == 'en_attente';      print('⏳ Demandes en attente: $demandesEnAttente';      final adminsSnapshot = await _firestore.collection('admins_users';      print('👨‍💼 Admins: ${adminsSnapshot.docs.length}';      final agentsSnapshot = await _firestore.collection('agents_assurance';      print('👥 Agents: ${agentsSnapshot.docs.length}';      print('\n✅ Statistiques affichées';      print('❌ Erreur statistiques: $e';    print('\n🧹 Nettoyage des données de test...';      final demandesSnapshot = await _firestore.collection('demandes_agents';      print('✅ Demandes supprimées: ${demandesSnapshot.docs.length}';      print('✅ Nettoyage terminé';      print('❌ Erreur nettoyage: $e';    print('\n🎯 Création demande de test...';        'email': 'test.agent@email.com';        'nom': 'Test';        'prenom': 'Agent';        'telephone': '+216 20 123 456';        'compagnieId': 'star_assurance';        'compagnieNom': 'STAR Assurance';        'agenceNom': 'STAR Test Agence';        'agenceAdresse': 'Rue de Test, Tunis';        'agenceVille': 'Tunis';        'agenceGouvernorat': 'Tunis';        'agenceTelephone': '+216 71 123 456';        'agenceNouvelle';        'poste': 'Agent Commercial';        'numeroAgent': 'TEST001';        'userType': 'agent_assurance';        'statut': 'en_attente';        'dateCreation';        'motDePasseTemporaire': 'TestPassword123!';        'cin': 'TEST123456';        'justificatifTravailFourni';      final docRef = await _firestore.collection('demandes_agents';      print('✅ Demande de test créée: ${docRef.id}';      print('❌ Erreur création demande test: $e';      return '';