import 'dart:io';import 'package:flutter/material.dart';import 'package:pdf/pdf.dart';import 'package:pdf/widgets.dart';import 'package:printing/printing.dart';import 'package:path_provider/path_provider.dart';import 'package:constat_tunisie/features/admin/services/dashboard_filter_service.dart';              pw.const SizedBox(height: 20';              _buildPdfUserStats(globalStats[';              pw.const SizedBox(height: 20';              _buildPdfCompanyStats(globalStats[';              pw.const SizedBox(height: 20';              _buildPdfActivityStats(globalStats[';      ';      // Afficher l';        onLayout: (PdfPageFormat format) async => pdf.save(';        name: 'Dashboard_BI_{DateTime.now(').millisecondsSinceEpoch}.pdf';      debugPrint(';        ScaffoldMessenger.of(context';            content: (e';    final userStats = globalStats['users';    final companyStats = globalStats['companies';    final activityStats = globalStats['activity';        pw.const SizedBox(height: 12';                'Utilisateurs Total';                ''{userStats['total';            pw.const SizedBox(width: 16';                'Utilisateurs Actifs';                ''{userStats['active';            pw.const SizedBox(width: 16';                'Compagnies';                ''{companyStats['totalCompanies';            pw.const SizedBox(width: 16';                'Actions 24h';                ''{activityStats['auditLogs24h';  static pw.Widget _buildPdfUserStats(Map<String, dynamic> userStats';    final roleStats = userStats['byRole';    final statusStats = userStats[';                    return pw.(1)';                          pw.({entry.value}';        pw.const SizedBox(height: 12';              child: _buildPdfInfoRow('Compagnies d\'assurance', ''{companyStats['totalCompanies';            ';              child: _buildPdfInfoRow('Agences totales', ''{companyStats['totalAgencies';            ';              child: _buildPdfInfoRow('Moyenne agences/compagnie', ''{companyStats['averageAgenciesPerCompany';  static pw.Widget _buildPdfActivityStats(Map<String, dynamic> activityStats';    final actionStats = activityStats['actionStats';          Activite du Systeme (24h')';                  _buildPdfInfoRow('Logs d\'audit', ''{activityStats['auditLogs24h'] ?? 0}';                  _buildPdfInfoRow('Emails envoyes', ''{activityStats['emailsSent24h'] ?? 0}';                  _buildPdfInfoRow('Taux de succes emails', ''{activityStats['emailSuccessRate';                    return pw.(1';                          pw.({entry.value}';      final directory = await getApplicationDocumentsDirectory(';      final file = File('${directory.path}/';    } catch (e';      debugPrint(';    final buffer = StringBuffer(';    buffer.writeln('Rapport Dashboard BI - {DashboardFilterService.formatDateTime(DateTime.now()')}';    buffer.writeln(';    buffer.writeln('STATISTIQUES UTILISATEURS';    buffer.writeln('Metrique,Valeur';    final userStats = globalStats[';      if (value is Map';        buffer.writeln('';        (value as Map).forEach((subKey, subValue';          buffer.writeln('  $subKey,';        }';        buffer.writeln('$key,';    }';    buffer.writeln(';    buffer.writeln('STATISTIQUES COMPAGNIES';    buffer.writeln('Metrique,Valeur';    final companyStats = globalStats[';    companyStats.forEach((key, value';      buffer.writeln('$key,';