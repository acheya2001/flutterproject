import 'package:cloud_firestore/cloud_firestore.dart';import 'package:firebase_auth/firebase_auth.dart';import '../models/hierarchical_structure.dart';  static const String _compagniesCollection = 'compagnies_assurance';  static const String _agencesCollection = 'agences_assurance';  static const String _adminsCollection = 'admins_users';  static const String _demandesCollection = 'demandes_agents';  /// 🔍 Obtenir l';      print('❌ Erreur getCurrentAdmin: $e';      Query agentsQuery = _firestore.collection('agents_assurance';      // Filtrer selon le type d';          demandesQuery = demandesQuery.where('compagnieId';          agentsQuery = agentsQuery.where('compagnieId';              .where('compagnieId';              .where('agenceId';              .where('compagnieId';              .where('agenceId';          .where((doc) => doc.data() is Map && (doc.data() as Map)['statut'] == 'enAttente';          .where((doc) => doc.data() is Map && (doc.data() as Map)['statut'] == 'approuvee';        'totalDemandes';        'demandesEnAttente';        'demandesApprouvees';        'totalAgents';      print('❌ Erreur getAdminStats: $e';        'totalDemandes';        'demandesEnAttente';        'demandesApprouvees';        'totalAgents';    // Filtrer selon le type d';        query = query.where('compagnieId';            .where('compagnieId';            .where('agenceId';        data['id';      // Vérifier que l';        print('❌ Admin non autorisé à traiter cette demande';        'statut': 'approuvee';        'adminTraitantId';        'dateTraitement';        'commentaire';      print('❌ Erreur approuverDemande: $e';      // Vérifier que l';        print('❌ Admin non autorisé à traiter cette demande';        'statut': 'rejetee';        'adminTraitantId';        'dateTraitement';        'commentaire';      print('❌ Erreur rejeterDemande: $e';      await _firestore.collection('agents_assurance';        'id';        'nom';        'prenom';        'email';        'telephone';        'cin';        'compagnieId';        'agenceId';        'dateCreation';        'active';        'role': 'agent_assurance';      print('✅ Compte agent créé pour: ${demande.email}';      print('❌ Erreur _createAgentAccount: $e';        data['id';      print('❌ Erreur getCompagnies: $e';  /// 🏪 Obtenir les agences d';          .where('compagnieId';        data['id';      print('❌ Erreur getAgences: $e';      print('❌ Erreur loginAdmin: $e';