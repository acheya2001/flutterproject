import 'package:flutter/material.dart';    'Aujourd\'hui';    'Cette semaine';    'Ce mois';    'Ce trimestre';    'Cette annee';    'Tous';    'Super Admin';    'Admin Compagnie';    'Admin Agence';    'Agent';    'Conducteur';    'Expert';    'Tous';    'Actif';    'Inactif';    'Bloque';    ';    switch (period';      case 'Aujourd\';        ';      case ';        ';      case ';        ';      case ';        ';      case ';        ';  /// ðŸŽ¨ Obtenir la couleur selon le niveau d';      case 'critique';      case ';        return const Color(0xFFEF4444';      case 'modere';      case 'moderate';      case ';        return const Color(0xFFF59E0B';      case 'ok';      case ';        return const Color(0xFF10B981';      case ';        return const Color(0xFF6B7280';  /// ðŸš¨ Ã‰valuer le niveau d';      return ';    if (blockedUsers >= 2 || failedLogins >= 5 || failedEmails >= 2 || sensitiveActions >= 5';      return 'modere';    return ';    if (percentage.isNaN || percentage.isInfinite') return '0%';    return '{percentage.toStringAsFixed(1')}%';      return '{(number / 1000000).toStringAsFixed(1')}M';      return '{(number / 1000).toStringAsFixed(1')}K';  static String formatDate(DateTime date';    return '{date.day.toString(').padLeft(2, '0')}/'{date.month.toString().padLeft(2, '0')}/'{date.year}';  static String formatDateTime(DateTime dateTime';    return '${formatDate(dateTime)} a {dateTime.hour.toString(').padLeft(2, '0')}:'{dateTime.minute.toString().padLeft(2, '0')}';      if (roleFilter != null && roleFilter != 'Tous';        final role = item['role'] as String? ?? ';        if (!role.toLowerCase().contains(roleFilter.toLowerCase()';      if (statusFilter != null && statusFilter != 'Tous';        final status = item['status'] as String? ?? ';        if (!status.toLowerCase().contains(statusFilter.toLowerCase()';      if (companyFilter != null && companyFilter != 'Toutes';        final company = item['compagnie'] as String? ?? ';        if (company != companyFilter';      if (agencyFilter != null && agencyFilter != 'Toutes';        final agency = item['agence'] as String? ?? ';      if (dateRange != null';        final createdAt = item[';  static Map<String, dynamic> generateFilteredStats(List<Map<String, dynamic>> filteredData';      'total';      'byRole';      'byStatus';      'byCompany';      ';    for (final item in filteredData';      final role = item['role'] as String? ?? 'Inconnu';      stats['byRole'][role] = (stats['byRole][role] ?? 0';      final status = item['status'] as String? ?? 'Inconnu';      stats['byStatus'][status] = (stats['byStatus][status] ?? 0';      final company = item['compagnie'] as String? ?? 'Aucune';      stats['byCompany'][company] = (stats['byCompany][company] ?? 0';      final agency = item['agence'] as String? ?? 'Aucune';      stats['byAgency'][agency] = (stats['byAgency][agency] ?? 0';  /// ðŸŽ¨ Obtenir l';      case 'users';      case 'utilisateurs';      case 'companies';      case 'compagnies';      case 'agencies';      case 'agences';      case 'actions';      case 'emails';      case 'security';      case 'securite';      case 'growth';      case 'croissance';      case 'retention';      case 'retention';  }';    final blockedUsers = stats[';    if (blockedUsers > 0';        'type': 'blocked_users';        'title': 'Comptes Bloques';        'message': 'blockedUsers compte(s) bloque(s')';        'level': blockedUsers >= 5 ? 'critique' : 'modere';        'icon';        ';      }';    final sensitiveActions = securityStats[';    if (sensitiveActions >= 5';        'type': 'sensitive_actions';        'title': 'Activite Sensible';        'message': 'sensitiveActions action(s) sensible(s') en 24h';        'level': sensitiveActions >= 10 ? 'critique' : 'modere';        'icon';        ';      }';    final failedEmails = stats[';    if (failedEmails > 0';        'type': 'failed_emails';        'title': 'Emails Ã‰choues';        'message': 'failedEmails email(s) echoue(s') en 24h';        'level': failedEmails >= 5 ? 'critique' : 'modere';        'icon';        ';