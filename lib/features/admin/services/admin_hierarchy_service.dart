import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';import '../../../core/models/admin_hierarchy_model.dart';/// üîß Service pour g√©rer la hi√©rarchie d';  /// üèóÔ∏è Initialiser la hi√©rarchie d';      debugPrint('[AdminHierarchy] üèóÔ∏è Initialisation de la hi√©rarchie d\'admins...';      // 3. Admins d';      debugPrint('[AdminHierarchy] ‚úÖ Hi√©rarchie d\'admins initialis√©e avec succ√®s';      debugPrint('[AdminHierarchy] ‚ùå Erreur initialisation: $e';      id: 'super_admin_001';      email: 'constat.tunisie.app@gmail.com';      nom: 'Admin';      prenom: 'Super';      telephone: '+216 70 000 000';        'demandesTraitees';        'demandesApprouvees';        'demandesRefusees';        .collection('admins_hierarchy';        'id': 'admin_star_001';        'email': 'admin@star.tn';        'nom': 'Ben Ahmed';        'prenom': 'Mohamed';        'telephone': '+216 71 123 456';        'compagnieId': 'STAR';        'compagnieNom': 'STAR Assurances';        'id': 'admin_gat_001';        'email': 'admin@gat.tn';        'nom': 'Trabelsi';        'prenom': 'Fatma';        'telephone': '+216 71 234 567';        'compagnieId': 'GAT';        'compagnieNom': 'GAT Assurances';        'id': 'admin_bh_001';        'email': 'admin@bh.tn';        'nom': 'Khelifi';        'prenom': 'Ahmed';        'telephone': '+216 71 345 678';        'compagnieId': 'BH';        'compagnieNom': 'BH Assurance';        'id': 'admin_maghrebia_001';        'email': 'admin@maghrebia.tn';        'nom': 'Sassi';        'prenom': 'Leila';        'telephone': '+216 71 456 789';        'compagnieId': 'MAGHREBIA';        'compagnieNom': 'Maghrebia Assurances';        id: adminData['id';        email: adminData['email';        nom: adminData['nom';        prenom: adminData['prenom';        telephone: adminData['telephone';        compagnieId: adminData['compagnieId';          'demandesTraitees';          'demandesApprouvees';          'demandesRefusees';          .collection('admins_hierarchy';  /// üè™ Cr√©er les Admins d';        'id': 'admin_star_tunis_001';        'email': 'admin.tunis@star.tn';        'nom': 'Bouaziz';        'prenom': 'Sami';        'telephone': '+216 71 111 111';        'compagnieId': 'STAR';        'agenceId': 'STAR_TUNIS_CENTRE';        'agenceNom': 'STAR Tunis Centre';        'id': 'admin_gat_sousse_001';        'email': 'admin.sousse@gat.tn';        'nom': 'Mejri';        'prenom': 'Nadia';        'telephone': '+216 73 222 222';        'compagnieId': 'GAT';        'agenceId': 'GAT_SOUSSE';        'agenceNom': 'GAT Sousse';        id: adminData['id';        email: adminData['email';        nom: adminData['nom';        prenom: adminData['prenom';        telephone: adminData['telephone';        compagnieId: adminData['compagnieId';        agenceId: adminData['agenceId';          'demandesTraitees';          'demandesApprouvees';          'demandesRefusees';          .collection('admins_hierarchy';        'id': 'admin_region_nord_001';        'email': 'admin.nord@constat.tn';        'nom': 'Hamdi';        'prenom': 'Karim';        'telephone': '+216 70 111 111';        'gouvernorats': ['Tunis', 'Ariana', 'Ben Arous', 'Manouba', 'Bizerte';        'region': 'Nord';        'id': 'admin_region_centre_001';        'email': 'admin.centre@constat.tn';        'nom': 'Gharbi';        'prenom': 'Amina';        'telephone': '+216 70 222 222';        'gouvernorats': ['Sousse', 'Monastir', 'Mahdia', 'Sfax', 'Kairouan';        'region': 'Centre';        'id': 'admin_region_sud_001';        'email': 'admin.sud@constat.tn';        'nom': 'Jebali';        'prenom': 'Omar';        'telephone': '+216 70 333 333';        'gouvernorats': ['Gab√®s', 'M√©denine', 'Tataouine', 'Gafsa', 'Tozeur', 'K√©bili';        'region': 'Sud';        id: adminData['id';        email: adminData['email';        nom: adminData['nom';        prenom: adminData['prenom';        telephone: adminData['telephone';        gouvernoratsGeres: List<String>.from(adminData['gouvernorats';          'demandesTraitees';          'demandesApprouvees';          'demandesRefusees';          .collection('admins_hierarchy';          .collection('admins_hierarchy';          .where('email';          .where('actif';      debugPrint('[AdminHierarchy] ‚ùå Erreur r√©cup√©ration admin: $e';  /// üìä Obtenir les statistiques d';          .collection('admins_hierarchy';        return data['statistiques';      debugPrint('[AdminHierarchy] ‚ùå Erreur statistiques: $e';  /// üîÑ Mettre √† jour les statistiques d';      await _firestore.collection('admins_hierarchy';        'statistiques.demandesTraitees';        'statistiques.demandes${action == 'approuvee' ? 'Approuvees' : 'Refusees'}';        'derniereConnexion';      debugPrint('[AdminHierarchy] ‚ùå Erreur mise √† jour statistiques: $e';      Query query = _firestore.collection('demandes_inscription';      // Filtrer selon le type d';          query = query.where('compagnie';              .where('compagnie';              .where('agence';          query = query.where('gouvernorat';      if (filtreStatut != null && filtreStatut != 'toutes';        query = query.where('statut';      final snapshot = await query.orderBy('dateCreation';      debugPrint('[AdminHierarchy] ‚ùå Erreur r√©cup√©ration demandes: $e';      final adminsSnapshot = await _firestore.collection('admins_hierarchy';      debugPrint('[AdminHierarchy] üßπ Donn√©es de test nettoy√©es';      debugPrint('[AdminHierarchy] ‚ùå Erreur nettoyage: $e';  /// üìà Obtenir le tableau de bord d';      final enAttente = demandes.where((d) => d.statut == 'en_attente';      final enCours = demandes.where((d) => d.statut == 'en_cours_traitement';      final approuvees = demandes.where((d) => d.statut == 'approuvee';      final refusees = demandes.where((d) => d.statut == 'refusee';        'totalDemandes';        'enAttente';        'enCours';        'approuvees';        'refusees';        'tauxApprobation';      debugPrint('[AdminHierarchy] ‚ùå Erreur tableau de bord: $e';