import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/material.dart';import '../../../core/services/robust_firestore_service.dart';import ';  }';    debugPrint('[ADMIN_CREATION] üöÄ CR√âATION ROBUSTE - Tentative Firestore...';      // Essayer d';      if (result['success] == true';        debugPrint('[ADMIN_CREATION] ‚úÖ Creation Firestore reussie !';        throw Exception(result[';    } catch (e';      debugPrint('[ADMIN_CREATION] ‚ö†Ô∏è Firestore echoue:  + e.toString()';      debugPrint(';      ';      if (offlineResult['success] == true';        debugPrint('[ADMIN_CREATION] ‚úÖ Creation HORS LIGNE reussie !';        debugPrint('[ADMIN_CREATION] üîë Mot de passe: '{offlineResult['temporaryPassword']}';        // Ajouter un indicateur que c';        offlineResult['isOfflineCreated';        offlineResult['firestoreUnavailable';        throw Exception('Impossible de creer le compte m√™me hors ligne: '{offlineResult['error';    final timestamp = DateTime.now(';    return 'Admin';  }';      debugPrint('[ADMIN_CREATION] üè¢ Creation Admin Compagnie legitime...';      debugPrint('[ADMIN_CREATION]   - Email: 'email';      debugPrint('[ADMIN_CREATION]   - Compagnie: $compagnieNom (compagnieId')';      if (currentUser == null';        // Bypass pour systeme Super Admin (pas d';        debugPrint('[ADMIN_CREATION] üîì BYPASS Super Admin systeme - Aucun utilisateur connecte';            .collection(';        if (currentUserDoc.exists && currentUserDoc.data(')!['role'] == 'super_admin';          debugPrint('[ADMIN_CREATION] ‚ùå Utilisateur non autorise';            'success';            'error': ';      if (!isSuperAdminAuthorized';          'success';          'error': 'Autorisation Super Admin requise';        collection: ';      ';      if (!compagnieResult['success]';          'success';          'error': 'Impossible de verifier la compagnie: '{compagnieResult['error']}';      if (!compagnieResult['exists]';          'success';          'error': 'Compagnie non trouvee: ';      // 3. Generer un UID unique pour le compte admin (sans Firebase Auth';      final adminUid = 'admin_${DateTime.now().millisecondsSinceEpoch}_{email.hashCode.abs(')}';      debugPrint('[ADMIN_CREATION] üÜî UID Admin genere: 'adminUid';        'email';        'nom';        'prenom';        'role': 'admin_compagnie';        'status': 'actif';        'compagnieId';        'compagnieNom';        'phone';        'address';        'temporaryPassword': password, // Stocke temporairement pour l';        'passwordChangeRequired';        'accountType': 'admin_system, // Compte admin systeme (pas Firebase Auth';        'created_at: FieldValue.serverTimestamp(';        'updated_at: FieldValue.serverTimestamp(';        'created_by': 'super_admin';        'created_by_uid': currentUser?.uid ?? 'system_super_admin';        'created_by_email': currentUser?.email ?? 'constat.tunisie.app@gmail.com';        'isFakeData';        'isLegitimate';        'accessLevel': 'production';        collection: ';      ';      if (!writeResult['success]';        throw Exception('Impossible de creer le compte apres '{writeResult['attempts']} tentatives: '{writeResult['error']}';      debugPrint('[ADMIN_CREATION] ‚úÖ Compte cree avec succes apres '{writeResult['attempts]} tentative(s')';      debugPrint('[ADMIN_CREATION] ‚úÖ Admin Compagnie legitime cree avec succes';        'success';        'uid';        'email';        'compagnieId';        ';    } catch (e';      debugPrint('[ADMIN_CREATION] ‚ùå Erreur creation:  + e.toString()';        'success';        'error': 'Erreur systeme: ';  }';      debugPrint(';      if (currentUser == null';        // Bypass pour systeme Super Admin (pas d';        debugPrint('[ADMIN_CREATION] üîì BYPASS Super Admin systeme - Admin Agence';            .collection(';        if (currentUserDoc.exists && currentUserDoc.data(')!['role'] == 'super_admin';            'success';            'error': ';      if (!isSuperAdminAuthorized';          'success';          'error': 'Autorisation Super Admin requise';      // 2. Verifier que l';          .collection(';      if (!agenceDoc.exists';          'success';          'error': 'Agence non trouvee: ';      // 3. Generer un UID unique pour le compte admin agence (sans Firebase Auth';      final adminUid = 'admin_agence_${DateTime.now().millisecondsSinceEpoch}_{email.hashCode.abs(')}';      debugPrint('[ADMIN_CREATION] üÜî UID Admin Agence genere: 'adminUid';        'email';        'nom';        'prenom';        'role': 'admin_agence';        'status': 'actif';        'compagnieId';        'agenceId';        'phone';        'address';        'temporaryPassword': password, // Stocke temporairement pour l';        'passwordChangeRequired';        'accountType': 'admin_system, // Compte admin systeme (pas Firebase Auth';        'created_at: FieldValue.serverTimestamp(';        'updated_at: FieldValue.serverTimestamp(';        'created_by': 'super_admin';        'created_by_uid': currentUser?.uid ?? 'system_super_admin';        'created_by_email': currentUser?.email ?? 'constat.tunisie.app@gmail.com';        'isFakeData';        'isLegitimate';        'accessLevel': 'production';        collection: ';      ';      if (!writeResult['success]';        throw Exception('Impossible de creer le compte Admin Agence apres '{writeResult['attempts']} tentatives: '{writeResult['error']}';      debugPrint('[ADMIN_CREATION] ‚úÖ Admin Agence cree avec succes apres '{writeResult['attempts]} tentative(s')';        'success';        'uid';        'email';        'agenceId';        ';    } catch (e';      debugPrint('[ADMIN_CREATION] ‚ùå Erreur creation Admin Agence:  + e.toString()';        'success';        'error': 'Erreur systeme: ';  }';      debugPrint('[ADMIN_CREATION] ‚úÖ Approbation demande professionnelle: ';      if (currentUser == null';          'success';          'error': 'Aucun utilisateur connecte';          .collection(';      if (!currentUserDoc.exists || currentUserDoc.data(')!['role'] != 'super_admin';          'success';          'error': 'Seul le Super Admin peut approuver les demandes';          .collection(';      if (!requestDoc.exists';          'success';          'error': ';      final requestData = requestDoc.data(';      final email = requestData['email';      final password = requestData['password'] as String? ?? ';      } catch (authError';          'success';          'error': 'Erreur creation compte: {authError.toString(')}';        'email';        'nom': requestData['nom';        'prenom': requestData['prenom';        'role': requestData['role';        'status': 'actif';        'compagnieId';        'agenceId';        'phone': requestData['phone';        'address': requestData['address';        'created_at: FieldValue.serverTimestamp(';        'updated_at: FieldValue.serverTimestamp(';        'created_by': 'professional_request_approval';        'created_by_uid';        'created_by_email';        'approved_request_id';        'isFakeData';        'isLegitimate';        'accessLevel': 'production';          .collection(';          .set(userData';        'status': 'approuvee';        'approved_at: FieldValue.serverTimestamp(';        'approved_by';        ';      }';      debugPrint('[ADMIN_CREATION] ‚úÖ Demande approuvee et compte cree';        'success';        'uid';        'email';        ';    } catch (e';      debugPrint('[ADMIN_CREATION] ‚ùå Erreur approbation:  + e.toString()';        'success';        'error': 'Erreur systeme: ';