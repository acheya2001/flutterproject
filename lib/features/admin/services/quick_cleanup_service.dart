import 'package:cloud_firestore/cloud_firestore.dart';import ';  static Future<Map<String, dynamic>> quickCleanTestData(';      debugPrint(';      final usersDeleted = await _quickCleanUsers(';      results[';      final compagniesDeleted = await _quickCleanCompagnies(';      results[';      final agencesDeleted = await _quickCleanAgences(';      results['agences';      debugPrint('[QUICK_CLEANUP] ✅ Nettoyage rapide termine';      debugPrint('[QUICK_CLEANUP] 📊 Total supprime: 'totalDeleted documents';        'success';        'totalDeleted';        'details';        'message': ';    } catch (e';      debugPrint('[QUICK_CLEANUP] ❌ Erreur:  + e.toString()';        'success';        'error: e.toString(';        'message': ';  static Future<int> _quickCleanUsers(';      debugPrint('[QUICK_CLEANUP] 🧹 Nettoyage rapide users...';          .collection('users';          .where(';        final data = doc.data(';        debugPrint('[QUICK_CLEANUP] 🗑️ Suppression user: ${doc.id} ('{data['email]}')';      debugPrint('[QUICK_CLEANUP] ✅ Users supprimes: ';    } catch (e';      debugPrint(';  static Future<int> _quickCleanCompagnies(';      debugPrint('[QUICK_CLEANUP] 🧹 Nettoyage rapide compagnies...';          .collection('compagnies_assurance';          .where(';        final data = doc.data(';        debugPrint('[QUICK_CLEANUP] 🗑️ Suppression compagnie: ${doc.id} ('{data['nom]}')';      debugPrint('[QUICK_CLEANUP] ✅ Compagnies supprimees: ';    } catch (e';      debugPrint(';  static Future<int> _quickCleanAgences(';      debugPrint('[QUICK_CLEANUP] 🧹 Nettoyage rapide agences...';          .collection('agences_assurance';          .where(';        final data = doc.data(';        debugPrint('[QUICK_CLEANUP] 🗑️ Suppression agence: ${doc.id} ('{data['nom]}')';      debugPrint('[QUICK_CLEANUP] ✅ Agences supprimees: ';    } catch (e';      debugPrint(';  static Future<Map<String, int>> countTestData(';      debugPrint('[QUICK_CLEANUP] 🔍 Comptage des donnees de test...';          .collection('users';          .where(';          .get(';      results['users';          .collection('compagnies_assurance';          .where(';          .get(';      results['compagnies';          .collection('agences_assurance';          .where(';          .get(';      results['agences';      debugPrint('[QUICK_CLEANUP] 📊 Donnees de test trouvees: ';    } catch (e';      debugPrint(';  static Future<int> cleanDeletedUsers(';      debugPrint('[QUICK_CLEANUP] 🧹 Nettoyage utilisateurs supprimes...';          .collection('users';          .where('status', isEqualTo: ';        final data = doc.data(';        debugPrint('[QUICK_CLEANUP] 🗑️ Suppression utilisateur supprime: "{doc.id} ('{data['email]}')';      debugPrint('[QUICK_CLEANUP] ✅ Utilisateurs supprimes nettoyes: ';    } catch (e';      debugPrint(';  static Future<bool> deleteUserByEmail(String email';      debugPrint('[QUICK_CLEANUP] 🎯 Suppression utilisateur: 'email';          .collection('users';          .where(';      if (snapshot.docs.isEmpty';        debugPrint('[QUICK_CLEANUP] ❌ Utilisateur non trouve: ';        await doc.reference.delete(';        debugPrint('[QUICK_CLEANUP] ✅ Utilisateur supprime: ';    } catch (e';      debugPrint(';  static Future<bool> deleteCompagnieByName(String nom';      debugPrint('[QUICK_CLEANUP] 🎯 Suppression compagnie: 'nom';          .collection('compagnies_assurance';          .where(';      if (snapshot.docs.isEmpty';        debugPrint('[QUICK_CLEANUP] ❌ Compagnie non trouvee: ';        await doc.reference.delete(';        debugPrint('[QUICK_CLEANUP] ✅ Compagnie supprimee: ';    } catch (e';      debugPrint('[QUICK_CLEANUP] ❌ Erreur suppression: ';