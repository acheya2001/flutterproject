import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/material.dart';      debugPrint('[DASHBOARD_DATA] 📊 Récupération des statistiques...';        _countDocuments('users';        _countDocuments('agents_assurance';        _countDocuments('experts';        _countDocuments('conducteurs';        _countDocuments('compagnies_assurance';        _countDocuments('agences';        _countDocuments('constats';        _countDocuments('professional_account_requests';        'total_users';        'total_agents';        'total_experts';        'total_conducteurs';        'total_companies';        'total_agencies';        'total_claims';        'pending_requests';      debugPrint('[DASHBOARD_DATA] ✅ Statistiques récupérées: $stats';      debugPrint('[DASHBOARD_DATA] ❌ Erreur récupération stats: $e';        'total_users';        'total_agents';        'total_experts';        'total_conducteurs';        'total_companies';        'total_agencies';        'total_claims';        'pending_requests';      debugPrint('[DASHBOARD_DATA] ❌ Erreur comptage $collection: $e';      debugPrint('[DASHBOARD_DATA] 📊 Collection $collection: $count documents';      debugPrint('[DASHBOARD_DATA] ❌ Erreur comptage $collection: $e';      'total_users';      'total_agents';      'total_experts';      'total_conducteurs';      'total_companies';      'total_agencies';      'total_claims';      'pending_requests';  /// 🕒 Obtenir l';      debugPrint('[DASHBOARD_DATA] 🕒 Récupération activité récente...';          .collection('professional_account_requests';          .orderBy('createdAt';          'type': 'request';          'icon';          'color';          'title': 'Nouvelle demande ${data['role'] ?? 'professionnel'}';          'subtitle': '${data['firstName']} ${data['lastName']} - ${data['companyName'] ?? 'N/A'}';          'time': _formatTime(data['createdAt';          'timestamp': data['createdAt';          .collection('constats';          .orderBy('dateCreation';          'type': 'claim';          'icon';          'color';          'title': 'Nouveau sinistre déclaré';          'subtitle': 'Réf: ${doc.id.substring(0, 8)} - ${data['lieu'] ?? 'Lieu non spécifié'}';          'time': _formatTime(data['dateCreation';          'timestamp': data['dateCreation';          .collection('agences';          .orderBy('createdAt';          'type': 'agency';          'icon';          'color';          'title': 'Nouvelle agence créée';          'subtitle': '${data['nom']} - ${data['ville'] ?? 'N/A'}';          'time': _formatTime(data['createdAt';          'timestamp': data['createdAt';        final aTime = a['timestamp';        final bTime = b['timestamp';      debugPrint('[DASHBOARD_DATA] ✅ ${recentActivities.length} activités récupérées';      debugPrint('[DASHBOARD_DATA] ❌ Erreur récupération activité: $e';      if (timestamp == null) return 'Date inconnue';        return 'Date invalide';        return 'À l\'instant';        return 'Il y a ${difference.inMinutes} min';        return 'Il y a ${difference.inHours}h';        return 'Il y a ${difference.inDays} jour${difference.inDays > 1 ? 's' : ''}';        return 'Il y a ${(difference.inDays / 7).floor()} semaine${(difference.inDays / 7).floor() > 1 ? 's' : ''}';      debugPrint('[DASHBOARD_DATA] ❌ Erreur formatage temps: $e';      return 'Date inconnue';      debugPrint('[DASHBOARD_DATA] 📊 Récupération statistiques détaillées...';          .collection('professional_account_requests';          .where('createdAt';          .collection('constats';          .where('dateCreation';          .collection('professional_account_requests';          .where('createdAt';          .collection('constats';          .where('dateCreation';        'weekly';          'requests';          'claims';        'monthly';          'requests';          'claims';      debugPrint('[DASHBOARD_DATA] ✅ Statistiques détaillées: $detailedStats';      debugPrint('[DASHBOARD_DATA] ❌ Erreur stats détaillées: $e';        'weekly': {'requests': 0, 'claims';        'monthly': {'requests': 0, 'claims';  /// 🔄 Stream de l';