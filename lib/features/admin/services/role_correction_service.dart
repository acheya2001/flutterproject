import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';      if (currentUser == null';          'success';          'error': 'Aucun utilisateur connecte';      debugPrint('[ROLE_CORRECTION] üîß Promotion utilisateur actuel en Super Admin...';      debugPrint('[ROLE_CORRECTION]   - UID: '{currentUser.uid}';      debugPrint('[ROLE_CORRECTION]   - Email: '{currentUser.email}';          .collection(';      if (!userDoc.exists';        // Creer le document s'il n';            .collection(';            .doc(currentUser.uid';          'email';          'role': 'super_admin';          'status': 'actif';          'nom': 'Super';          'prenom': 'Admin';          'phone': '+216 70 000 000';          'created_at: FieldValue.serverTimestamp(';          'updated_at: FieldValue.serverTimestamp(';          'created_by': 'system_correction';          'isLegitimate';          'accessLevel': 'production';          'originalRole': 'admin_compagnie';          'promotedAt: FieldValue.serverTimestamp(';          'promotionReason': 'Correction temporaire pour creation d\';        }';        debugPrint(';        final currentData = userDoc.data(';            .collection(';            .doc(currentUser.uid';          'role': 'super_admin';          'updated_at: FieldValue.serverTimestamp(';          'originalRole': currentData['role';          'promotedAt: FieldValue.serverTimestamp(';          'promotionReason': 'Correction temporaire pour creation d\';        }';        debugPrint('[ROLE_CORRECTION] ‚úÖ R√¥le mis a jour: '{currentData['role';      await Future.delayed(const Duration(milliseconds: 1000)';          .collection(';      if (updatedDoc.exists && updatedDoc.data(')!['role'] == 'super_admin';          'success';          'uid';          'email';          'originalRole: updatedDoc.data(')!['originalRole';          'newRole': 'super_admin';          'success';          'error': 'La modification du r√¥le n\';    } catch (e';      debugPrint('[ROLE_CORRECTION] ‚ùå Erreur promotion:  + e.toString()';        'success';        'error': 'Erreur systeme: 'e';      if (currentUser == null';          'success';          'error': 'Aucun utilisateur connecte';      debugPrint('[ROLE_CORRECTION] üîÑ Restauration r√¥le original...';          .collection(';      if (!userDoc.exists';          'success';          'error': ';      final userData = userDoc.data(';      final originalRole = userData[';      if (originalRole == null';          'success';          'error': 'Aucun r√¥le original trouve';          .collection(';          .doc(currentUser.uid';        'role';        'updated_at: FieldValue.serverTimestamp(';        'restoredAt: FieldValue.serverTimestamp(';        'restorationReason': ';      }';      debugPrint('[ROLE_CORRECTION] ‚úÖ R√¥le restaure: super_admin ‚Üí 'originalRole';        'success';        'uid';        'email';        ';    } catch (e';      debugPrint('[ROLE_CORRECTION] ‚ùå Erreur restauration:  + e.toString()';        'success';        'error': 'Erreur systeme: 'e';      if (currentUser == null';          .collection(';      final userData = userDoc.data(';      return userData['role'] == 'super_admin';             userData['originalRole';             userData[';    } catch (e';      debugPrint(';      if (currentUser == null';          .collection(';      final userData = userDoc.data(';      if (userData['originalRole] == null';        'currentRole': userData['role';        'originalRole': userData['originalRole';        'promotedAt': userData['promotedAt';        'promotionReason': userData['promotionReason';        'isTemporarilyPromoted': userData['role'] == 'super_admin' && userData[';    } catch (e';      debugPrint(';      if (currentUser == null';          .collection(';          .doc(currentUser.uid';        'originalRole: FieldValue.delete(';        'promotedAt: FieldValue.delete(';        'promotionReason: FieldValue.delete(';        'restoredAt: FieldValue.delete(';        'restorationReason: FieldValue.delete(';        ';      }';      debugPrint(';    } catch (e';      debugPrint('[ROLE_CORRECTION] ‚ùå Erreur nettoyage: ';