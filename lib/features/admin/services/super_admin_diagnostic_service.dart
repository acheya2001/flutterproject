import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';  static Future<Map<String, dynamic>> fullDiagnostic(';      debugPrint('[SUPER_ADMIN_DIAGNOSTIC] üîç === DIAGNOSTIC COMPLET ===';        'timestamp: DateTime.now().toIso8601String(';        'firebase_auth';        'firestore_user';        'permissions';        ';      final authDiagnostic = await _diagnoseFirebaseAuth(';      result['firebase_auth';      if (authDiagnostic['user_uid] != null';          firestoreDiagnostic = await _diagnoseFirestoreUser(authDiagnostic['user_uid]';          result[';        } catch (e';          debugPrint('[SUPER_ADMIN_DIAGNOSTIC] ‚ùå Erreur Firestore:  + e.toString()';          result['firestore_user';            'document_exists';            'error': 'Erreur lecture Firestore: 'e';            authDiagnostic[';          ';          result[';        } catch (e';          debugPrint('[SUPER_ADMIN_DIAGNOSTIC] ‚ùå Erreur permissions:  + e.toString()';          result['permissions';            'can_create_admin_compagnie';            'can_create_admin_agence';            'can_access_super_admin_dashboard';            'issues': ['Erreur verification permissions: 'e';      result[';    } catch (e';      debugPrint('[SUPER_ADMIN_DIAGNOSTIC] ‚ùå Erreur diagnostic:  + e.toString()';        'error: e.toString(';        ';  static Future<Map<String, dynamic>> _diagnoseFirebaseAuth(';      'is_authenticated';      'user_uid';      'user_email';      'email_verified';      'creation_time: currentUser?.metadata.creationTime?.toIso8601String(';      'last_sign_in: currentUser?.metadata.lastSignInTime?.toIso8601String(';      'expected_email': 'constat.tunisie.app@gmail.com';      'email_matches': currentUser?.email == ';  static Future<Map<String, dynamic>> _diagnoseFirestoreUser(String uid';      final userDoc = await _firestore.collection(';      if (!userDoc.exists';          'document_exists';          'error': ';      final userData = Map<String, dynamic>.from(userDoc.data()!';        'document_exists';        'role': userData['role';        'email': userData['email';        'status': userData['status';        'created_at': userData['created_at]?.toString(';        'created_by': userData['created_by';        'is_super_admin_role': userData['role'] == 'super_admin';        'all_fields: userData.keys.toList(';        ';    } catch (e';        'document_exists';        'error': 'Erreur lecture Firestore: ';  ';      'can_create_admin_compagnie';      'can_create_admin_agence';      'can_access_super_admin_dashboard';      ';    if (firestoreData == null';      permissions['issues'].add('Donnees Firestore non disponibles';    if (firestoreData['document_exists';        firestoreData['role'] == 'super_admin';      permissions['can_create_admin_compagnie';      permissions['can_create_admin_agence';      permissions['can_access_super_admin_dashboard';      if (firestoreData['document_exists] != true';        (permissions['issues] as List<String>').add('Document Firestore manquant';      if (firestoreData['role'] != 'super_admin';        (permissions['issues] as List<String>').add('R√¥le incorrect: '{firestoreData['role]} (attendu: super_admin')';    final auth = diagnostic['firebase_auth';    final firestore = diagnostic['firestore_user';    final permissions = diagnostic['permissions';    if (auth['is_authenticated] != true';      recommendations.add('üîê Se connecter avec le compte Super Admin (constat.tunisie.app@gmail.com)';    if (auth['email_matches] != true';      recommendations.add('üìß Utiliser l\'email Super Admin correct: constat.tunisie.app@gmail.com';    if (firestore['document_exists] != true';      recommendations.add('üìÑ Creer le document Firestore pour le Super Admin';      recommendations.add('üîß Executer: await createSuperAdminFirestoreDocument()';    if (firestore['is_super_admin_role] != true';      recommendations.add('üè∑Ô∏è Corriger le r√¥le dans Firestore: role = "super_admin"';    if (permissions['can_create_admin_compagnie] != true';      recommendations.add(';  static void _printDiagnosticReport(Map<String, dynamic> diagnostic';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC] üìä === RAPPORT DE DIAGNOSTIC ===';    final auth = diagnostic['firebase_auth';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC] üîê Firebase Auth:';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - Connecte: '{auth['is_authenticated'] ?? false}';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - UID: '{auth['user_uid'] ?? 'N/A'}';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - Email: '{auth['user_email'] ?? 'N/A'}';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - Email correct: '{auth['email_matches'] ?? false}';    final firestore = diagnostic['firestore_user';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC] üìÑ Firestore:';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - Document existe: '{firestore['document_exists'] ?? false}';    if (firestore['document_exists] == true';      debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - R√¥le: '{firestore['role'] ?? 'N/A'}';      debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - Status: '{firestore['status'] ?? 'N/A'}';      debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - Super Admin: '{firestore['is_super_admin_role'] ?? false}';    } else if (firestore['error] != null';      debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - Erreur: '{firestore['error']}';    final permissions = diagnostic['permissions';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC] üîë Permissions:';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - Peut creer admin: '{permissions['can_create_admin_compagnie'] ?? false}';    debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   - Problemes: '{permissions['issues'] ?? []}';    final recommendations = diagnostic[';    if (recommendations.isNotEmpty';      debugPrint(';      for (final rec in recommendations';        debugPrint('[SUPER_ADMIN_DIAGNOSTIC]   'rec';    debugPrint(';      if (currentUser == null';        debugPrint('[SUPER_ADMIN_DIAGNOSTIC] ‚ùå Aucun utilisateur connecte';      if (currentUser.email != 'constat.tunisie.app@gmail.com';        debugPrint('[SUPER_ADMIN_DIAGNOSTIC] ‚ùå Email incorrect: '{currentUser.email}';      debugPrint('[SUPER_ADMIN_DIAGNOSTIC] üîß Creation document Firestore...';        'email';        'role': 'super_admin';        'status': 'actif';        'nom': 'Super';        'prenom': 'Admin';        'phone': '+216 70 000 000';        'created_at: FieldValue.serverTimestamp(';        'updated_at: FieldValue.serverTimestamp(';        'created_by': 'system';        'isLegitimate';        'accessLevel': 'production';          .collection(';          .set(userData';      debugPrint(';    } catch (e';      debugPrint(';      if (currentUser == null';          .collection(';      return userDoc.exists && userDoc.data(')!['role'] == ';