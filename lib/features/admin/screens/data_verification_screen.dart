import 'package:flutter/material.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../../../core/utils/constants.dart';import '../widgets/firebase_console_widget.dart';        title: const Text('🔍 Vérification des Données';  /// ❌ État d';              'Erreur de chargement';              label: const Text('Réessayer';        sum + (stat is Map && stat.containsKey('count') ? stat['count';                        'Base de Données Firebase';                        'Dernière vérification: ${DateTime.now().toString().substring(0, 19)}';                    '$totalRecords enregistrements';              '✅ Base de données opérationnelle avec ${_stats.length} collections actives';          '📊 Statistiques par Collection';    final count = stats['count';    final lastUpdated = stats['lastUpdated';    final samples = stats['samples';      case 'vehicules_assures';        description = 'Véhicules avec contrats d\'assurance';      case 'constats';        description = 'Déclarations d\'accident';      case 'assureurs_compagnies';        description = 'Compagnies d\'assurance';      case 'analytics';        description = 'Données de Business Intelligence';        description = 'Collection de données';                'Dernière MAJ: ${lastUpdated.toString().substring(0, 19)}';                '$count';            const Text('docs';          '🔍 Échantillons de Données';        ..._stats.entries.where((e) => e.value is Map && e.value['samples';            .map((entry) => _buildSampleCard(entry.key, entry.value['samples';        title: Text('Échantillon: $collection';        subtitle: Text('${samples.length} exemples disponibles';                  'Premier enregistrement:';                      fontFamily: 'monospace';          '🧪 Actions de Test';                label: const Text('Tester Requêtes';                label: const Text('Exporter Échantillon';        'assureurs_compagnies';            'count';            'lastUpdated';            'samples';              'id';          stats[collection]['count';            'count';            'error';            'lastUpdated';            'samples';  /// 📋 Afficher les détails d';        title: Text('📊 Détails: $collection';              _buildDetailRow('Nombre de documents', '${stats['count']}';              _buildDetailRow('Dernière vérification';                  stats['lastUpdated']?.toString().substring(0, 19) ?? 'N/A';              _buildDetailRow('Échantillons disponibles';                  '${(stats['samples'] as List?)?.length ?? 0}';              if (stats['error';                _buildDetailRow('Erreur', stats['error';            child: const Text('Fermer';              '$label:';      if (key != 'id';        buffer.writeln('$key: ${_formatValue(value)}';      return '{...}';      return '[${value.length} items]';            Text('Test des requêtes en cours...';          .where('statut', isEqualTo: 'actif';          .orderBy('created_at';          title: const Text('✅ Tests Réussis';            'Toutes les requêtes fonctionnent correctement !\n\n';            '• Véhicules actifs: ${vehiculesActifs.size} trouvé(s)\n';            '• Constats récents: ${constatsRecents.size} trouvé(s)\n';            '• Règles de sécurité: OK\n';            '• Index Firestore: OK';              child: const Text('Parfait !';          title: const Text('❌ Erreur de Test';          content: Text('Erreur lors du test des requêtes:\n\n$e';              child: const Text('Fermer';        content: Text('📤 Fonctionnalité d\'export en développement';