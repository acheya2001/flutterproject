import 'package:flutter/material.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../../auth/services/notification_service.dart';import 'admin_demandes_screen.dart';import '../utils/create_test_demande.dart';import 'admin_hierarchy_setup_screen.dart';          .collection('professional_account_requests';          .where('status', isEqualTo: 'pending';      stats['Demandes en attente';      final users = await _firestore.collection('users';      stats['Total utilisateurs';        final userType = doc.data()['userType';          case 'conducteur';          case 'assureur';          case 'expert';      stats['Conducteurs';      stats['Assureurs';      stats['Experts';      final contracts = await _firestore.collection('contracts';      stats['Contrats';      final constats = await _firestore.collection('constats';      stats['Constats';      debugPrint('Erreur chargement stats: $e';        title: const Text('🎯 Administration';                Navigator.of(context).pushNamedAndRemoveUntil('/user-type-selection';                        'Tableau de Bord Admin';                    'Connecté en tant que: ${user?.email ?? "Admin"}';                      '✅ Connexion admin réussie ! Le système fonctionne parfaitement.';              'Actions Administrateur';                            title: 'Demandes d\'Inscription';                            title: 'Actualiser';                            title: 'Créer Test';                            title: 'Constats';                            title: 'Config Hiérarchie';  /// 🔘 Bouton d';      case 'Demandes en attente';      case 'Total utilisateurs';      case 'Conducteurs';      case 'Assureurs';      case 'Experts';      case 'Contrats';      case 'Constats';      case 'Demandes en attente';      case 'Total utilisateurs';      case 'Conducteurs';      case 'Assureurs';      case 'Experts';      case 'Contrats';      case 'Constats';          .collection('professional_account_requests';          .where('status', isEqualTo: 'pending';          title: const Text('📋 Demandes en attente';                ? const Center(child: Text('Aucune demande en attente';                        title: Text('${data['prenom']} ${data['nom']}';                        subtitle: Text('${data['userType']} - ${data['email']}';              child: const Text('Fermer';        SnackBar(content: Text('Erreur: $e';      print('🔍 DEBUG: Approbation demande $requestId...';          .collection('professional_account_requests';        'status': 'approved';        'reviewedAt';        'reviewedBy': 'admin';      print('✅ DEBUG: Statut mis à jour, envoi notification...';          approvedBy: 'admin';        print('✅ DEBUG: Notification envoyée';        print('❌ DEBUG: Erreur notification: $notifError';            content: Text('✅ Demande approuvée et email envoyé';      print('❌ DEBUG: Erreur approbation: $e';            content: Text('Erreur: $e';        title: const Text('Raison du rejet';            hintText: 'Expliquez pourquoi la demande est rejetée...';            child: const Text('Annuler';            child: const Text('Rejeter';      print('🔍 DEBUG: Rejet demande $requestId avec raison: $reason';          .collection('professional_account_requests';        'status': 'rejected';        'rejectionReason';        'reviewedAt';        'reviewedBy': 'admin';      print('✅ DEBUG: Statut mis à jour, envoi notification de rejet...';          rejectedBy: 'admin';        print('✅ DEBUG: Notification de rejet envoyée';        print('❌ DEBUG: Erreur notification rejet: $notifError';            content: Text('❌ Demande rejetée et email envoyé';      print('❌ DEBUG: Erreur rejet: $e';            content: Text('Erreur: $e';      const SnackBar(content: Text('🎯 Gestion utilisateurs - En développement';      const SnackBar(content: Text('🎯 Gestion constats - En développement';            content: Text('✅ Demandes de test créées ! Vérifiez l\'onglet "Demandes d\'Inscription"';            content: Text('❌ Erreur: $e';