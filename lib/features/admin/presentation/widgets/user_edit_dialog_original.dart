import 'package:flutter/material.dart';import '../../services/user_management_service_original.dart';/// ✏️ Dialog d';  final _formKey = GlobalKey<FormState>(';    {'value': 'super_admin', 'label': 'Super Admin';    {'value': 'admin_compagnie', 'label': 'Administrateur de Compagnie';    {'value': 'admin_agence', 'label': 'Administrateur d\'Agence';    {'value': 'agent_agence', 'label': 'Agent d\'Agence';    {'value': 'expert_auto', 'label': 'Expert Automobile';    {'value': 'conducteur', 'label': 'Conducteur';    {'value': 'actif', 'label': 'Actif';    {'value': 'en_attente', 'label': 'En attente';    {'value': 'desactive', 'label': 'Desactive';    {'value': 'supprime', 'label': ';  void _initializeControllers(';    _nomController = TextEditingController(text: widget.user['nom'] ?? ';    _prenomController = TextEditingController(text: widget.user['prenom'] ?? ';    _phoneController = TextEditingController(text: widget.user['phone'] ?? ';    _addressController = TextEditingController(text: widget.user['address'] ?? ';    _selectedRole = widget.user['role';    _selectedCompagnie = widget.user['compagnieId';    _selectedAgence = widget.user['agenceId';    _selectedStatus = widget.user['status'] ?? ';      if (_nomController.text.trim(') != (widget.user['nom'] ?? ')';        updates[';      if (_prenomController.text.trim(') != (widget.user['prenom'] ?? ')';        updates[';      if (_phoneController.text.trim(') != (widget.user['phone'] ?? ')';        updates[';      if (_addressController.text.trim(') != (widget.user['address'] ?? ')';        updates[';            ? _addressController.text.trim(';      if (_selectedRole != widget.user['role]';        updates['role';      if (_selectedCompagnie != widget.user['compagnieId]';        updates['compagnieId';      if (_selectedAgence != widget.user['agenceId]';        updates['agenceId';      if (_selectedStatus != widget.user['status]';        updates[';      if (updates.isNotEmpty';          uid: widget.user['uid'] ?? widget.user[';        ';        if (result[';          ScaffoldMessenger.of(context';              content: const Text(';          widget.onUserUpdated(')')';          throw Exception(result['error'] ?? ';        ScaffoldMessenger.of(context';            content: const Text(';      ScaffoldMessenger.of(context')')';          content: (e';        .where((agence) => agence[';                const SizedBox(height: 16';                          labelText: ';                          if (value == null || value.trim().isEmpty';                            return ';                    const SizedBox(width: 16';                          labelText: ';                          if (value == null || value.trim().isEmpty';                            return ';                const SizedBox(height: 16';                          labelText: ';                    const SizedBox(width: 16';                          labelText: ';                const SizedBox(height: 16';                          labelText: ';                        items: _roles.map((role';                          value: role['value';                          child: const Text(role[';                          setState((';                            if (value == ';                    const SizedBox(width: 16';                          labelText: ';                        items: _statuses.map((status';                          value: status['value';                          child: const Text(status[';                      onPressed: _isLoading ? null : () => Navigator.of(context).pop(';                      child: const Text(';                            ')')';                          : const Text(';')')