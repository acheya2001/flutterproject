import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../../../../core/theme/modern_theme.dart';import '../../services/password_management_service.dart';import '../../services/user_management_service.dart';    super.dispose(';  /// 📊 Charger l';      userId: widget.user['uid'] ?? widget.user[';      builder: (context';        title: const Text('Reinitialiser le mot de passe')')';        content: ({widget.user['displayName'] ?? widget.user['email']} ?\n\n';          'L\';            onPressed: () => Navigator.pop(context, false';            child: const Text(';            ')')';            child: const Text(';      setState(() => _isLoading = true')')';        userId: widget.user['uid'] ?? widget.user['id';        userEmail: widget.user['email';        adminId: 'super_admin', // TODO: Recuperer l';      if (mounted';        if (result['success]';          _showTemporaryPassword(result[';          _loadPasswordHistory('); // Recharger l';          _showErrorSnackBar(result[';            const SizedBox(width: 8';            const Text(';                      Clipboard.setData(ClipboardData(text: password)')')';                      _showSuccessSnackBar(';                    icon: const Icon(Icons.info';                    tooltip: ';            onPressed: () => Navigator.pop(context';            child: const Text(';              Clipboard.setData(ClipboardData(text: password)')')';              _showSuccessSnackBar(';            ';            child: const Text(';    ')')';  /// ❌ Afficher message d';    final status = widget.user['status'] ?? ';    switch (status';      case 'actif';      case 'en_attente';      case ';  Widget _buildRoleChip(';    final role = widget.user['role'] ?? ';    ';  /// 📑 Barre d';            text: ';            icon: const Icon(Icons.info';            text: ';            icon: const Icon(Icons.info';            text: ';  Widget _buildProfileTab(';            _buildInfoRow('Email', widget.user['email'] ?? 'Non defini';            _buildInfoRow('Telephone', widget.user['telephone'] ?? 'Non defini';            _buildInfoRow('CIN', widget.user['cin'] ?? 'Non defini';            _buildInfoRow('Rôle', widget.user['role'] ?? 'Non defini';            _buildInfoRow('Statut', widget.user['status'] ?? ';          const SizedBox(height: 24';          _buildInfoSection('Organisation';            _buildInfoRow('Compagnie', widget.user['compagnieNom'] ?? 'Non assignee';            _buildInfoRow('Agence', widget.user['agenceNom'] ?? 'Non assignee';            _buildInfoRow('ID Compagnie', widget.user['compagnieId'] ?? 'N/A';            _buildInfoRow('ID Agence', widget.user['agenceId'] ?? ';          const SizedBox(height: 24';          _buildInfoSection('Tracabilite';            _buildInfoRow('Origine', _getOriginLabel(widget.user['origine'] ?? 'inconnu)';            _buildInfoRow('Cree par', widget.user['createdBy'] ?? 'Systeme';            _buildInfoRow('Date de creation', _formatDate(widget.user['createdAt])';            _buildInfoRow('Derniere modification', _formatDate(widget.user['updatedAt])';            if (widget.user['requestId] != null';              _buildInfoRow('ID Demande', widget.user[';          ';          if (widget.user[';            const SizedBox(height: 24';            _buildInfoSection('Informations professionnelles';              _buildInfoRow('Annees d\'experience', ''{widget.user['experienceAnnees';  Widget _buildSecurityTab(';            _buildInfoRow('Compte actif', widget.user['isActive'] == true ? 'Oui' : 'Non';            _buildInfoRow('Compte bloque', widget.user['isLocked'] == true ? 'Oui' : 'Non';            if (widget.user['isLocked] == true';              _buildInfoRow('Raison du blocage', widget.user['lockReason'] ?? 'Non specifiee';              _buildInfoRow('Bloque le', _formatDate(widget.user['lockedAt])';              _buildInfoRow('Bloque par', widget.user['lockedBy'] ?? ';          const SizedBox(height: 24';          _buildInfoSection('Mot de passe';            _buildInfoRow('Doit changer le mot de passe';              widget.user['doitChangerMotDePasse'] == true ? 'Oui' : 'Non';            if (widget.user['motDePasseReinitialisePar] != null';              _buildInfoRow('Reinitialise par', widget.user['motDePasseReinitialisePar';              _buildInfoRow('Reinitialise le', _formatDate(widget.user[';                icon: const Icon(Icons.info';                tooltip: ';    ';  /// 📝 Section d';              icon: const Icon(Icons.info';              label: const Text(';            ')')';            if (widget.user[';                icon: const Icon(Icons.info';                label: const Text(';                icon: const Icon(Icons.info')')';                label: const Text(';    ')')';  /// 📊 Entree d';    final action = entry['action'] ?? ';    final timestamp = entry['timestamp';    final details = entry[';    switch (action';      case 'reset_password';        actionText = 'Mot de passe reinitialise';      case 'lock_account';        actionText = 'Compte bloque';      case 'unlock_account';        actionText = ';    setState(() => _isLoading = true';      userId: widget.user['uid'] ?? widget.user['id';      userEmail: widget.user['email';      adminId: 'super_admin', // TODO: Recuperer l';    if (mounted';      if (result['success]';        _showSuccessSnackBar(result[';        _loadPasswordHistory('); // Recharger l';        _showErrorSnackBar(result[';    setState(() => _isLoading = true';      userId: widget.user['uid'] ?? widget.user['id';      userEmail: widget.user['email';      adminId: 'super_admin', // TODO: Recuperer l';    if (mounted';      if (result['success]';        _showSuccessSnackBar(result[';        _loadPasswordHistory('); // Recharger l';        _showErrorSnackBar(result[';      builder: (context';        title: const Text('Bloquer le compte')')';            ({widget.user['displayName'] ?? widget.user['email';            const SizedBox(height: 16';                labelText: ';            onPressed: () => Navigator.pop(context';            child: const Text(';            ')')';            child: const Text(';            onPressed: () => Navigator.pop(context')')';            child: const Text(';              Navigator.pop(context')')';              // TODO: Ouvrir le dialog d';            child: const Text(';    if (date == null')')') return ';    } else if (date is DateTime';      return 'Format invalide';    return '{dateTime.day.toString(').padLeft(2, '0')}/';           '{dateTime.month.toString(').padLeft(2, '0')}/';           ''{dateTime.year} a ';           '{dateTime.hour.toString(').padLeft(2, '0')}:';           '{dateTime.minute.toString(').padLeft(2, '0')}';    switch (origine';      case 'creation_super_admin';        return 'Creation Super Admin';      case 'demande_professionnelle';        return 'Demande Professionnelle';      case 'import_manuel';        return 'Import Manuel';      case 'test';        return ';