import 'package:flutter/material.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import '../../providers/admin_providers.dart';import '../../models/admin_models.dart';import '../widgets/admin_stats_card.dart';import '../widgets/admin_data_table.dart';import '../widgets/admin_action_button.dart';import 'agents_management_screen.dart';    ';  /// ðŸ“± AppBar avec informations de l';        tabs: const [ text: ';          Tab(icon: const Icon(Icons.info'), text: ';          Tab(icon: const Icon(Icons.info'), text: ';          Tab(icon: const Icon(Icons.info'), text: ';                  data: (agentsStats';                    title: 'Mes Agents';                    value: agentsStats['totalAgents]?.toString(') ?? ';                  error: (_, __';                    title: 'Mes Agents';                    value: stats['users]?.toString(') ?? ';                ';                  title: 'Mes Contrats';                  value: stats['contracts]?.toString(') ?? ';                ';                  title: 'Mes Sinistres';                  value: stats['sinistres]?.toString(') ?? ';                  data: (agentsStats';                    title: 'Agents Actifs';                    value: agentsStats['agentsActifs]?.toString(') ?? ';            const SizedBox(height: 16';                  title: ';                ';                  title: ';                ';                  title: ';                ';                  title: ';      error: (error, stack') => (error';                  label: const Text(';            const SizedBox(height: 24')')';                  'NÂ° Contrat';                  'Conducteur';                  'Vehicule';                  'Type';                  'Montant';                  'Debut';                  'Fin';                  'Statut';                  ';                buildRow: (contract';                  contract.vehiculeId ?? 'N/A';                  '';                  _formatDate(contract.dateFin';                  _buildStatusChip(contract.isValid ? 'Valide' : ';      error: (error, stack') => (error';                  'NÂ° Sinistre';                  'Date';                  'Lieu';                  'Conducteur';                  'Expert';                  'Montant Estime';                  'Statut';                  ';                  _formatDate(sinistre.dateAccident';                  sinistre.expertId ?? 'Non assigne';                  sinistre.montantEstime != null ? ''{sinistre.montantEstime} DT' : ';      error: (error, stack') => (error';  String _formatDate(DateTime date';    return '${date.day}/${date.month}/';    switch (status.toLowerCase()';      case 'active';      case 'valide';      case ';        color = const Color(0xFF10B981';      case 'suspended';      case 'expire';      case ';        color = const Color(0xFFEF4444';      case 'pending';      case ';    ';  // Nouvelles methodes d';    ScaffoldMessenger.of(context';      SnackBar(content: ({contract.numeroContrat} - Ã€ implementer';    ScaffoldMessenger.of(context';      SnackBar(content: ({sinistre.numeroSinistre} - Ã€ implementer';    ScaffoldMessenger.of(context';