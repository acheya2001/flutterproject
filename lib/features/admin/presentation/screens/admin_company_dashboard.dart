import 'package:flutter/material.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import '../../providers/admin_providers.dart';import '../../models/admin_models.dart';import '../widgets/admin_stats_card.dart';import '../widgets/admin_data_table.dart';import ';        unselectedLabelColor: const Color(0xFF64748B';        tabs: const [ text: ';          Tab(icon: const Icon(Icons.info'), text: ';          Tab(icon: const Icon(Icons.info'), text: ';          Tab(icon: const Icon(Icons.info'), text: ';          Tab(icon: const Icon(Icons.info'), text: ';            const SizedBox(height: 24';                  title: 'Mes Agences';                  value: stats['agences]?.toString(') ?? ';                ';                  title: 'Mes Utilisateurs';                  value: stats['users]?.toString(') ?? ';                ';                  title: 'Mes Contrats';                  value: stats['contracts]?.toString(') ?? ';                ';                  title: 'Mes Sinistres';                  value: stats['sinistres]?.toString(') ?? ';            const SizedBox(height: 16';                  title: ';                ';                  title: ';                ';                  title: ';                ';                  title: ';      error: (error, stack') => (error';                  label: const Text(';            const SizedBox(height: 24')')';                  'Nom';                  'Code';                  'Ville';                  'Gouvernorat';                  'Responsable';                  'Telephone';                  ';                buildRow: (agence';                  agence.responsable ?? 'N/A';                  agence.telephone ?? ';      error: (error, stack') => (error';                  'Nom';                  'Email';                  'Rôle';                  'Agence';                  'Telephone';                  'Statut';                  ';                  _getRoleDisplayName(user.role';                  user.agenceId ?? ';      error: (error, stack') => (error';                  'N° Contrat';                  'Conducteur';                  'Agence';                  'Type';                  'Montant';                  'Validite';                  'Statut';                  ';                buildRow: (contract';                  '';                  _formatDate(contract.dateFin';                  _buildStatusChip(contract.isValid ? 'Valide' : ';      error: (error, stack') => (error';                  'N° Sinistre';                  'Date';                  'Lieu';                  'Conducteur';                  'Expert';                  'Statut';                  ';                  _formatDate(sinistre.dateAccident';                  sinistre.expertId ?? ';      error: (error, stack') => (error';  void _viewAgence(AgenceAssurance agence';    // TODO: Implementer la vue detaillee de l';    // TODO: Implementer l';  String _formatDate(DateTime date';    return '${date.day}/${date.month}/';    switch (role';      case 'admin_agence';        return 'Admin Agence';      case 'agent_agence';        return 'Agent';      case 'expert_auto';        return 'Expert Auto';      case 'conducteur';        return ';    switch (status.toLowerCase()';      case 'active';      case 'valide';      case ';        color = const Color(0xFF10B981';      case 'suspended';      case 'expire';      case ';        color = const Color(0xFFEF4444';      case 'pending';      case ';    ';  // Nouvelles methodes d';    ScaffoldMessenger.of(context';      SnackBar(content: ({user.fullName} - À implementer';    ScaffoldMessenger.of(context';      SnackBar(content: ({contract.numeroContrat} - À implementer';    ScaffoldMessenger.of(context';