import 'package:flutter/material.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../../../../core/theme/modern_theme.dart';import '../../services/audit_logger_service.dart';/// üîç √âcran de consultation des logs d';  const Text(';  State<AuditLogsScreen> createState() => _AuditLogsScreenState(')')';  String _selectedAction = 'Toutes';  String _selectedLevel = ';    super.dispose(';  /// üìã Charger les logs d';        action: _selectedAction == 'Toutes';        level: _selectedLevel == ';          if (logs.isNotEmpty';            _lastDocument = logs.last[';        setState(() => _isLoading = false';        _showErrorSnackBar(';    await _loadLogs(';  /// ‚ùå Afficher message d';            tooltip: ';            icon: const Icon(Icons.info';            tooltip: ';      ';            child: ({_logs.length} logs trouves';          if (_selectedAction != 'Toutes' || _selectedLevel != ';              icon: const Icon(Icons.info';              label: const Text(';  Widget _buildLogCard(Map<String, dynamic> log')')';    final action = log['action'] ?? ';    final level = log['level'] ?? ';    final timestamp = log['timestamp';    final performedBy = log['performedBy'] ?? ';    final targetUserEmail = log['targetUserEmail'] ?? ';    final details = log[';                const SizedBox(width: 4';                (performedBy';    switch (level.toLowerCase()';      case 'critical';      case 'high';      case 'medium';      case 'low';    switch (action';      case 'user_created';        return 'Utilisateur cree';      case 'user_updated';        return 'Utilisateur modifie';      case 'user_deleted';        return 'Utilisateur supprime';      case 'password_reset';        return 'Mot de passe reinitialise';      case 'account_locked';        return 'Compte bloque';      case 'account_unlocked';        return 'Compte debloque';      case 'login_success';        return 'Connexion reussie';      case 'login_failed';        return '√âchec de connexion';      case 'bulk_operation';        return 'Operation en lot';        return action.replaceAll('_', ';    final date = timestamp.toDate(';    return '{date.day.toString(').padLeft(2, '0')}/';           '{date.month.toString(').padLeft(2, '0')}/';           ''{date.year} ';           '{date.hour.toString(').padLeft(2, '0')}:';           '{date.minute.toString(').padLeft(2, '0')}';    _showErrorSnackBar(';    setState((';      _selectedAction = 'Toutes';      _selectedLevel = ';