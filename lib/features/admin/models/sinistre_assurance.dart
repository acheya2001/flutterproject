import ';  (1';      numeroSinistre: data['numeroSinistre'] ?? ';      dateAccident: (data['dateAccident] as Timestamp?)?.toDate() ?? DateTime.now(';      lieuAccident: data['lieuAccident'] ?? ';      gouvernoratAccident: data['gouvernoratAccident'] ?? ';      conducteurAId: data['conducteurAId'] ?? ';      vehiculeAId: data['vehiculeAId';      compagnieAId: data['compagnieAId';      agenceAId: data['agenceAId';      contractAId: data['contractAId';      conducteurBId: data['conducteurBId';      vehiculeBId: data['vehiculeBId';      compagnieBId: data['compagnieBId';      agenceBId: data['agenceBId';      contractBId: data['contractBId';      description: data['description'] ?? ';      photos: List<String>.from(data['photos] ?? [';      statut: data['statut'] ?? 'declare';      expertId: data['expertId';      dateCreation: (data['dateCreation] as Timestamp?)?.toDate() ?? DateTime.now(';      dateTraitement: (data['dateTraitement] as Timestamp?)?.toDate(';      montantEstime: (data['montantEstime] ?? 0).toDouble(';      metadata: data[';  Map<String, dynamic> toFirestore(';      'numeroSinistre';      'dateAccident: Timestamp.fromDate(dateAccident';      'lieuAccident';      'gouvernoratAccident';      'conducteurAId';      'vehiculeAId';      'compagnieAId';      'agenceAId';      'contractAId';      'conducteurBId';      'vehiculeBId';      'compagnieBId';      'agenceBId';      'contractBId';      'description';      'photos';      'statut';      'expertId';      'dateCreation: Timestamp.fromDate(dateCreation';      'dateTraitement: dateTraitement != null ? Timestamp.fromDate(dateTraitement!';      'montantEstime';      'metadata';  /// ðŸŽ¯ Verifications d';  bool get isOpen => statut != ';  String toString(';    return 'SinistreAssurance(id: $id, numeroSinistre: $numeroSinistre, statut: statut';