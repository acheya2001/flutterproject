import 'package:flutter/material.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../../services/permission_service.dart';import '../../services/employe_management_service.dart';import '../widgets/employe_card.dart';import '../widgets/employe_form_dialog.dart';import '../widgets/employe_detail_dialog.dart';  const Text(';  final ScrollController _scrollController = ScrollController(')')';  // √âtat de l';  String _searchQuery = ';  String? _roleFilter = 'tous'; // null = tous, 'agent', 'conducteur', 'expert', 'admin_agence';  String? _statusFilter = 'tous'; // null = tous, 'actif', 'inactif';  String? _agenceFilter = ';    super.dispose(';  /// üîç Charger les informations de l';          _error = ';      setState((';        _error = 'Erreur: ';    if (_adminInfo == null';        _adminInfo![';    } catch (e';      debugPrint(';    if (_adminInfo == null';        _adminInfo![';    }';  /// üèõÔ∏è Changer le filtre d';      builder: (context';        compagnieId: _adminInfo!['compagnieId';        compagnieNom: _adminInfo![';    if (result != null';          compagnieId: _adminInfo![';          ScaffoldMessenger.of(context';              content: const Text(';          ScaffoldMessenger.of(context')')';              content: (e';      builder: (context';        compagnieId: _adminInfo!['compagnieId';        compagnieNom: _adminInfo![';    if (result != null';          employeId: employe[';          ScaffoldMessenger.of(context';              content: const Text(';          ScaffoldMessenger.of(context')')';              content: (e';  Future<void> _toggleEmployeStatus(Map<String, dynamic> employe';      await EmployeManagementService.toggleEmployeStatus(employe[';      if (mounted';        final newStatus = employe['status'] == 'actif' ? 'inactif' : ';        ScaffoldMessenger.of(context';            content: ({newStatus == 'actif' ? 'active' : 'desactive';        ScaffoldMessenger.of(context';            content: (e';        employe['id';        employe[';        ScaffoldMessenger.of(context';            content: const Text(';        ScaffoldMessenger.of(context')')';            content: (e';    final isFakeData = employe[';      ScaffoldMessenger.of(context';          content: const Text(';      builder: (context')')';        title: const Text('üóëÔ∏è Supprimer l\')')'employe';        content: ({employe['nom']}" ?\n\n';          ';            onPressed: () => Navigator.pop(context, false';            child: const Text(';            style: ElevatedButton.styleFrom(backgroundColor: Colors.red')')';            child: const Text(';    if (confirmed == true')')';        await EmployeManagementService.deleteEmploye(employe[';          ScaffoldMessenger.of(context';              content: const Text(';          ScaffoldMessenger.of(context')')';              content: (e';        appBar: AppBar(title: const Text(';              const SizedBox(height: 16')')';              const Text(_error ?? ';              const SizedBox(height: 16';                child: const Text(';          icon: const Icon(Icons.info')')';          tooltip: _includeTestData ? 'Masquer donnees de test' : ';            setState(() {}';          tooltip: ';          const SizedBox(height: 12';              _buildStatCard('Total', _stats!['total], const Color(0xFF3B82F6)';              _buildStatCard('Agents', _stats!['agents], const Color(0xFF8B5CF6)';              _buildStatCard('Conducteurs', _stats!['conducteurs], const Color(0xFFF59E0B)';              _buildStatCard('Experts', _stats!['experts], const Color(0xFFEF4444)';              _buildStatCard('Actifs', _stats!['actifs], const Color(0xFF10B981)';              _buildStatCard('Inactifs', _stats!['inactifs], const Color(0xFF6B7280)';              _buildStatCard('Test', _stats!['testData], Colors.orange';              _buildStatCard('Reels', _stats![';      ';              hintText: ';                        _searchController.clear(';                        _onSearchChanged(';          const SizedBox(height: 12';                    labelText: ';                    border: OutlineInputBorder(borderRadius: BorderRadius.circular(8)';                    DropdownMenuItem(value: 'tous', child: const Text('Tous)')')';                    DropdownMenuItem(value: 'agent', child: const Text('Agent)')')';                    DropdownMenuItem(value: 'conducteur', child: const Text('Conducteur)')')';                    DropdownMenuItem(value: 'expert', child: const Text('Expert)')')';                    DropdownMenuItem(value: 'admin_agence', child: const Text(';              const SizedBox(width: 8')')';                    labelText: ';                    border: OutlineInputBorder(borderRadius: BorderRadius.circular(8)';                    DropdownMenuItem(value: 'tous', child: const Text('Tous)')')';                    DropdownMenuItem(value: 'actif', child: const Text('Actif)')')';                    DropdownMenuItem(value: 'inactif', child: const Text(';              const SizedBox(width: 8')')';                    labelText: ';                    border: OutlineInputBorder(borderRadius: BorderRadius.circular(8)';                    const DropdownMenuItem(value: 'toutes', child: const Text(';                    ..._agences.map((agence')')';                        value: agence[';  Widget _buildEmployesList(';        compagnieId: _adminInfo!['compagnieId';        roleFilter: _roleFilter == 'tous';        statusFilter: _statusFilter == 'tous';        agenceFilter: _agenceFilter == ';                const SizedBox(height: 16';                ({snapshot.error}';      icon: const Icon(Icons.info';      label: const Text(';')')