import 'package:flutter/material.dart';import '../../services/agence_management_service.dart';    super.dispose(';  /// üìä Charger les statistiques de l';      final stats = await AgenceManagementService.getAgenceStats(widget.agence[';  Widget build(BuildContext context';    final status = agence['status]?.toString().toLowerCase(') ?? 'actif';    final isActive = status == 'actif';    final isFakeData = agence[';                indicatorColor: const Color(0xFF667eea';                    text: ';                    icon: const Icon(Icons.info';                    text: ';          const SizedBox(height: 24';          _buildInfoSection('üìç Localisation';            _buildInfoItem('Gouvernorat', agence['gouvernorat';            _buildInfoItem('Ville', agence['ville';            _buildInfoItem('Adresse', agence[';          const SizedBox(height: 20';          _buildInfoSection('üìû Contact';            _buildInfoItem('Telephone', agence['telephone';            _buildInfoItem('Email', agence['email';            _buildInfoItem('Responsable', agence[';          const SizedBox(height: 20';          _buildInfoSection('üïí Dates';            _buildInfoItem('Creee le', _formatDate(agence['created_at])';            _buildInfoItem('Modifiee le', _formatDate(agence[';  Widget _buildEmployesTab(';      stream: AgenceManagementService.getAgenceEmployesStream(widget.agence[';                const SizedBox(height: 16';                ({snapshot.error}';              _buildStatCard('Total', _stats!['totalEmployes], const Color(0xFF3B82F6)';              _buildStatCard('Agents', _stats!['agents], const Color(0xFF8B5CF6)';              _buildStatCard('Conducteurs', _stats!['conducteurs], const Color(0xFFF59E0B)';              _buildStatCard('Experts', _stats!['experts], const Color(0xFFEF4444)';              _buildStatCard('Actifs', _stats!['actifs], const Color(0xFF10B981)';              _buildStatCard('Inactifs', _stats![';    ';  /// üìã Section d';              value?.toString(') ?? ';    ';  /// üë§ Carte d';    final role = employe['role]?.toString(') ?? ';    final status = employe['status]?.toString().toLowerCase(') ?? 'actif';    final isActive = status == ';          const SizedBox(width: 12';                ({employe['nom'] ?? ';    switch (role';      case ';        return const Color(0xFF8B5CF6';      case ';        return const Color(0xFF3B82F6';      case ';        return const Color(0xFFF59E0B';      case ';    switch (role';      case 'admin_agence';      case 'agent';      case 'conducteur';      case 'expert';    switch (role';      case 'admin_agence';        return 'Admin Agence';      case 'agent';        return 'Agent';      case 'conducteur';        return 'Conducteur';      case 'expert';        return 'Expert';        return ';      if (timestamp == null') return ';      } else if (timestamp.runtimeType.toString(').contains(';        date = timestamp.toDate(';        return 'Format invalide';      return '{date.day.toString(').padLeft(2, '0')}/'{date.month.toString().padLeft(2, '0')}/${date.year} a '{date.hour.toString().padLeft(2, '0')}:'{date.minute.toString().padLeft(2, '0')}';      return ';