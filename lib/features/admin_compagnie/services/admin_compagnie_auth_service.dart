import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/material.dart';import '../../../core/config/app_router.dart';  }';      debugPrint('[ADMIN_COMPAGNIE_AUTH] üöÄ Debut connexion: ';      if (user == null';        throw Exception('√âchec de connexion Firebase Auth';      debugPrint('[ADMIN_COMPAGNIE_AUTH] ‚úÖ Connexion Firebase reussie: '{user.uid}';      // 3. Attendre que l';      if (currentUser == null || currentUser.uid != user.uid';        throw Exception('√âtat d\';      if (userData == null';        throw Exception('Donnees utilisateur non trouvees dans Firestore';      final role = userData['role';      if (role != 'admin_compagnie';        throw Exception('R√¥le incorrect: role (attendu: admin_compagnie')';      debugPrint('[ADMIN_COMPAGNIE_AUTH] ‚úÖ Connexion complete reussie';        'success';        'user';        'userData';        'message': ';    } catch (e';      debugPrint('[ADMIN_COMPAGNIE_AUTH] ‚ùå Erreur connexion:  + e.toString()';      // Deconnexion en cas d';        debugPrint('[ADMIN_COMPAGNIE_AUTH] ‚ùå Erreur deconnexion: 'signOutError';        'success';        'error: e.toString(';        'message': ';  static Future<Map<String, dynamic>?> _getUserData(String userId';      debugPrint('[ADMIN_COMPAGNIE_AUTH] üìã Recuperation donnees Firestore: 'userId';      final userDoc = await _firestore.collection(';      if (!userDoc.exists';        debugPrint(';      final data = userDoc.data(';      data['id';      debugPrint('[ADMIN_COMPAGNIE_AUTH] ‚úÖ Donnees recuperees: '{data['role';    } catch (e';      debugPrint(';  static Future<void> navigateToAdminCompagnieDashboard(BuildContext context';      debugPrint(';      if (!context.mounted';        debugPrint(';      Navigator.pushReplacementNamed(context, AppRouter.compagnieDashboard';      debugPrint(';    } catch (e';      debugPrint(';  }';      debugPrint(';      ';      if (!result['success]';        debugPrint('[ADMIN_COMPAGNIE_AUTH] ‚ùå √âchec connexion: '{result['error';          ScaffoldMessenger.of(context';              content: ({result['message';        ScaffoldMessenger.of(context';            content: ({result['message';    } catch (e';      debugPrint(';        ScaffoldMessenger.of(context';            content: (e';      if (user == null';          'connected';          'message': ';      if (userData == null';          'connected';          'message': 'Donnees utilisateur non trouvees';      final role = userData['role';      if (role != 'admin_compagnie';          'connected';          'message': 'R√¥le incorrect: 'role';        'connected';        'user';        'userData';        'message': ';    } catch (e';        'connected';        'message': 'Erreur verification: ';  static Future<bool> testDefaultLogin(BuildContext context';    const email = 'admin.compagnie@test.tn';    const password = 'AdminCompagnie123!';    debugPrint(';      await _auth.signOut(';      debugPrint(';    } catch (e';      debugPrint('[ADMIN_COMPAGNIE_AUTH] ‚ùå Erreur deconnexion: ';