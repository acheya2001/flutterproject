import 'package:cloud_firestore/cloud_firestore.dart';import ';  static Future<bool> createMissingAdminCompagnieDocument(';      debugPrint('[FIRESTORE_REPAIR] üîß Debut reparation document Admin Compagnie...';      // 1. Verifier l';        debugPrint('[FIRESTORE_REPAIR] ‚ùå Aucun utilisateur connecte';      debugPrint('[FIRESTORE_REPAIR] ‚úÖ Utilisateur connecte: '{user.uid}';          .collection(';      if (existingDoc.exists';        debugPrint(';        final data = existingDoc.data(';        debugPrint('[FIRESTORE_REPAIR] üìã Donnees existantes: '{data['role']}';      // 3. Creer d';        'email': user.email ?? 'admin.compagnie@test.tn';        'nom': 'Admin';        'prenom': 'Compagnie';        'role': 'admin_compagnie';        'status': 'actif';        'compagnieId';        'compagnieNom': 'STAR Assurance';        'created_at: FieldValue.serverTimestamp(';        'updated_at: FieldValue.serverTimestamp(';        'created_by': 'firestore_repair_service';        'isFakeData';        'last_login';        'password_reset_required';          .collection(';          .set(userData';      debugPrint('[FIRESTORE_REPAIR] ‚úÖ Document utilisateur cree avec succes';      debugPrint('[FIRESTORE_REPAIR] üìã Donnees: ';    } catch (e';      debugPrint(';      if (existingCompagnie.exists';        debugPrint('[FIRESTORE_REPAIR] ‚úÖ Compagnie existe deja: 'compagnieId';        'nom': 'STAR Assurance';        'code': 'STAR';        'type': 'compagnie_assurance';        'status': 'actif';        'adresse': '123 Avenue Habib Bourguiba, Tunis';        'telephone': '+216 71 123 456';        'email': 'contact@star-assurance.tn';        'site_web': 'www.star-assurance.tn';        'created_at: FieldValue.serverTimestamp(';        'updated_at: FieldValue.serverTimestamp(';        'created_by': 'firestore_repair_service';        'isFakeData';          .collection(';          .set(compagnieData';      debugPrint('[FIRESTORE_REPAIR] ‚úÖ Compagnie creee: ';    } catch (e';      debugPrint('[FIRESTORE_REPAIR] ‚ùå Erreur creation compagnie:  + e.toString()';      return 'star-assurance-test';      if (user == null';          'exists';          'error': 'Aucun utilisateur connecte';          .collection(';      if (!doc.exists';          'exists';          'uid';          'email';          'error': ';      final data = doc.data(';        'exists';        'uid';        'data';        'role': data['role';        'compagnieId': data[';    } catch (e';        'exists';        'error': 'Erreur verification: ';  static Future<bool> fullRepair(';      debugPrint(';      final initialCheck = await checkAdminCompagnieDocument(';      debugPrint('[FIRESTORE_REPAIR] üìã √âtat initial: 'initialCheck';      if (initialCheck['exists] == true';        debugPrint(';      if (!created';        debugPrint(';      final finalCheck = await checkAdminCompagnieDocument(';      debugPrint('[FIRESTORE_REPAIR] üìã √âtat final: 'finalCheck';      if (finalCheck['exists] == true';        debugPrint('[FIRESTORE_REPAIR] ‚úÖ Reparation complete reussie !';        debugPrint(';    } catch (e';      debugPrint(';  static Future<void> cleanTestData(';      debugPrint(';      if (user != null';        // Supprimer le document utilisateur s';            .collection(';        if (userDoc.exists && userDoc.data(')![';          await userDoc.reference.delete(';          debugPrint('[FIRESTORE_REPAIR] ‚úÖ Document utilisateur test supprime';          .collection('compagnies_assurance';          .doc(';          .delete(';      debugPrint(';    } catch (e';      debugPrint('[FIRESTORE_REPAIR] ‚ùå Erreur nettoyage: ';