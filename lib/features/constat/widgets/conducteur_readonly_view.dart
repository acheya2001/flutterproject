import 'package:flutter/material.dart';import '../models/conducteur_session_info.dart';/// üëÅÔ∏è Widget de visualisation en lecture seule des informations d';                          ? (conducteurInfo.isCompleted ? 'Termin√©' : 'En cours';                          : 'En attente';      'Informations du conducteur';        _buildInfoRow('Nom', '${info.prenom} ${info.nom}';        _buildInfoRow('Adresse';        _buildInfoRow('T√©l√©phone';        _buildInfoRow('Permis N¬∞';      'V√©hicule';        _buildInfoRow('Marque';        _buildInfoRow('Type';        _buildInfoRow('Immatriculation';        if (info.venantDe.isNotEmpty) _buildInfoRow('Venant de';        if (info.allantA.isNotEmpty) _buildInfoRow('Allant √†';      'Assurance';        _buildInfoRow('Soci√©t√©';        _buildInfoRow('N¬∞ Contrat';        _buildInfoRow('Agence';      'Propri√©taire du v√©hicule';        _buildInfoRow('Nom', '${info.prenom ?? ''} ${info.nom ?? ''}';        _buildInfoRow('Adresse', info.adresse ?? '';        _buildInfoRow('T√©l√©phone', info.telephone ?? '';      'Circonstances';      'D√©g√¢ts apparents';      'T√©moins';              if (t.adresse.isNotEmpty) Text('Adresse: ${t.adresse}';              if (t.telephone?.isNotEmpty == true) Text('T√©l: ${t.telephone}';      'Observations';      'Photos accident': conducteurInfo.photosAccidentUrls?.join(', ';      'Permis de conduire';      'Carte grise';      'Attestation assurance';      'Signature';      'Documents et photos';                  ? 'Constat termin√© et valid√©';                  : 'Constat en cours de saisie';              'Le ${_formatDate(conducteurInfo.completedAt!)}';            'En attente';                ? 'Invitation envoy√©e √† ${conducteurInfo.email}';                : 'Ce conducteur n\'a pas encore rejoint la session';              '$label:';              value.isNotEmpty ? value : 'Non renseign√©';      case 'A';      case 'B';      case 'C';      case 'D';      case 'E';      case 'F';    return '${date.day.toString().padLeft(2, '0')}/${date.month.toString().padLeft(2, '0')}/${date.year} √† ${date.hour.toString().padLeft(2, '0')}:${date.minute.toString().padLeft(2, '0')}';