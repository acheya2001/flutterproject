import 'package:cloud_firestore/cloud_firestore.dart';import ';  }';/// 🏪 Service d';      // Rechercher l';          .collection('users';          .where('email, isEqualTo: email';          .where('role', isEqualTo: ';      if (userQuery.docs.isEmpty';          error: ';      // Verifier le mot de passe (tous les champs possibles';        userData['password';        userData['temporaryPassword';        userData['motDePasseTemporaire';        userData['motDePasse';        userData['temp_password';        userData[';      if (!passwordMatch';          error: ';        ';      // Verifier que l';      if (userData['isActive] != true';          error: ';        ';      // Recuperer les donnees de l';      final agenceId = userData[';      if (agenceId == null';          error: ';        ';      // Recuperer les donnees de l';      final compagnieId = userData[';      if (compagnieId != null';          // Recuperer les infos de l';              .collection(';              .doc(compagnieId';              .collection(';            agenceNom = agenceDoc.data(')!['nom';            // Fallback vers l';                .collection(';              agenceNom = oldAgenceDoc.data(')!['nom';              .collection(';            compagnieNom = compagnieDoc.data(')!['nom';            // Fallback vers l';                .collection(';              compagnieNom = oldCompagnieDoc.data(')?[';        } catch (e';          debugPrint('[ADMIN_AGENCE_AUTH] ⚠️ Erreur recuperation infos:  + e.toString()';            error: ';          ';        agenceNom: agenceNom ?? ';      if (kDebugMode';        print('Erreur connexion Admin Agence:  + e.toString()';        error: 'Erreur de connexion: ';      ';  /// 📊 Recuperer les statistiques de l';      // Compter les agents de l';          .collection('agents_assurance';          .where(';          .get(';      // Compter les contrats de l';          .collection('contrats';          .where(';          .get(';      // Compter les sinistres de l';          .collection('sinistres';          .where(';          .get(';        'total_agents';        'total_contrats';        'total_sinistres';        ';            .where((doc) => doc.data(')['status'] == ';      if (kDebugMode';        print('Erreur recuperation stats agence:  + e.toString()';        'total_agents';        'total_contrats';        'total_sinistres';        'contrats_actifs';  static Future<Map<String, dynamic>?> getAgenceData(String agenceId';          .collection(';      if (kDebugMode';        print(';      if (kDebugMode';        print('Erreur deconnexion: ';