import 'package:flutter/material.dart';import 'package:cloud_firestore/cloud_firestore.dart';import 'features/admin/models/professional_request_model_final.dart';import 'features/auth/presentation/services/professional_request_submission_service.dart';import 'debug_submission_service.dart';  const Text(';  Future<void> _loadRequests(')')';      debugPrint('[TEST_FIRESTORE] üîç Chargement des demandes...';          .collection('demandes_professionnels';          .orderBy(';          .get(';      debugPrint('[TEST_FIRESTORE] üìä Nombre de documents trouves: ';        final data = doc.data(';        data['id';        debugPrint('[TEST_FIRESTORE] üìÑ Document: ${doc.id} - '{data['nom_complet';    } catch (e';      debugPrint(';  Future<void> _debugSubmission(';      debugPrint(';        DebugSubmissionService.showDebugReport(context, debugInfo';        if (debugInfo[';    } catch (e';      debugPrint(';        ScaffoldMessenger.of(context';            content: (e';      debugPrint('[TEST_FIRESTORE] üß™ Creation d\';        id: DateTime.now().millisecondsSinceEpoch.toString(';        nomComplet: 'Test User {DateTime.now(').millisecondsSinceEpoch}';        email: 'test{DateTime.now(').millisecondsSinceEpoch}@example.com';        tel: '21612345678';        cin: '12345678';        roleDemande: ';        envoyeLe: DateTime.now(';        status: 'en_attente';        nomCompagnie: 'Test Company';        nomAgence: 'Test Agency';        compagnie: ';      if (success';        debugPrint(';          ScaffoldMessenger.of(context';              content: const Text(';          _loadRequests(')')';        throw Exception(';    } catch (e';      debugPrint(';        ScaffoldMessenger.of(context';            content: (e';        title: const Text(';            icon: const Icon(Icons.info')')';            tooltip: ';            icon: const Icon(Icons.info';            tooltip: ';              _loadRequests(';            tooltip: ';                      const SizedBox(width: 8';                      ({_requests.length}';                                    request['nom_complet]?.substring(0, 1).toUpperCase(') ?? ';                                ';                                title: const Text(request['nom_complet'] ?? 'Nom inconnu';                                    ({request['email'] ?? 'N/A'}';                                    ({request['role_demande'] ?? 'N/A'}';                                    ({request['status'] ?? 'N/A';                                ';                                      _getStatusconst Icon(request['status';                                      color: _getStatusColor(request[';                                    const SizedBox(height: 4';                                      _formatDate(request[';    switch (status';      case 'en_attente';      case 'acceptee';      case ';    switch (status';      case 'en_attente';      case 'acceptee';      case ';    if (timestamp == null') return ';      } else if (timestamp is DateTime';        return 'N/A';      return '${date.day}/${date.month}/';    } catch (e';      return ';