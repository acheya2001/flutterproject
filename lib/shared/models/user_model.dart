import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/material.dart';import '../../core/enums/app_enums.dart';  /// Nom complet de l';  String get fullName => '$firstName $lastName';  /// Initiales de l';    final first = firstName.isNotEmpty ? firstName[0].toUpperCase() : '';    final last = lastName.isNotEmpty ? lastName[0].toUpperCase() : '';    return '$first$last';  /// Vérifie si l';  /// Vérifie si l';  /// Vérifie si l';  /// Vérifie si l';  /// Vérifie si l'utilisateur peut gérer d';  /// Vérifie si l';      'email';      'firstName';      'lastName';      'phone';      'role';      'status';      'createdAt';      'updatedAt';      'createdBy';      if (updatedBy != null) 'updatedBy';      if (address != null) 'address';      if (profileImageUrl != null) 'profileImageUrl';      if (cin != null) 'cin';      if (lastLoginAt != null) 'lastLoginAt';        'permissions';      if (metadata != null) 'metadata';  /// Crée un UserModel à partir d';  /// Crée un UserModel à partir d';      email: map['email'] ?? '';      firstName: map['firstName'] ?? '';      lastName: map['lastName'] ?? '';      phone: map['phone'] ?? '';      role: UserRole.fromString(map['role'] ?? 'driver';      status: AccountStatus.fromString(map['status'] ?? 'pending';      createdAt: (map['createdAt';      updatedAt: (map['updatedAt';      createdBy: map['createdBy'] ?? '';      updatedBy: map['updatedBy';      address: map['address';      profileImageUrl: map['profileImageUrl';      cin: map['cin';      lastLoginAt: (map['lastLoginAt';      permissions: _parsePermissions(map['permissions';      metadata: map['metadata';      debugPrint('[USER_MODEL] Erreur lors du parsing des permissions: $e';