import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';import '../features/vehicules/models/vehicule_assure_model.dart';import '../core/utils/constants.dart';import 'dart:math';  // 🏢 Compagnies d';    {'id': 'STAR', 'nom': 'STAR Assurances', 'code': 'STAR';    {'id': 'MAGHREBIA', 'nom': 'Maghrebia Assurances', 'code': 'MAG';    {'id': 'GAT', 'nom': 'GAT Assurances', 'code': 'GAT';    {'id': 'LLOYD', 'nom': 'Lloyd Tunisien', 'code': 'LLOYD';    {'id': 'ASTREE', 'nom': 'Astrée Assurances', 'code': 'AST';    {'id': 'CTAMA', 'nom': 'CTAMA', 'code': 'CTAMA';    {'id': 'SALIM', 'nom': 'Salim Assurances', 'code': 'SALIM';    {'id': 'ZITOUNA', 'nom': 'Zitouna Takaful', 'code': 'ZIT';    'Peugeot': ['208', '308', '2008', '3008', '5008', '207', '307', '407';    'Renault': ['Clio', 'Megane', 'Captur', 'Duster', 'Logan', 'Symbol', 'Fluence';    'Volkswagen': ['Golf', 'Polo', 'Passat', 'Tiguan', 'Jetta', 'Touareg';    'Citroën': ['C3', 'C4', 'C5', 'Berlingo', 'Picasso', 'DS3', 'DS4';    'Fiat': ['Punto', 'Panda', '500', 'Tipo', 'Doblo', 'Bravo';    'Hyundai': ['i10', 'i20', 'i30', 'Tucson', 'Santa Fe', 'Accent';    'Kia': ['Picanto', 'Rio', 'Cerato', 'Sportage', 'Sorento';    'Toyota': ['Yaris', 'Corolla', 'Camry', 'RAV4', 'Land Cruiser';    'Nissan': ['Micra', 'Sunny', 'Qashqai', 'X-Trail', 'Patrol';    'Ford': ['Fiesta', 'Focus', 'Mondeo', 'Kuga', 'Explorer';    'Opel': ['Corsa', 'Astra', 'Insignia', 'Mokka', 'Zafira';    'Seat': ['Ibiza', 'Leon', 'Toledo', 'Ateca', 'Alhambra';    'Blanc', 'Noir', 'Gris', 'Rouge', 'Bleu', 'Vert', 'Jaune', 'Orange';    'Violet', 'Marron', 'Beige', 'Argent', 'Bronze';    'Tunis', 'Ariana', 'Ben Arous', 'Manouba', 'Nabeul', 'Zaghouan';    'Bizerte', 'Béja', 'Jendouba', 'Kef', 'Siliana', 'Sousse';    'Monastir', 'Mahdia', 'Sfax', 'Kairouan', 'Kasserine', 'Sidi Bouzid';    'Gabès', 'Medenine', 'Tataouine', 'Gafsa', 'Tozeur', 'Kebili';    'Mohamed', 'Ahmed', 'Ali', 'Mahmoud', 'Omar', 'Youssef', 'Karim', 'Sami';    'Nabil', 'Tarek', 'Hichem', 'Fares', 'Amine', 'Walid', 'Rami', 'Zied';    'Fatma', 'Aicha', 'Salma', 'Nour', 'Ines', 'Mariem', 'Sarra', 'Rim';    'Nesrine', 'Wafa', 'Samia', 'Leila', 'Amina', 'Dorra', 'Emna', 'Olfa';    'Ben Ahmed', 'Ben Ali', 'Ben Salem', 'Trabelsi', 'Bouazizi', 'Khelifi';    'Mansouri', 'Gharbi', 'Jemli', 'Sassi', 'Mejri', 'Bouzid', 'Hamdi';    'Kacem', 'Dridi', 'Cherni', 'Abidi', 'Rekik', 'Tlili', 'Ouali';    'Responsabilité Civile', 'Tiers Complet', 'Tous Risques', 'Vol et Incendie';      debugPrint('[MassDataGenerator] 🚀 Génération de $nombreVehicules véhicules et $nombreConstats constats...';        debugPrint('[MassDataGenerator] 📊 Progression: 0%';      // 1. Créer les compagnies d';      debugPrint('[MassDataGenerator] ✅ Base de données massive créée avec succès !';      debugPrint('[MassDataGenerator] 📊 Résumé:';      debugPrint('[MassDataGenerator]   - ${_assureurs.length} compagnies d\'assurance';      debugPrint('[MassDataGenerator]   - $nombreVehicules véhicules assurés';      debugPrint('[MassDataGenerator]   - $nombreConstats constats d\'accident';      debugPrint('[MassDataGenerator]   - Analytics générées';      debugPrint('[MassDataGenerator] ❌ Erreur lors de la génération: $e';  /// 🏢 Créer les compagnies d';    debugPrint('[MassDataGenerator] 🏢 Création des compagnies d\'assurance...';        'id': assureur['id';        'nom': assureur['nom';        'code': assureur['code';        'logo_url': 'https://example.com/${assureur['id'].toLowerCase()}_logo.png';        'contact';          'telephone': '+216 71 ${_random.nextInt(900) + 100} ${_random.nextInt(900) + 100}';          'email': 'contact@${assureur['id'].toLowerCase()}.tn';          'adresse': '${_random.nextInt(100) + 1} Avenue ${_getRandomElement(_gouvernorats)}, Tunis';        'agences': _generateAgences(assureur['id';        'statistiques';          'total_contrats';          'constats_traites';          'montant_total_sinistres';        'created_at';        'updated_at';          .collection('assureurs_compagnies';          .doc(assureur['id';        'agence_id': '${assureurId}_${gouvernorat.toUpperCase()}_${i.toString().padLeft(3, '0')}';        'nom': 'Agence $gouvernorat ${i + 1}';        'adresse': '${_random.nextInt(200) + 1} Rue ${_getRandomElement(_noms)}, $gouvernorat';        'responsable': '${_getRandomElement(_prenomsHommes)} ${_getRandomElement(_noms)}';        'telephone': '+216 ${_random.nextInt(90) + 10} ${_random.nextInt(900) + 100} ${_random.nextInt(900) + 100}';    debugPrint('[MassDataGenerator] 🚗 Génération de $nombre véhicules...';          debugPrint('[MassDataGenerator] 📊 Véhicules: $progress% (${i + 1}/$nombre)';  /// 🚗 Générer les données d';      id: '';      assureurId: assureur['id';      numeroContrat: '${assureur['code']}-${now.year}-${_random.nextInt(999999).toString().padLeft(6, '0')}';        userId: 'user_${_random.nextInt(10000).toString().padLeft(4, '0')}';        cin: '${_random.nextInt(90000000) + 10000000}';        telephone: '+216 ${_random.nextInt(90) + 10} ${_random.nextInt(900) + 100} ${_random.nextInt(900) + 100}';      statut: dateFin.isAfter(now) ? 'actif' : 'expire';    final lettres = ['TUN', 'TN', 'RS';    return '$numero $code $suite';      'Peugeot': 'VF3';      'Renault': 'VF1';      'Volkswagen': 'WVW';      'Citroën': 'VF7';      'Fiat': 'ZFA';      'Hyundai': 'KMH';      'Kia': 'KNA';      'Toyota': 'JTD';      'Nissan': 'JN1';      'Ford': 'WF0';      'Opel': 'W0L';      'Seat': 'VSS';    final prefix = prefixes[marque] ?? 'XXX';    return '$prefix$suffix';  /// 📋 Générer l';        numeroSinistre: 'SIN-${date.year}-${_random.nextInt(999999).toString().padLeft(6, '0')}';        statut: _getRandomElement(['clos', 'en_cours', 'expertise';    debugPrint('[MassDataGenerator] 📋 Génération de $nombre constats...';          debugPrint('[MassDataGenerator] 📊 Constats: $progress% (${i + 1}/$nombre)';  /// 📋 Générer les données d';      'id': '';      'date_accident';      'lieu': '${_getRandomElement(_gouvernorats)}, ${_random.nextInt(100) + 1} Rue ${_getRandomElement(_noms)}';      'vehicules';      'participants': ['user_${_random.nextInt(10000)}', 'user_${_random.nextInt(10000)}';      'statut': _getRandomElement(['brouillon', 'soumis', 'valide', 'traite';      'gravite': _getRandomElement(['leger', 'modere', 'grave';      'montant_estime';      'assureur_responsable': _getRandomElement(_assureurs)['id';      'expert_assigne': _random.nextBool() ? 'expert_${_random.nextInt(100)}';      'created_at';      'updated_at';    debugPrint('[MassDataGenerator] 📊 Génération des analytics...';      'periode': '${DateTime.now().year}-${DateTime.now().month.toString().padLeft(2, '0')}';      'type': 'global';      'kpis';        'nombre_constats';        'montant_sinistres';        'delai_moyen_traitement';        'taux_satisfaction';        'fraudes_detectees';      'tendances';      'zones_accidentogenes';      'predictions';      'created_at';      'updated_at';        .doc('global_${DateTime.now().year}_${DateTime.now().month.toString().padLeft(2, '0')}';        'mois': '${mois.year}-${mois.month.toString().padLeft(2, '0')}';        'nombre';        'montant';      'zone';      'accidents';      'sinistres_prevus_mois_prochain';      'budget_previsionnel';      'zones_risque_eleve';  /// 🎲 Obtenir un élément aléatoire d';    debugPrint('[MassDataGenerator] 🧹 Nettoyage de toute la base de données...';      'assureurs_compagnies';      debugPrint('[MassDataGenerator] ✅ Collection $collection nettoyée';    debugPrint('[MassDataGenerator] 🎉 Base de données complètement nettoyée !';