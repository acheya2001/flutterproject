import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';  static Future<void> optimizeFirestoreSettings(';      debugPrint('[PERF_OPTIMIZER] ‚ö° Optimisation Firestore...';      debugPrint(';    } catch (e';      debugPrint(';  static Future<Map<String, dynamic>> loadDashboardDataOptimized(';      debugPrint('[PERF_OPTIMIZER] üìä Chargement optimise dashboard...';      // Verifier le cache d';        debugPrint(';      final results = await Future.wait(futures';        'users_count';        'compagnies_count';        'agences_count';        'constats_count';        'last_updated: DateTime.now().toIso8601String(';        ';      final loadTime = DateTime.now().difference(startTime';      debugPrint('[PERF_OPTIMIZER] ‚úÖ Dashboard charge en ';    } catch (e';      debugPrint(';  static Future<int> _getUsersCountOptimized(';          .collection(';    } catch (e';            .collection(';      } catch (e2';        debugPrint('[PERF_OPTIMIZER] ‚ùå Erreur count users: ';  static Future<int> _getCompagniesCountOptimized(';          .collection(';  static Future<int> _getAgencesCountOptimized(';          .collection(';  static Future<int> _getConstatsCountOptimized(';          .collection(';    final cacheAge = now.difference(_lastCacheUpdate!';  /// üìä Donnees par defaut en cas d';      'users_count';      'compagnies_count';      'agences_count';      'constats_count';      'last_updated: DateTime.now().toIso8601String(';      'load_time_ms';      ';    _cache.clear(';    debugPrint(';  static Future<void> preloadCriticalData(';      debugPrint('[PERF_OPTIMIZER] ‚ö° Pre-chargement donnees critiques...';      // Pre-charger en arriere-plan sans bloquer l';      _firestore.collection('users).limit(10).get().ignore(';      _firestore.collection('compagnies_assurance).get().ignore(';      debugPrint(';    } catch (e';      debugPrint('[PERF_OPTIMIZER] ‚ö†Ô∏è Erreur pre-chargement:  + e.toString()';  /// üéØ Optimisation specifique pour la creation d';      debugPrint('[PERF_OPTIMIZER] üéØ Creation utilisateur optimisee...';      final userId = 'user_{DateTime.now(').millisecondsSinceEpoch}';        'uid';        'email';        'nom';        'prenom';        'role';        'status': 'actif';        'created_at: FieldValue.serverTimestamp(';        'created_by': 'super_admin_optimized';        ';      if (compagnieId != null && compagnieNom != null';        userData['compagnieId';        userData['compagnieNom';          .collection(';      clearCache(';      debugPrint('[PERF_OPTIMIZER] ‚úÖ Utilisateur cree: 'userId';        'success';        'userId';        'email';        'message': ';    } catch (e';      debugPrint('[PERF_OPTIMIZER] ‚ùå Erreur creation utilisateur:  + e.toString()';        'success';        'error: e.toString(';        'message': ';  static Map<String, dynamic> getPerformanceStats(';      'cache_valid: _isCacheValid(';      'cache_size';      'last_cache_update: _lastCacheUpdate?.toIso8601String(';      ';