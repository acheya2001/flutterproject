import 'dart:io';import 'package:flutter/foundation.dart';import 'package:intl/intl.dart';  /// üÜî Extraire les informations d';      debugPrint('[SimpleOCR] Simulation extraction permis de conduire';      // Simulation d';        'numero': 'TN${DateTime.now().millisecondsSinceEpoch.toString().substring(8)}';        'nom': 'HAMMAMI';        'prenom': 'Rahma';        'dateNaissance': '15/03/1995';        'lieuNaissance': 'Tunis';        'dateDelivrance': DateFormat('dd/MM/yyyy';        'dateExpiration': DateFormat('dd/MM/yyyy';        'categories': ['B', 'A1';        'confidence';        'source': 'simulation_ocr';      debugPrint('[SimpleOCR] Erreur simulation permis: $e';  /// üÜî Extraire les informations d';      debugPrint('[SimpleOCR] Simulation extraction CIN';        'numero': '${DateTime.now().millisecondsSinceEpoch.toString().substring(5)}';        'nom': 'HAMMAMI';        'prenom': 'Rahma';        'nomPere': 'Mohamed';        'nomMere': 'Fatma';        'dateNaissance': '15/03/1995';        'lieuNaissance': 'Tunis';        'adresse': 'Avenue Habib Bourguiba, Tunis';        'dateDelivrance': DateFormat('dd/MM/yyyy';        'confidence';        'source': 'simulation_ocr';      debugPrint('[SimpleOCR] Erreur simulation CIN: $e';  /// üöó Extraire les informations d';      debugPrint('[SimpleOCR] Simulation extraction carte grise';        'numeroImmatriculation': '${DateTime.now().millisecond}TUN${DateTime.now().second}';        'marque': ['Toyota', 'Peugeot', 'Renault', 'Hyundai';        'modele': ['Corolla', '208', 'Clio', 'i20';        'annee';        'couleur': ['Blanc', 'Noir', 'Gris', 'Rouge';        'numeroSerie': 'VF${DateTime.now().millisecondsSinceEpoch.toString().substring(8)}';        'puissance': '${90 + (DateTime.now().second % 50)} CV';        'proprietaire': 'HAMMAMI Rahma';        'datePremiereImmatriculation': DateFormat('dd/MM/yyyy';        'confidence';        'source': 'simulation_ocr';      debugPrint('[SimpleOCR] Erreur simulation carte grise: $e';  /// üõ°Ô∏è Extraire les informations d'une attestation d';      debugPrint('[SimpleOCR] Simulation extraction attestation assurance';      final compagnies = ['STAR', 'GAT', 'COMAR', 'MAGHREBIA';      final types = ['Tous Risques', 'Tiers Complet', 'Responsabilit√© Civile';        'compagnie';        'numeroPolice': 'POL${DateTime.now().millisecondsSinceEpoch.toString().substring(6)}';        'typeAssurance';        'dateDebut': DateFormat('dd/MM/yyyy';        'dateFin': DateFormat('dd/MM/yyyy';        'vehiculeImmatriculation': '${DateTime.now().millisecond}TUN${DateTime.now().second}';        'assure': 'HAMMAMI Rahma';        'agence': 'Agence Tunis Centre';        'confidence';        'source': 'simulation_ocr';      debugPrint('[SimpleOCR] Erreur simulation assurance: $e';      debugPrint('[SimpleOCR] Simulation extraction texte g√©n√©rique';      final fileName = imageFile.path.split('/';      if (fileName.contains('permis';        return 'R√âPUBLIQUE TUNISIENNE\nPERMIS DE CONDUIRE\nNom: HAMMAMI\nPr√©nom: Rahma\nCat√©gories: B, A1';      } else if (fileName.contains('cin';        return 'R√âPUBLIQUE TUNISIENNE\nCARTE D\'IDENTIT√â NATIONALE\nNom: HAMMAMI\nPr√©nom: Rahma\nN√©(e) le: 15/03/1995';      } else if (fileName.contains('carte') || fileName.contains('grise';        return 'CARTE GRISE\nImmatriculation: 123TUN456\nMarque: Toyota\nMod√®le: Corolla\nAnn√©e: 2018';      } else if (fileName.contains('assurance';        return 'ATTESTATION D\'ASSURANCE\nCompagnie: STAR\nPolice: POL123456\nV√©hicule: 123TUN456\nValide jusqu\'au: 31/12/2024';        return 'Texte extrait de l\'image\n simul√© pour d√©monstration\nService OCR simplifi√©\nPour PFE - Version gratuite';      debugPrint('[SimpleOCR] Erreur simulation extraction texte: $e';      return 'Erreur lors de l\'extraction du texte';      debugPrint('[SimpleOCR] Simulation recherche mots-cl√©s: $keywords';        foundKeywords.addAll(['document', 'texte', 'information';      debugPrint('[SimpleOCR] Erreur simulation recherche: $e';        'overall';        'text_quality';        'image_clarity';        'processing_time';      debugPrint('[SimpleOCR] Erreur simulation stats: $e';        'overall';        'text_quality';        'image_clarity';        'processing_time';    debugPrint('[SimpleOCR] Nettoyage des ressources (simulation)';    'name': 'SimpleOCR Service';    'version': '1.0.0';    'type': 'simulation';    'features';      'Extraction permis de conduire';      'Extraction CIN';      'Extraction carte grise';      'Extraction attestation assurance';      'Extraction texte g√©n√©rique';      'Recherche mots-cl√©s';      'Statistiques de confiance';    'cost': 'Gratuit';    'dependencies': 'Aucune';