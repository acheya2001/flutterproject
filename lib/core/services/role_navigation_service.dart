import 'package:flutter/material.dart';import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';      if (currentUser == null';        debugPrint(';        _navigateToLogin(context';      debugPrint('[ROLE_NAV] üîç Determination interface pour: '{currentUser.email}';          .collection(';      if (!userDoc.exists';        debugPrint(';      final userData = userDoc.data(';      final role = userData['role';      final compagnieId = userData['compagnieId';      final agenceId = userData['agenceId';      debugPrint('[ROLE_NAV] üë§ R√¥le detecte: 'role';      debugPrint('[ROLE_NAV] üè¢ Compagnie: 'compagnieId';      debugPrint('[ROLE_NAV] üè™ Agence: 'agenceId';      // Verifier si c';      final isFirstLogin = userData[';      if (isFirstLogin';        debugPrint(';      switch (role';        case 'super_admin';          debugPrint(';          Navigator.of(context').pushReplacementNamed('/super-admin-dashboard';        case ';          if (compagnieId != null';            debugPrint(';            Navigator.of(context').pushReplacementNamed('/compagnie-dashboard/'compagnieId';            _showConfigurationError(context, 'Compagnie non assignee';        case ';          if (compagnieId != null && agenceId != null';            debugPrint(';            Navigator.of(context').pushReplacementNamed('/agence-dashboard/'agenceId';            _showConfigurationError(context, 'Agence non assignee';        case ';          if (agenceId != null';            debugPrint(';            Navigator.of(context').pushReplacementNamed('/agent-dashboard/'agenceId';            _showConfigurationError(context, 'Agence non assignee';        case 'expert_auto';          debugPrint(';          Navigator.of(context').pushReplacementNamed('/expert-dashboard';        case 'conducteur';          debugPrint(';          Navigator.of(context').pushReplacementNamed('/conducteur-dashboard';          debugPrint('[ROLE_NAV] ‚ùå R√¥le non reconnu: ';    } catch (e';      debugPrint(';    Navigator.of(context';      '/change-password';      arguments: {';    Navigator.of(context').pushReplacementNamed(';            const SizedBox(width: 8';            const Text(';        ')')';          'Votre compte n\'est pas correctement configure dans le systeme. ';          'Veuillez contacter l\';              _navigateToLogin(context';            child: const Text(';            const SizedBox(width: 8')')';            const Text(';        ')')';        content: (error\n\n';          'Veuillez contacter l\';              _navigateToLogin(context';            child: const Text(';            const SizedBox(width: 8')')';            const Text(';        ')')';        content: ({role ?? "null"}\n\n';          'Veuillez contacter l\';              _navigateToLogin(context';            child: const Text(';            const SizedBox(width: 8')')';            const Text(';        ')')';        content: (error\n\n';          ';              _navigateToLogin(context';            child: const Text(';              navigateToRoleInterface(context')')';            child: const Text(';    ')')';  /// üìä Obtenir les informations de r√¥le pour l';          .collection(';      final userData = userDoc.data(';        'role': userData['role';        'compagnieId': userData['compagnieId';        'agenceId': userData['agenceId';        'nom': userData['nom';        'prenom': userData['prenom';        'email': userData[';    } catch (e';      debugPrint('[ROLE_NAV] ‚ùå Erreur recuperation info r√¥le:  + e.toString()';  /// üéØ Verifier si l';      final role = roleInfo['role';        'super_admin': ['/super-admin-dashboard', '/admin-dashboard';        'admin_compagnie': ['/compagnie-dashboard';        'admin_agence': ['/agence-dashboard';        'agent_agence': ['/agent-dashboard';        'expert_auto': ['/expert-dashboard';        'conducteur': [';    } catch (e';      debugPrint('[ROLE_NAV] ‚ùå Erreur verification acces route: ';