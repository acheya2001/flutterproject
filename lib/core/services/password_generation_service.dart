import ';  static String generateSecurePassword({int length = 12}';    _+-=[]{}|;:,.<>?';    String password = ';      password += allChars[random.nextInt(allChars.length';    List<String> passwordList = password.split(';    passwordList.shuffle(random';    return passwordList.join(';  /// ðŸ“Š Verifier la force d';      feedback.add(';    if (password.length >= 12';    if (RegExp(r'[a-z]).hasMatch(password)';      feedback.add('Au moins une minuscule requise';    if (RegExp(r'[A-Z]).hasMatch(password)';      feedback.add('Au moins une majuscule requise';    if (RegExp(r'[0-9]).hasMatch(password)';      feedback.add('Au moins un chiffre requis';    if (RegExp(r'[!@#\%^&*(')_+\-=\[\]{}|;:,.<>?]';      feedback.add(';    if (score <= 2';      level = ';    } else if (score <= 4';      level = 'Moyen';      level = 'Fort';      'score';      'level';      'feedback';      ';    final number = random.nextInt(100';    final symbol = ['!', '@', '#', '\'', '%][random.nextInt(5';    return '$adjective$noun$number';