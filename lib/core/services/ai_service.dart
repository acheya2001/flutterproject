import 'dart:io';import 'package:flutter/foundation.dart';import 'package:firebase_storage/firebase_storage.dart';import 'package:http/http.dart';import 'package:uuid/uuid.dart';import 'dart:convert';import 'dart:math';  // URL de l'API d';  final String _aiApiUrl = 'https://api.votre-service-ia.com';  final String _apiKey = 'votre_cle_api';      debugPrint('[AIService] Transcription d\'un fichier audio';      final audioRef = _storage.ref().child('temp/audio/$audioId.mp3';      // Appeler l';        Uri.parse('$_aiApiUrl/transcribe';          'Content-Type': 'application/json';          'Authorization': 'Bearer $_apiKey';          'audio_url';          'language': 'fr';        final String transcription = data['transcription'] ?? '';        debugPrint('[AIService] Transcription réussie: ${transcription.substring(0, math.min(50, transcription.length)}...';        debugPrint('[AIService] Erreur lors de la transcription: ${response.statusCode} - ${response.body}';        return 'Erreur de transcription';      debugPrint('[AIService] Erreur lors de la transcription audio: $e';      return 'Erreur: $e';  // Générer une reconstruction vidéo d';      debugPrint('[AIService] Génération d\'une reconstruction d\'accident';      // Appeler l';        Uri.parse('$_aiApiUrl/generate-accident-video';          'Content-Type': 'application/json';          'Authorization': 'Bearer $_apiKey';          'photo_urls';          'description';          'duration';          'quality': 'high';        final String videoUrl = data['video_url'] ?? '';        debugPrint('[AIService] Reconstruction générée avec succès: $videoUrl';        debugPrint('[AIService] Erreur lors de la génération de la reconstruction: ${response.statusCode} - ${response.body}';        // En cas d';        return 'https://example.com/video-placeholder.mp4';      debugPrint('[AIService] Erreur lors de la génération de la reconstruction: $e';      // En cas d';      return 'https://example.com/video-placeholder.mp4';  // Générer un croquis d';      debugPrint('[AIService] Génération d\'un croquis d\'accident';      // Appeler l';        Uri.parse('$_aiApiUrl/generate-accident-sketch';          'Content-Type': 'application/json';          'Authorization': 'Bearer $_apiKey';          'photo_urls';          'description';          'style': 'diagram';          'view': 'top-down';        final String sketchUrl = data['sketch_url'] ?? '';        debugPrint('[AIService] Croquis généré avec succès: $sketchUrl';        debugPrint('[AIService] Erreur lors de la génération du croquis: ${response.statusCode} - ${response.body}';        // En cas d';        return 'https://example.com/sketch-placeholder.png';      debugPrint('[AIService] Erreur lors de la génération du croquis: $e';      // En cas d';      return 'https://example.com/sketch-placeholder.png';  // Analyser les dommages d';      debugPrint('[AIService] Analyse des dommages à partir de ${photoUrls.length} photos';      // Appeler l'API d';        Uri.parse('$_aiApiUrl/analyze-damages';          'Content-Type': 'application/json';          'Authorization': 'Bearer $_apiKey';          'photo_urls';        debugPrint('[AIService] Analyse des dommages réussie';        debugPrint('[AIService] Erreur lors de l\'analyse des dommages: ${response.statusCode} - ${response.body}';        // En cas d';          'severity': 'medium';          'estimated_cost';            'min';            'max';            'currency': 'TND';          'damaged_parts';              'part': 'front_bumper';              'severity': 'high';              'confidence';              'part': 'hood';              'severity': 'medium';              'confidence';              'part': 'headlight_left';              'severity': 'high';              'confidence';          'repair_time_estimate';            'min_days';            'max_days';      debugPrint('[AIService] Erreur lors de l\'analyse des dommages: $e';      // En cas d';        'severity': 'unknown';        'error';        'damaged_parts';  // Vérifier l'authenticité d';      debugPrint('[AIService] Vérification de l\'authenticité d\'un document';      final documentRef = _storage.ref().child('temp/documents/$documentId.jpg';      // Appeler l'API de vérification d';        Uri.parse('$_aiApiUrl/verify-document';          'Content-Type': 'application/json';          'Authorization': 'Bearer $_apiKey';          'document_url';        final bool isAuthentic = data['is_authentic';        final double confidence = data['confidence';        debugPrint('[AIService] Vérification d\'authenticité: $isAuthentic (confiance: $confidence)';        debugPrint('[AIService] Erreur lors de la vérification d\'authenticité: ${response.statusCode} - ${response.body}';      debugPrint('[AIService] Erreur lors de la vérification d\'authenticité: $e';}