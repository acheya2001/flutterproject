import 'package:flutter/foundation.dart';import 'package:url_launcher/url_launcher.dart';/// 🚀 Service d';      debugPrint('[EmailService] === ENVOI EMAIL GÉNÉRIQUE ===';      debugPrint('[EmailService] 📧 Destinataire: $to';      debugPrint('[EmailService] 📋 Sujet: $subject';      // Validation de l';        throw Exception('Format d\'email invalide: $to';      // Tentative d'ouverture de l';      debugPrint('[EmailService] ✅ Email envoyé à: $to';      debugPrint('[EmailService] ❌ Erreur envoi email: $e';      debugPrint('[EmailService] === ENVOI INVITATION ===';      debugPrint('[EmailService] 📧 Destinataire: $email';      debugPrint('[EmailService] 🔑 Code session: $sessionCode';      debugPrint('[EmailService] 🆔 ID session: $sessionId';      // Validation de l';        throw Exception('Format d\'email invalide: $email';      // Créer le contenu de l';      // Tentative d'ouverture de l';      debugPrint('[EmailService] ✅ Invitation traitée pour: $email';      debugPrint('[EmailService] ❌ Erreur: $e';  /// 📱 Affiche le contenu de l';    debugPrint('[EmailService] ';    debugPrint('[EmailService] ╔══════════════════════════════════════════════════════════╗';    debugPrint('[EmailService] ║                    📧 EMAIL À ENVOYER                    ║';    debugPrint('[EmailService] ╠══════════════════════════════════════════════════════════╣';    debugPrint('[EmailService] ║ 📧 DESTINATAIRE: $email';    debugPrint('[EmailService] ║ 📋 SUJET: Invitation - Constat d\'accident collaboratif';    debugPrint('[EmailService] ║ 🔑 CODE SESSION: $sessionCode';    debugPrint('[EmailService] ╠══════════════════════════════════════════════════════════╣';    debugPrint('[EmailService] ║ 📝 MESSAGE:';    debugPrint('[EmailService] ║';    final lines = content.split('\n';      debugPrint('[EmailService] ║ $line';    debugPrint('[EmailService] ║';    debugPrint('[EmailService] ╚══════════════════════════════════════════════════════════╝';    debugPrint('[EmailService] ';    debugPrint('[EmailService] 🎯 ACTIONS POSSIBLES:';    debugPrint('[EmailService] 1. 📋 COPIEZ le contenu ci-dessus';    debugPrint('[EmailService] 2. 📧 ENVOYEZ-LE à: $email';    debugPrint('[EmailService] 3. 🔑 PARTAGEZ le code: $sessionCode';    debugPrint('[EmailService] ';  /// 📱 Ouvre l';      debugPrint('[EmailService] 📱 Tentative d\'ouverture de l\'app email...';      final subject = Uri.encodeComponent('Invitation - Constat d\'accident collaboratif';      final mailtoUrl = 'mailto:$email?subject=$subject&body=$body';        debugPrint('[EmailService] ✅ Application email ouverte';        debugPrint('[EmailService] 📧 IMPORTANT: Appuyez sur ENVOYER dans votre app email!';        debugPrint('[EmailService] ⚠️ Impossible d\'ouvrir l\'app email';        debugPrint('[EmailService] 💡 Utilisez le contenu affiché dans les logs ci-dessus';      debugPrint('[EmailService] ❌ Erreur ouverture app email: $e';      debugPrint('[EmailService] 💡 Utilisez le contenu affiché dans les logs ci-dessus';  /// 📝 Crée le contenu de l'email d';    return ''';Vous avez été invité(e) à participer à un constat d'accident collaboratif via l';1. Ouvrez l';Si vous n'avez pas l';L';Code: $sessionCode''';  /// 📱 Affiche le contenu de l';    debugPrint('[EmailService] ';    debugPrint('[EmailService] ╔══════════════════════════════════════════════════════════╗';    debugPrint('[EmailService] ║                    📧 EMAIL GÉNÉRIQUE                    ║';    debugPrint('[EmailService] ╠══════════════════════════════════════════════════════════╣';    debugPrint('[EmailService] ║ 📧 DESTINATAIRE: $to';    debugPrint('[EmailService] ║ 📋 SUJET: $subject';    debugPrint('[EmailService] ╠══════════════════════════════════════════════════════════╣';    debugPrint('[EmailService] ║ 📄 CONTENU:';    final lines = htmlBody.split('\n';      debugPrint('[EmailService] ║ $line';      debugPrint('[EmailService] ║ ... (contenu tronqué)';    debugPrint('[EmailService] ╚══════════════════════════════════════════════════════════╝';    debugPrint('[EmailService] ';  /// 📱 Tente d'ouvrir l';      // Convertir HTML en texte simple pour l';          .replaceAll(RegExp(r'<[^>]*>'), '';          .replaceAll('&nbsp;', ' ';          .replaceAll('&amp;', '&';          .replaceAll('&lt;', '<';          .replaceAll('&gt;', '>';      final emailUrl = 'mailto:$to?subject=${Uri.encodeComponent(subject)}&body=${Uri.encodeComponent(textBody)}';      debugPrint('[EmailService] 📱 Tentative ouverture app email...';      debugPrint('[EmailService] 🔗 URL: ${emailUrl.substring(0, 100)}...';        debugPrint('[EmailService] ✅ App email ouverte';        debugPrint('[EmailService] ⚠️ Impossible d\'ouvrir l\'app email';      debugPrint('[EmailService] ❌ Erreur ouverture app email: $e';      debugPrint('[EmailService] 💡 Utilisez le contenu affiché dans les logs ci-dessus';    final emailRegex = RegExp(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$';