import 'package:flutter/foundation.dart';import 'package:http/http.dart';import 'dart:convert';import 'package:url_launcher/url_launcher.dart';/// 🚀 Service d';  // 📧 Configuration pour service d';  static const String _webhookUrl = 'https://hook.eu2.make.com/your-webhook-id';      debugPrint('[ModernEmail] === ENVOI INVITATION MODERNE ===';      debugPrint('[ModernEmail] 📧 Destinataire: $email';      debugPrint('[ModernEmail] 🔑 Code session: $sessionCode';      debugPrint('[ModernEmail] 🆔 ID session: $sessionId';      // Validation de l';        throw Exception('Format d\'email invalide: $email';      // Créer le contenu de l';      // 2. Tentative d';      // 3. Fallback : Ouvrir l';      debugPrint('[ModernEmail] ✅ Invitation traitée pour: $email';      debugPrint('[ModernEmail] ❌ Erreur: $e';  /// 📱 Affiche le contenu de l';    debugPrint('[ModernEmail] ';    debugPrint('[ModernEmail] ╔══════════════════════════════════════════════════════════╗';    debugPrint('[ModernEmail] ║                    📧 EMAIL À ENVOYER                    ║';    debugPrint('[ModernEmail] ╠══════════════════════════════════════════════════════════╣';    debugPrint('[ModernEmail] ║ 📧 DESTINATAIRE: $email';    debugPrint('[ModernEmail] ║ 📋 SUJET: Invitation - Constat d\'accident collaboratif';    debugPrint('[ModernEmail] ║ 🔑 CODE SESSION: $sessionCode';    debugPrint('[ModernEmail] ╠══════════════════════════════════════════════════════════╣';    debugPrint('[ModernEmail] ║ 📝 MESSAGE:';    debugPrint('[ModernEmail] ║';    final lines = content.split('\n';      debugPrint('[ModernEmail] ║ $line';    debugPrint('[ModernEmail] ║';    debugPrint('[ModernEmail] ╚══════════════════════════════════════════════════════════╝';    debugPrint('[ModernEmail] ';    debugPrint('[ModernEmail] 🎯 ACTIONS POSSIBLES:';    debugPrint('[ModernEmail] 1. 📋 COPIEZ le contenu ci-dessus';    debugPrint('[ModernEmail] 2. 📧 ENVOYEZ-LE à: $email';    debugPrint('[ModernEmail] 3. 🔑 PARTAGEZ le code: $sessionCode';    debugPrint('[ModernEmail] ';  /// 🚀 Tentative d';      debugPrint('[ModernEmail] 🚀 Tentative d\'envoi automatique...';        debugPrint('[ModernEmail] ✅ Email envoyé automatiquement via webhook!';        debugPrint('[ModernEmail] ✅ Email envoyé automatiquement via HTTP!';      debugPrint('[ModernEmail] ⚠️ Envoi automatique non disponible';      debugPrint('[ModernEmail] ❌ Erreur envoi automatique: $e';      if (_webhookUrl.contains('your-webhook-id';        debugPrint('[ModernEmail] ⚠️ Webhook non configuré (URL par défaut)';        headers: {'Content-Type': 'application/json';          'to';          'subject': 'Invitation - Constat d\'accident collaboratif';          'message';          'session_code';          'from': 'Constat Tunisie App';      debugPrint('[ModernEmail] ❌ Erreur webhook: $e';        Uri.parse('https://httpbin.org/post';        headers: {'Content-Type': 'application/json';          'email_data';            'to';            'subject': 'Invitation Constat';            'message';            'code';        debugPrint('[ModernEmail] ✅ Données envoyées au service HTTP';        return false; // On retourne false car ce n'est pas un vrai envoi d';      debugPrint('[ModernEmail] ❌ Erreur HTTP: $e';  /// 📱 Ouvre l';      debugPrint('[ModernEmail] 📱 Tentative d\'ouverture de l\'app email...';      final subject = Uri.encodeComponent('Invitation - Constat d\'accident collaboratif';      final mailtoUrl = 'mailto:$email?subject=$subject&body=$body';        debugPrint('[ModernEmail] ✅ Application email ouverte';        debugPrint('[ModernEmail] ⚠️ Impossible d\'ouvrir l\'app email';        debugPrint('[ModernEmail] 💡 Utilisez le contenu affiché dans les logs ci-dessus';      debugPrint('[ModernEmail] ❌ Erreur ouverture app email: $e';  /// 📝 Crée le contenu de l'email d';    return ''';Vous avez été invité(e) à participer à un constat d'accident collaboratif via l';1. Ouvrez l';Si vous n'avez pas l';L';Code: $sessionCode''';    final emailRegex = RegExp(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$';    final email = emailTest ?? 'hammami123rahma@gmail.com';    final sessionCode = 'TEST${DateTime.now().millisecondsSinceEpoch % 1000}';    final sessionId = 'test_${DateTime.now().millisecondsSinceEpoch}';    debugPrint('[ModernEmail] === TEST DU SERVICE ===';    debugPrint('[ModernEmail] Test ${success ? "réussi" : "échoué"}';