import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:cloud_firestore/cloud_firestore.dart';import '../enums/app_enums.dart';import '../constants/app_constants.dart';import '../services/firebase_service.dart';import '../../shared/models/user_model.dart';      final userRole = UserRole.fromString(userData['role';      final userPermissions = (userData['permissions';  /// 📋 Récupère toutes les permissions d';      final userRole = UserRole.fromString(userData['role';      final userPermissions = (userData['permissions';      final currentPermissions = (userData['permissions';          'permissions';          'updatedAt';          'updatedBy';        // Log de l';          'add';  /// ➖ Retire une permission d';      final currentPermissions = (userData['permissions';          'permissions';          'updatedAt';          'updatedBy';        // Log de l';          'remove';  /// 🔄 Met à jour toutes les permissions d';        'permissions';        'updatedAt';        'updatedBy';      // Log de l';        'update';        metadata: {'newPermissions';      final managerRole = UserRole.fromString(managerDoc.data()!['role';      final targetRole = UserRole.fromString(targetDoc.data()!['role';  /// 🏢 Vérifie les permissions dans le contexte d';      // Vérifier d';      final userRole = UserRole.fromString(userData['role';          return userData['companyId';          return userData['agencyId';          return userData['agencyId';      await _firestore.collection('permission_logs';        'userId';        'action';        'permission';        'changedBy';        'timestamp';        'metadata';      // Log silencieux en cas d';      final userRole = UserRole.fromString(userData['role';      final accountStatus = AccountStatus.fromString(userData['status';        UserRole.superAdmin: ['*';        UserRole.companyAdmin: ['/company-admin', '/admin';        UserRole.agencyAdmin: ['/agency-admin', '/admin';        UserRole.agent: ['/agent';        UserRole.driver: ['/driver';        UserRole.expert: ['/expert';      if (allowedRoutes.contains('*';/// 👤 Provider pour les permissions de l';