import 'dart:io';import 'package:firebase_storage/firebase_storage.dart';import 'package:flutter/foundation.dart';/// 📸 Service d'upload d';      debugPrint('[ImageUpload] 📤 Upload image: $folder/$fileName';      final ref = _storage.ref().child('$folder/$fileName';      // Attendre la fin de l';      // Récupérer l';      debugPrint('[ImageUpload] ✅ Upload réussi: $downloadUrl';      debugPrint('[ImageUpload] ❌ Erreur upload: $e';      throw Exception('Erreur lors de l\'upload de l\'image: $e';      final fileName = '${baseFileName}_$i.jpg';      debugPrint('[ImageUpload] 🗑️ Suppression image: $imageUrl';      // Créer la référence depuis l';      debugPrint('[ImageUpload] ✅ Suppression réussie';      debugPrint('[ImageUpload] ❌ Erreur suppression: $e';      throw Exception('Erreur lors de la suppression de l\'image: $e';  /// 📊 Obtenir les métadonnées d';      debugPrint('[ImageUpload] ❌ Erreur métadonnées: $e';      throw Exception('Erreur lors de la récupération des métadonnées: $e';  /// 📏 Obtenir la taille d';      debugPrint('[ImageUpload] ❌ Erreur taille: $e';    return '${prefix}_$timestamp.$extension';      debugPrint('[ImageUpload] ❌ Erreur listage: $e';      debugPrint('[ImageUpload] 🧹 Nettoyage dossier: $folder';          debugPrint('[ImageUpload] 🗑️ Suppression image orpheline: $imageUrl';      debugPrint('[ImageUpload] ✅ Nettoyage terminé';      debugPrint('[ImageUpload] ❌ Erreur nettoyage: $e';  /// 📊 Obtenir les statistiques d';        'count';        'totalSize';        'averageSize';      debugPrint('[ImageUpload] ❌ Erreur statistiques: $e';        'count';        'totalSize';        'averageSize';      debugPrint('[ImageUpload] 🔄 Copie image vers: $targetFolder/$targetFileName';      // Télécharger l';        throw Exception('Impossible de télécharger l\'image source';      final targetRef = _storage.ref().child('$targetFolder/$targetFileName';      // Récupérer l';      debugPrint('[ImageUpload] ✅ Copie réussie: $newUrl';      debugPrint('[ImageUpload] ❌ Erreur copie: $e';      throw Exception('Erreur lors de la copie de l\'image: $e';  /// 🔒 Vérifier les permissions d';      // Tenter d';      final testRef = _storage.ref().child('test/permission_check.txt';      await testRef.putString('test';      debugPrint('[ImageUpload] ❌ Pas de permissions d\'upload: $e';      // Pour l';      // TODO: Ajouter la compression d';      debugPrint('[ImageUpload] ❌ Erreur upload optimisé: $e';        debugPrint('[ImageUpload] ❌ Tentative $attempts/$maxRetries échouée: $e';    throw Exception('Échec de l\'upload après $maxRetries tentatives';