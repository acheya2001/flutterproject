import 'package:flutter/foundation.dart';import 'package:url_launcher/url_launcher.dart';import 'package:http/http.dart';import 'dart:convert';/// 🔍 Service d';  static const String _tag = '[DebugEmailService]';      'timestamp';      'to';      'subject';      'htmlBodyLength';      'textBodyLength';      'steps';      'errors';      'success';      'method': 'unknown';      debugPrint('$_tag ═══════════════════════════════════════';      debugPrint('$_tag 🚀 DÉBUT ENVOI EMAIL AVEC DÉBUGGAGE';      debugPrint('$_tag ═══════════════════════════════════════';      debugPrint('$_tag 📧 Destinataire: $to';      debugPrint('$_tag 📋 Sujet: $subject';      debugPrint('$_tag 📄 Taille HTML: ${htmlBody.length} caractères';      debugPrint('$_tag 📄 Taille Texte: ${textBody?.length ?? 0} caractères';      debugPrint('$_tag ⏰ Timestamp: ${debugInfo['timestamp']}';      debugInfo['steps'].add('Début du processus d\'envoi';      // Étape 1: Validation de l';      debugPrint('$_tag ';      debugPrint('$_tag 🔍 ÉTAPE 1: VALIDATION EMAIL';      debugPrint('$_tag ─────────────────────────────────────';        final error = 'Format d\'email invalide: $to';        debugInfo['errors';        debugPrint('$_tag ❌ $error';      debugPrint('$_tag ✅ Email valide: $to';      debugInfo['steps'].add('Email validé';      debugPrint('$_tag ';      debugPrint('$_tag 🔍 ÉTAPE 2: PRÉPARATION CONTENU';      debugPrint('$_tag ─────────────────────────────────────';      debugPrint('$_tag 📝  texte préparé: ${finalTextBody.length} caractères';      debugInfo['steps'].add(' préparé';      // Étape 3: Tentative d';      debugPrint('$_tag ';      debugPrint('$_tag 🔍 ÉTAPE 3: TENTATIVES D\'ENVOI';      debugPrint('$_tag ─────────────────────────────────────';      if (urlResult['success';        debugInfo['method'] = 'url_launcher';        debugInfo['success';      if (webhookResult['success';        debugInfo['method'] = 'webhook';        debugInfo['success';      debugInfo['method'] = 'log_display';      debugInfo['success';      debugPrint('$_tag ❌ ERREUR GÉNÉRALE: $e';      debugInfo['errors'].add('Erreur générale: $e';      debugInfo['success';      debugPrint('$_tag ';      debugPrint('$_tag 📊 RÉSUMÉ FINAL';      debugPrint('$_tag ─────────────────────────────────────';      debugPrint('$_tag 🎯 Succès: ${debugInfo['success']}';      debugPrint('$_tag 🔧 Méthode: ${debugInfo['method']}';      debugPrint('$_tag 📝 Étapes: ${debugInfo['steps'].length}';      debugPrint('$_tag ❌ Erreurs: ${debugInfo['errors'].length}';      debugPrint('$_tag ═══════════════════════════════════════';  /// 🔗 Tentative d';    final result = <String, dynamic>{'success': false, 'error';      debugPrint('$_tag 🔗 Tentative URL Launcher...';      debugInfo['steps'].add('Tentative URL Launcher';      // Encoder les paramètres pour l';      final emailUrl = 'mailto:$to?subject=$encodedSubject&body=$encodedBody';      debugPrint('$_tag 🔗 URL générée: ${emailUrl.substring(0, 100)}...';      // Vérifier si l';      debugPrint('$_tag 🔍 Peut lancer URL: $canLaunch';        debugPrint('$_tag ✅ URL Launcher réussi';        debugInfo['steps'].add('URL Launcher réussi';        result['success';        const error = 'Impossible de lancer l\'URL mailto';        debugPrint('$_tag ❌ $error';        debugInfo['errors';        result['error';      final error = 'Erreur URL Launcher: $e';      debugPrint('$_tag ❌ $error';      debugInfo['errors';      result['error';  /// 🌐 Tentative d';    final result = <String, dynamic>{'success': false, 'error';      debugPrint('$_tag 🌐 Tentative Webhook...';      debugInfo['steps'].add('Tentative Webhook';      const webhookUrl = 'https://httpbin.org/post';        'to';        'subject';        'html';        'text';        'timestamp';        'source': 'constat_tunisie_app';      debugPrint('$_tag 📤 Envoi vers: $webhookUrl';      debugPrint('$_tag 📦 Payload: ${payload.keys.join(', ')}';          'Content-Type': 'application/json';          'User-Agent': 'ConstatTunisie/1.0';      debugPrint('$_tag 📨 Réponse HTTP: ${response.statusCode}';      debugPrint('$_tag 📄 Corps réponse: ${response.body.substring(0, 200)}...';        debugPrint('$_tag ✅ Webhook réussi';        debugInfo['steps'].add('Webhook réussi';        result['success';        final error = 'Webhook échec: ${response.statusCode}';        debugPrint('$_tag ❌ $error';        debugInfo['errors';        result['error';      final error = 'Erreur Webhook: $e';      debugPrint('$_tag ❌ $error';      debugInfo['errors';      result['error';    debugPrint('$_tag 📋 Affichage dans les logs (fallback)...';    debugInfo['steps'].add('Affichage logs';    debugPrint('$_tag ';    debugPrint('$_tag ╔══════════════════════════════════════════════════════════╗';    debugPrint('$_tag ║                    📧 EMAIL GÉNÉRÉ                       ║';    debugPrint('$_tag ╠══════════════════════════════════════════════════════════╣';    debugPrint('$_tag ║ 📧 DESTINATAIRE: $to';    debugPrint('$_tag ║ 📋 SUJET: $subject';    debugPrint('$_tag ╠══════════════════════════════════════════════════════════╣';    debugPrint('$_tag ║ 📄 CONTENU TEXTE:';    final lines = textBody.split('\n';      debugPrint('$_tag ║ ${lines[i]}';      debugPrint('$_tag ║ ... (${lines.length - 20} lignes supplémentaires)';    debugPrint('$_tag ╠══════════════════════════════════════════════════════════╣';    debugPrint('$_tag ║ 🌐 CONTENU HTML: ${htmlBody.length} caractères';    debugPrint('$_tag ╚══════════════════════════════════════════════════════════╝';    debugPrint('$_tag ';  /// 🔍 Validation de l';    final emailRegex = RegExp(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$';        .replaceAll(RegExp(r'<br\s*/?>', caseSensitive: false), '\n';        .replaceAll(RegExp(r'<p[^>]*>', caseSensitive: false), '\n';        .replaceAll(RegExp(r'</p>', caseSensitive: false), '\n';        .replaceAll(RegExp(r'<div[^>]*>', caseSensitive: false), '\n';        .replaceAll(RegExp(r'</div>', caseSensitive: false), '\n';        .replaceAll(RegExp(r'<[^>]*>'), '';        .replaceAll('&nbsp;', ' ';        .replaceAll('&amp;', '&';        .replaceAll('&lt;', '<';        .replaceAll('&gt;', '>';        .replaceAll('&quot;', '"';        .replaceAll(RegExp(r'\n\s*\n'), '\n\n';  /// 📊 Obtenir les statistiques d';      'service': 'DebugEmailService';      'version': '1.0.0';      'methods': ['url_launcher', 'webhook', 'log_display';      'timestamp';      'timestamp';      'tests';    debugPrint('$_tag 🧪 TEST DE CONNECTIVITÉ EMAIL';    debugPrint('$_tag ═══════════════════════════════════════';      final testUri = Uri.parse('mailto:test@example.com';      results['tests']['url_launcher';        'available';        'error';      debugPrint('$_tag ✅ URL Launcher: $canLaunch';      results['tests']['url_launcher';        'available';        'error';      debugPrint('$_tag ❌ URL Launcher: $e';        Uri.parse('https://httpbin.org/status/200';      results['tests']['http';        'available';        'status_code';        'error';      debugPrint('$_tag ✅ HTTP: ${response.statusCode}';      results['tests']['http';        'available';        'error';      debugPrint('$_tag ❌ HTTP: $e';    debugPrint('$_tag ═══════════════════════════════════════';