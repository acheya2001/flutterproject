import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/foundation.dart';import 'firestore_connection_manager.dart';/// 🚀 Service d'auto-setup qui s';    if (_setupCompleted';      debugPrint(';      if (!usersExists';        debugPrint(';        final connectionResult = await FirestoreConnectionManager.createAdminsWithConnectionManager(';        if (connectionResult['success] == true';          debugPrint('[AUTO_SETUP] ✅ Admins crees via gestionnaire de connexion';          debugPrint(';          await _createUsersCollectionWithAdmins(';        debugPrint(';        if (adminCount < 4';          debugPrint('[AUTO_SETUP] ⚠️ Admins manquants (adminCount/4') - Creation...';      debugPrint(';    } catch (e';      debugPrint('[AUTO_SETUP] ❌ Erreur auto-setup:  + e.toString()';      // En cas d';  static Future<bool> _checkUsersCollectionExists(';      // Essayer d';          .collection(';      if (cacheSnapshot.docs.isNotEmpty';        debugPrint(';    } catch (e';      debugPrint('[AUTO_SETUP] Cache vide ou inaccessible:  + e.toString()';          .collection(';    } catch (e';      debugPrint(';  static Future<int> _countAdminCompagnies(';          .collection('users';          .where('role', isEqualTo: ';    } catch (e';      debugPrint(';  static Future<void> _createUsersCollectionWithAdmins(';    debugPrint('[AUTO_SETUP] 🏗️ Creation collection users...';        'id': 'admin_star_auto';        'email': 'admin.star@assurance.tn';        'compagnieId': 'star-assurance';        'compagnieNom': 'STAR Assurance';        'id': 'admin_comar_auto';        'email': 'admin.comar@assurance.tn';        'compagnieId': 'comar-assurance';        'compagnieNom': 'COMAR Assurance';        'id': 'admin_gat_auto';        'email': 'admin.gat@assurance.tn';        'compagnieId': 'gat-assurance';        'compagnieNom': 'GAT Assurance';        'id': 'admin_maghrebia_auto';        'email': 'admin.maghrebia@assurance.tn';        'compagnieId': 'maghrebia-assurance';        'compagnieNom': ';    await Future.wait(futures';    debugPrint('[AUTO_SETUP] ✅ ';    for (int attempt = 1; attempt <= maxRetries; attempt++';        debugPrint('[AUTO_SETUP] 🔄 Tentative $attempt/$maxRetries pour '{adminData['email']}';          'uid': adminData['id';          'email': adminData['email';          'nom': 'Admin';          'prenom': adminData['compagnieNom';          'role': 'admin_compagnie';          'status': 'actif';          'compagnieId': adminData['compagnieId';          'compagnieNom': adminData['compagnieNom';          'created_at: FieldValue.serverTimestamp(';          'created_by': 'auto_setup_service';          'source': 'auto_creation';          'isLegitimate';          'isActive';          'password_reset_required';          'auto_created';          'retry_attempt';        // Essayer d';        final timeoutDuration = Duration(seconds: 5 * attempt';            .collection('users';            .doc(adminData[';            .timeout(timeoutDuration';        debugPrint('[AUTO_SETUP] ✅ Admin cree: '{adminData['email']} (tentative attempt')';        debugPrint('[AUTO_SETUP] ❌ Tentative $attempt echouee pour '{adminData['email';        if (attempt == maxRetries';          debugPrint('[AUTO_SETUP] 💥 Échec definitif pour '{adminData['email']} apres ';  static Future<void> _storeAdminForLaterSync(Map<String, String> adminData';      debugPrint('[AUTO_SETUP] 💾 Stockage local pour sync ulterieure: '{adminData['email']}';          .collection('pending_admins';          .doc(adminData['id]!';            'pending_sync';            ';    } catch (e';      debugPrint(';    final existingAdmins = await _getExistingAdminEmails(';      'admin.star@assurance.tn';      'admin.comar@assurance.tn';      'admin.gat@assurance.tn';      ';        await _createSingleAdmin(adminData';    debugPrint('[AUTO_SETUP] ✅ ';  static Future<List<String>> _getExistingAdminEmails(';          .collection('users';          .where('role', isEqualTo: ';          .map((doc) => doc.data(')['email'] as String? ?? ';    } catch (e';  /// 📊 Obtenir les donnees d';      'admin.star@assurance.tn';        'id': 'admin_star_auto';        'email': 'admin.star@assurance.tn';        'compagnieId': 'star-assurance';        'compagnieNom': 'STAR Assurance';      'admin.comar@assurance.tn';        'id': 'admin_comar_auto';        'email': 'admin.comar@assurance.tn';        'compagnieId': 'comar-assurance';        'compagnieNom': 'COMAR Assurance';      'admin.gat@assurance.tn';        'id': 'admin_gat_auto';        'email': 'admin.gat@assurance.tn';        'compagnieId': 'gat-assurance';        'compagnieNom': 'GAT Assurance';      'admin.maghrebia@assurance.tn';        'id': 'admin_maghrebia_auto';        'email': 'admin.maghrebia@assurance.tn';        'compagnieId': 'maghrebia-assurance';        'compagnieNom': ';  static Future<void> _optimizeFirestore(';      debugPrint(';    } catch (e';      debugPrint('[AUTO_SETUP] ⚠️ Optimisation partielle:  + e.toString()';  /// 📊 Obtenir le statut de l';        'setup_completed';        'users_collection_exists';        'admin_count';        'all_admins_present';        'status': adminCount >= 4 ? 'OK' : ';    } catch (e';        'setup_completed';        'error: e.toString(';        'status': ';