import 'package:flutter/foundation.dart';import 'package:firebase_messaging/firebase_messaging.dart';import 'package:cloud_firestore/cloud_firestore.dart';import 'package:http/http.dart';import 'dart:convert';  // URL de l';  final String _smsApiUrl = 'https://api.votre-service-sms.com';  final String _smsApiKey = 'votre_cle_api_sms';  // URL de l';  final String _emailApiUrl = 'https://api.votre-service-email.com';  final String _emailApiKey = 'votre_cle_api_email';      debugPrint('[NotificationService] Initialisation du service de notifications';      // Demander l';      debugPrint('[NotificationService] Autorisation des notifications: ${settings.authorizationStatus}';      debugPrint('[NotificationService] Token FCM: $token';      debugPrint('[NotificationService] Erreur lors de l\'initialisation: $e';    debugPrint('[NotificationService] Message reçu en premier plan: ${message.messageId}';    debugPrint('[NotificationService] Titre: ${message.notification?.title}';    debugPrint('[NotificationService] Corps: ${message.notification?.body}';    debugPrint('[NotificationService] Données: ${message.data}';    // Ici, vous pouvez afficher une notification locale ou mettre à jour l';  // Gérer les messages ouverts par l';    debugPrint('[NotificationService] Message ouvert par l\'utilisateur: ${message.messageId}';    debugPrint('[NotificationService] Données: ${message.data}';      debugPrint('[NotificationService] Enregistrement du token pour l\'utilisateur: $userId';        await _firestore.collection('user_tokens';          'token';          'platform';          'updatedAt';        debugPrint('[NotificationService] Token enregistré avec succès';      debugPrint('[NotificationService] Erreur lors de l\'enregistrement du token: $e';      debugPrint('[NotificationService] Envoi d\'une notification à l\'utilisateur: $userId';      // Récupérer le token de l';      final tokenDoc = await _firestore.collection('user_tokens';        final String? token = tokenDoc.data()!['token';            Uri.parse('https://fcm.googleapis.com/fcm/send';              'Content-Type': 'application/json';              'Authorization': 'key=VOTRE_CLE_SERVEUR_FCM';              'to';              'notification';                'title';                'body';              'data';            debugPrint('[NotificationService] Notification envoyée avec succès';            debugPrint('[NotificationService] Erreur lors de l\'envoi de la notification: ${response.statusCode} - ${response.body}';        debugPrint('[NotificationService] Token non trouvé pour l\'utilisateur: $userId';      debugPrint('[NotificationService] Erreur lors de l\'envoi de la notification: $e';      debugPrint('[NotificationService] Envoi d\'un SMS au numéro: $to';      // Appeler l';        Uri.parse('$_smsApiUrl/send';          'Content-Type': 'application/json';          'Authorization': 'Bearer $_smsApiKey';          'to';          'message';        debugPrint('[NotificationService] SMS envoyé avec succès';        debugPrint('[NotificationService] Erreur lors de l\'envoi du SMS: ${response.statusCode} - ${response.body}';      debugPrint('[NotificationService] Erreur lors de l\'envoi du SMS: $e';      debugPrint('[NotificationService] Envoi d\'un email à: $to';      // Appeler l';        Uri.parse('$_emailApiUrl/send';          'Content-Type': 'application/json';          'Authorization': 'Bearer $_emailApiKey';          'to';          'subject';          'body';          'attachments';        debugPrint('[NotificationService] Email envoyé avec succès';        debugPrint('[NotificationService] Erreur lors de l\'envoi de l\'email: ${response.statusCode} - ${response.body}';      debugPrint('[NotificationService] Erreur lors de l\'envoi de l\'email: $e';      debugPrint('[NotificationService] Désabonnement des notifications pour l\'utilisateur: $userId';      // Supprimer le token de l';      await _firestore.collection('user_tokens';      debugPrint('[NotificationService] Désabonnement réussi';      debugPrint('[NotificationService] Erreur lors du désabonnement: $e';