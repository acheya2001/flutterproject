import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/material.dart';/// üè¢ Hi√©rarchie d';/// 1. SUPER_ADMIN - Admin principal de l';/// 2. ADMIN_COMPAGNIE - Admin de chaque compagnie d';  superAdmin,      // Admin principal de l';  adminCompagnie,  // Admin d';  adminAgence,     // Admin d';      id: id ?? data['id'] ?? '';      email: data['email'] ?? '';      nom: data['nom'] ?? '';      prenom: data['prenom'] ?? '';      telephone: data['telephone'] ?? '';      typeAdmin: _parseTypeAdmin(data['typeAdmin';      compagnieId: data['compagnieId';      agenceId: data['agenceId';      gouvernoratsGeres: List<String>.from(data['gouvernoratsGeres';      permissions: List<String>.from(data['permissions';      actif: data['actif';      dateCreation: (data['dateCreation';      derniereConnexion: (data['derniereConnexion';      statistiques: Map<String, int>.from(data['statistiques';        'demandesTraitees';        'demandesApprouvees';        'demandesRefusees';      'email';      'nom';      'prenom';      'telephone';      'typeAdmin': typeAdmin.toString().split('.';      'compagnieId';      'agenceId';      'gouvernoratsGeres';      'permissions';      'actif';      'dateCreation';      'derniereConnexion';      'statistiques';  /// Parser le type d';      case 'superadmin';      case 'admincompagnie';      case 'adminagence';  /// V√©rifier si l';        return demande['compagnie';               _getCompagnieFromName(demande['compagnie';        return demande['compagnie';               demande['agence';               _getCompagnieFromName(demande['compagnie';               _getAgenceFromName(demande['agence';        return demande['gouvernorat';               gouvernoratsGeres.contains(demande['gouvernorat';  /// Obtenir les permissions selon le type d';          'approuver_toutes_demandes';          'gerer_admins';          'gerer_compagnies';          'voir_statistiques_globales';          'gerer_experts';          'gerer_constats';          'approuver_demandes_compagnie';          'gerer_agences';          'gerer_agents_compagnie';          'voir_statistiques_compagnie';          'gerer_contrats_compagnie';          'approuver_demandes_agence';          'gerer_agents_agence';          'voir_statistiques_agence';          'gerer_contrats_agence';          'approuver_demandes_region';          'voir_statistiques_region';          'gerer_constats_region';  /// Obtenir le nom d'affichage du type d';        return 'Super Administrateur';        return 'Admin Compagnie';        return 'Admin Agence';        return 'Admin R√©gional';        return 'Gestion compl√®te de l\'application';        return 'Gestion de la compagnie et ses agences';        return 'Gestion de l\'agence et ses agents';        return 'Gestion r√©gionale (${gouvernoratsGeres.join(', ')})';    // Pour l';    // Pour l';    return 'AdminHierarchyModel(id: $id, email: $email, type: $typeAdminNom)';/// üìä Mod√®le pour une demande d'inscription avec workflow d';      id: id ?? data['id'] ?? '';      email: data['email'] ?? '';      nom: data['nom'] ?? '';      prenom: data['prenom'] ?? '';      telephone: data['telephone'] ?? '';      compagnie: data['compagnie'] ?? '';      agence: data['agence'] ?? '';      gouvernorat: data['gouvernorat'] ?? '';      poste: data['poste'] ?? '';      numeroAgent: data['numeroAgent'] ?? '';      userType: data['userType'] ?? 'assureur';      statut: data['statut'] ?? 'en_attente';      dateCreation: (data['dateCreation';      adminTraitantId: data['adminTraitantId';      dateTraitement: (data['dateTraitement';      motifRefus: data['motifRefus';      commentaireAdmin: data['commentaireAdmin';      motDePasseTemporaire: data['motDePasseTemporaire'] ?? '';      documentsJoints: List<String>.from(data['documentsJoints';      'email';      'nom';      'prenom';      'telephone';      'compagnie';      'agence';      'gouvernorat';      'poste';      'numeroAgent';      'userType';      'statut';      'dateCreation';      'adminTraitantId';      'dateTraitement';      'motifRefus';      'commentaireAdmin';      'motDePasseTemporaire';      'documentsJoints';  bool get peutEtreTraitee => statut == 'en_attente';      case 'en_attente';      case 'en_cours_traitement';      case 'approuvee';      case 'refusee';  /// Obtenir l';      case 'en_attente';      case 'en_cours_traitement';      case 'approuvee';      case 'refusee';    return 'DemandeInscriptionModel(id: $id, email: $email, statut: $statut)';