import 'package:flutter/material.dart';import '../../services/agent_management_service.dart';import ';    _loadAgents(';  /// 📋 Charger les agents de l';    ';    if (result != null && result[';      if (mounted';          title: '🎉 Agent cree avec succes';            'nom': result['displayCredentials']['nom';            'email': result['displayCredentials']['email';            'password': result['displayCredentials']['password';            'agence': result['displayCredentials']['agence';            'role': ';                      ({_agents.length} agent(s') - ';                  icon: const Icon(Icons.info';                  label: const Text(';    ')')';  /// 👤 Carte d';    final stats = agent[';                const SizedBox(width: 12';                      ({agent['nom';                          const SizedBox(width: 8';                          const Text(';                          const SizedBox(width: 8')')';                          const Text(';                const SizedBox(width: 4')')';                Expanded(child: const Text(agent['email'] ?? ';                const SizedBox(width: 4';                const Text(agent['telephone'] ?? ';            const SizedBox(height: 12';                _buildStatChip('Constats', stats['total_constats]?.toString(') ?? ';                const SizedBox(width: 8';                _buildStatChip('Ce mois', stats['constats_ce_mois]?.toString(') ?? ';                const SizedBox(width: 8';                _buildStatChip('Score', stats['performance_score]?.toString(') ?? ';      ';      child: (value';            label: const Text(';    switch (action')')';      case ';        ScaffoldMessenger.of(context';          const SnackBar(content: const Text(';        ')')';      case ';        _resetAgentPassword(agent';      case ';  void _resetAgentPassword(Map<String, dynamic> agent';    final result = await AgentManagementService.resetAgentPassword(agent['id]';    if (result[';        builder: (context';          title: const Text('Mot de passe reinitialise')')';              ({agent['nom']}';              ({agent['email']}';              ({result['newPassword';              onPressed: () => Navigator.of(context).pop(';              child: const Text(';      builder: (context')')';        title: const Text('Desactiver l\')')'agent';        content: ({agent['nom';            onPressed: () => Navigator.of(context).pop(';            child: const Text(';              Navigator.of(context).pop(')')';              final result = await AgentManagementService.deactivateAgent(agent['id]';              if (result[';                  ScaffoldMessenger.of(context';                    const SnackBar(content: const Text(';            child: const Text('Action';    ')')';/// 🏗️ Dialog de creation d';                        validator: (value') => value?.isEmpty == true ? ';                        validator: (value') => value?.isEmpty == true ? ';                    if (value?.isEmpty == true') return 'Email requis';                    if (!RegExp(r^[\w-\.]+@([\w-]+\.')+[\w-]{2,4}').hasMatch(value!)';                      return ';                  validator: (value') => value?.isEmpty == true ? ';                const SizedBox(height: 16';                    hintText: ';          onPressed: _isCreating ? null : () => Navigator.of(context).pop(';          child: const Text(';                ')')';              : const Text(';        specialite: _specialiteController.text.trim(')')';            ? ';            : _specialiteController.text.trim(';        createdBy: ';        ScaffoldMessenger.of(context';