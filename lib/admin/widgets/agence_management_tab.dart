import 'package:flutter/material.dart';import '../../services/agence_management_service.dart';import '../../services/tunisia_hierarchy_service.dart';import '../../services/admin_compagnie_auth_service.dart';import ';        ScaffoldMessenger.of(context';          SnackBar(content: (e';    if (result != null && result[';        ScaffoldMessenger.of(context';          const SnackBar(content: const Text(';                      ({_agences.length} agence(s')')') - ';                  icon: const Icon(Icons.info';                  label: const Text(';    ')')';  /// üè™ Carte d';    final stats = agence[';                      ';                      ({agence['gouvernorat';                          const SizedBox(width: 8';                          const Text(';                    ')')';                    if (agence['adminUid'] == null || agence[';                      ';                        value: ';                            const SizedBox(width: 8';                            ({agence['adminNom'] ?? 'Non defini';                const SizedBox(width: 4';                const Text(agence['telephone'] ?? ';                const SizedBox(width: 4';                Expanded(child: const Text(agence['email'] ?? ';                const SizedBox(width: 4';                Expanded(child: const Text(agence['adresse'] ?? ';            const SizedBox(height: 12';                _buildStatChip('Agents', stats['total_agents]?.toString(') ?? ';                const SizedBox(width: 8';                _buildStatChip('Contrats', stats['total_contrats]?.toString(') ?? ';                const SizedBox(width: 8';                _buildStatChip('Sinistres', stats['total_sinistres]?.toString(') ?? ';      ';      child: (value';            label: const Text(';    switch (action')')';      case ';        ScaffoldMessenger.of(context';          const SnackBar(content: const Text(';        ')')';      case ';        _createAdminAgence(agence';      case ';        _showAdminInfo(agence';      case ';  Future<void> _createAdminAgence(Map<String, dynamic> agence';    // Verifier si l';    if (agence['adminUid'] != null && agence[';      ScaffoldMessenger.of(context';          content: ({agence['adminNom'] ?? agence['adminEmail';      builder: (context';        agenceId: agence['id';        agenceNom: agence[';    ';    if (result != null && result[';      if (mounted';          title: 'üéâ Admin Agence cree avec succes';            'nom': result['displayCredentials']['nom';            'email': result['displayCredentials']['email';            'password': result['displayCredentials']['password';            'agence': result['displayCredentials']['agence';            'role': ';        ';  /// üë§ Afficher les informations de l';        title: ({agence['nom']}';            ({agence['adminNom'] ?? 'Non defini'}';            ({agence['adminEmail'] ?? 'Non defini';            onPressed: () => Navigator.of(context).pop(';            child: const Text(';      builder: (context')')';        title: const Text('Desactiver l\')')'agence';        content: ({agence['nom';            onPressed: () => Navigator.of(context).pop(';            child: const Text(';              Navigator.of(context).pop(')')';              final result = await AgenceManagementService.deactivateAgence(agence['id]';              if (result[';                  ScaffoldMessenger.of(context';                    const SnackBar(content: const Text(';            child: const Text('Action';    ')')';/// üèóÔ∏è Dialog de creation d';      title: const Text(';                  validator: (value')')') => value?.isEmpty == true ? ';                  validator: (value') => value?.isEmpty == true ? ';                        validator: (value') => value?.isEmpty == true ? ';                        validator: (value') => value?.isEmpty == true ? ';                  validator: (value') => value?.isEmpty == true ? ';                    if (value?.isEmpty == true') return 'Email requis';                    if (!RegExp(r^[\w-\.]+@([\w-]+\.')+[\w-]{2,4}').hasMatch(value!)';                      return ';          onPressed: _isCreating ? null : () => Navigator.of(context).pop(';          child: const Text(';                ')')';              : const Text(';        ScaffoldMessenger.of(context')')';          SnackBar(content: (e';  Widget build(BuildContext context';      title: ({widget.agenceNom}';                        validator: (value) => value?.isEmpty == true ? ';                        validator: (value') => value?.isEmpty == true ? ';                    if (value?.isEmpty == true') return 'Email requis';                    if (!RegExp(r^[\w-\.]+@([\w-]+\.')+[\w-]{2,4}').hasMatch(value!)';                      return ';                  validator: (value') => value?.isEmpty == true ? ';          onPressed: _isCreating ? null : () => Navigator.of(context).pop(';          child: const Text(';                ')')';              : const Text(';        cin: _cinController.text.trim(')')';        createdBy: 'admin_compagnie', // TODO: Recuperer l';        ScaffoldMessenger.of(context';