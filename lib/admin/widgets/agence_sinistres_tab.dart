import ';  State<AgenceSinistresTab> createState() => _AgenceSinistresTabState(';  String _selectedFilter = ';    _loadSinistres(';  /// 📋 Charger les sinistres de l';        ScaffoldMessenger.of(context';          SnackBar(content: (e';        'id': 'SIN001';        'numero': 'SIN-2025-001';        'date': '2025-01-15';        'type': 'Automobile';        'status': 'nouveau';        'conducteur': 'Ahmed Ben Ali';        'agent': 'Mohamed Trabelsi';        'expert';        'description': 'Collision avec un autre vehicule';        'montant_estime';        'priorite': 'normale';        'id': 'SIN002';        'numero': 'SIN-2025-002';        'date': '2025-01-14';        'type': 'Habitation';        'status': 'en_cours';        'conducteur': 'Fatma Bouaziz';        'agent': 'Sami Gharbi';        'expert': 'Expert Habitation';        'description': 'Degât des eaux';        'montant_estime';        'priorite': 'urgente';        'id': 'SIN003';        'numero': 'SIN-2025-003';        'date': '2025-01-13';        'type': 'Automobile';        'status': 'termine';        'conducteur': 'Karim Mansouri';        'agent': 'Leila Sassi';        'expert': 'Expert Auto';        'description': 'Bris de glace';        'montant_estime';        'priorite': 'normale';    if (_selectedFilter == ';    return _sinistres.where((sinistre') => sinistre[';                          ({_filteredSinistres.length} sinistre(s') - ';                              ';                                value: ';                                child: const Text('Action';                              ';                                value: ';                                child: const Text('Action';                              ';                                value: ';                                child: const Text('Action';  Widget _buildSinistreCard(Map<String, dynamic> sinistre';    final status = sinistre['status';    final priorite = sinistre[';    switch (status';      case 'nouveau';      case 'en_cours';      case ';                          const SizedBox(width: 8';                          if (priorite == ';                      ';                      ({sinistre['date';                          const SizedBox(width: 8';                          const Text(';                          const SizedBox(width: 8')')';                          const Text(';                          const SizedBox(width: 8')')';                          const Text(';            const SizedBox(height: 12')')';              sinistre[';                const SizedBox(width: 4';                ({sinistre['conducteur';                const SizedBox(width: 4';                ({sinistre['agent';                const SizedBox(width: 16';                if (sinistre[';                  const SizedBox(width: 4';                  ({sinistre['expert';                const SizedBox(width: 4';                ({sinistre['montant_estime';    switch (action';      case ';        _showSinistreDetails(sinistre';      case ';        _showAssignExpertDialog(sinistre';      case ';      builder: (context';        title: ({sinistre['numero']}';              _buildDetailRow('Type', sinistre['type';              _buildDetailRow('Date', sinistre['date';              _buildDetailRow('Statut', sinistre['status';              _buildDetailRow('Conducteur', sinistre['conducteur';              _buildDetailRow('Agent', sinistre['agent';              _buildDetailRow('Expert', sinistre['expert'] ?? 'Non assigne';              _buildDetailRow('Description', sinistre['description';              _buildDetailRow('Montant estime', ''{sinistre['montant_estime']} TND';              _buildDetailRow('Priorite', sinistre[';            onPressed: () => Navigator.of(context).pop(';            child: const Text(';    ')')';  /// 👨‍🔧 Dialog d';      builder: (context';        title: const Text('Assigner un expert')')';        content: const Text(';            onPressed: () => Navigator.of(context).pop(')')';            child: const Text(';      builder: (context')')';        title: const Text('Changer le statut')')';        content: const Text(';            onPressed: () => Navigator.of(context).pop(')')';            child: const Text(';')')